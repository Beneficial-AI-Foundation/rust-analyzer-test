<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: call_graph Pages: 1 -->
<svg width="542pt" height="477pt"
 viewBox="0.00 0.00 542.00 477.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 473)">
<title>call_graph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-473 538,-473 538,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" points="8,-8 8,-461 526,-461 526,-8 8,-8"/>
<text text-anchor="middle" x="267" y="-445.8" font-family="Helvetica,sans-Serif" font-size="14.00">file:///home/lacra/git_repos/quicksort_rust/srcq</text>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_empty(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_empty().</title>
<g id="a_node1"><a xlink:title=" &#160;&#160;&#160;fn test_quick_empty() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in:Vec&lt;i32&gt; = vec![]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, &amp;[]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="172.5,-430 34.5,-430 34.5,-394 172.5,-394 172.5,-430"/>
<text text-anchor="middle" x="103.5" y="-408.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_empty</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort().</title>
<g id="a_node7"><a xlink:title="pub fn quick_sort&lt;T: PartialOrd&gt;(input: &amp;mut [T]) { &#160;&#160;&#160;&#160;if input.len() &gt; 1 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let pivot = lomuto_partition(input); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_sort(&amp;mut input[..pivot]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_sort(&amp;mut input[pivot +...">
<polygon fill="lightblue" stroke="black" points="333.5,-376 245.5,-376 245.5,-340 333.5,-340 333.5,-376"/>
<text text-anchor="middle" x="289.5" y="-354.3" font-family="Helvetica,sans-Serif" font-size="14.00">quick_sort</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_empty().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_empty().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort().</title>
<path fill="none" stroke="gray" d="M166.03,-393.94C188.58,-387.32 213.9,-379.89 235.63,-373.52"/>
<polygon fill="gray" stroke="gray" points="236.73,-376.84 245.34,-370.67 234.76,-370.12 236.73,-376.84"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 lomuto_partition(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 lomuto_partition().</title>
<g id="a_node2"><a xlink:title="fn lomuto_partition&lt;T: PartialOrd&gt;(input: &amp;mut [T]) &#45;&gt; usize { &#160;&#160;&#160;&#160;let pivot = input.len() &#45; 1; &#160;&#160;&#160;&#160;let mut swap = 0; &#160;&#160;&#160;&#160;for i in 0..pivot { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if input[i] &lt; input[pivot] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if swap !...">
<polygon fill="lightblue" stroke="black" points="518,-376 388,-376 388,-340 518,-340 518,-376"/>
<text text-anchor="middle" x="453" y="-354.3" font-family="Helvetica,sans-Serif" font-size="14.00">lomuto_partition</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().</title>
<g id="a_node3"><a xlink:title="pub fn quick_dual_sort&lt;T: PartialOrd + Copy&gt;(input: &amp;mut [T]) { &#160;&#160;&#160;&#160;if input.len() &lt; 2 {return;} &#160;&#160;&#160;&#160;dual_pivot(input, 0, input.len() &#45; 1); }">
<polygon fill="lightblue" stroke="black" points="352,-160 227,-160 227,-124 352,-124 352,-160"/>
<text text-anchor="middle" x="289.5" y="-138.3" font-family="Helvetica,sans-Serif" font-size="14.00">quick_dual_sort</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 dual_pivot(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 dual_pivot().</title>
<g id="a_node8"><a xlink:title="fn dual_pivot&lt;T: PartialOrd + Copy&gt;(input: &amp;mut [T], start: usize, end: usize) { &#160;&#160;&#160;&#160;if start &gt;= end {return;} &#160;&#160;&#160;&#160;if input[start] &gt; input[end] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;input.swap(start, end); &#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;let lpivot =...">
<polygon fill="lightblue" stroke="black" points="497,-160 409,-160 409,-124 497,-124 497,-160"/>
<text text-anchor="middle" x="453" y="-138.3" font-family="Helvetica,sans-Serif" font-size="14.00">dual_pivot</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 dual_pivot(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 dual_pivot().</title>
<path fill="none" stroke="gray" d="M352.02,-142C367.37,-142 383.71,-142 398.63,-142"/>
<polygon fill="gray" stroke="gray" points="398.71,-145.5 408.71,-142 398.71,-138.5 398.71,-145.5"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;fn test_quick_dual() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in = vec![10, 20, 11, 24]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_dual_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, vec![10, 11, 20, 24]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="165.5,-268 41.5,-268 41.5,-232 165.5,-232 165.5,-268"/>
<text text-anchor="middle" x="103.5" y="-246.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_dual</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().</title>
<path fill="none" stroke="gray" d="M165.76,-234.18C174.46,-231 183.12,-227.28 191,-223 218.24,-208.19 245.02,-185.16 263.61,-167.43"/>
<polygon fill="gray" stroke="gray" points="266.32,-169.67 271.05,-160.19 261.44,-164.66 266.32,-169.67"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;fn test_quick() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in = vec![10, 20, 11, 24]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, vec![10, 11, 20, 24]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="147,-376 60,-376 60,-340 147,-340 147,-376"/>
<text text-anchor="middle" x="103.5" y="-354.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort().</title>
<path fill="none" stroke="gray" d="M147.18,-358C173.46,-358 207.37,-358 235.39,-358"/>
<polygon fill="gray" stroke="gray" points="235.42,-361.5 245.42,-358 235.42,-354.5 235.42,-361.5"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_empty(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_empty().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;fn test_quick_dual_empty() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in:Vec&lt;i32&gt; = vec![]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_dual_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, &amp;[]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="191,-214 16,-214 16,-178 191,-178 191,-214"/>
<text text-anchor="middle" x="103.5" y="-192.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_dual_empty</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_empty().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_empty().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().</title>
<path fill="none" stroke="gray" d="M166.03,-177.94C182.44,-173.13 200.32,-167.88 217.22,-162.92"/>
<polygon fill="gray" stroke="gray" points="218.42,-166.21 227.03,-160.04 216.45,-159.5 218.42,-166.21"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 lomuto_partition(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 lomuto_partition().</title>
<path fill="none" stroke="gray" d="M333.78,-358C347.29,-358 362.6,-358 377.62,-358"/>
<polygon fill="gray" stroke="gray" points="377.94,-361.5 387.94,-358 377.94,-354.5 377.94,-361.5"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_len1(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_len1().</title>
<g id="a_node9"><a xlink:title=" &#160;&#160;&#160;fn test_quick_len1() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in = vec![1]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, vec![1]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="165.5,-322 41.5,-322 41.5,-286 165.5,-286 165.5,-322"/>
<text text-anchor="middle" x="103.5" y="-300.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_len1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_len1().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_len1().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_sort().</title>
<path fill="none" stroke="gray" d="M165.51,-321.91C188.19,-328.56 213.72,-336.05 235.61,-342.48"/>
<polygon fill="gray" stroke="gray" points="234.81,-345.89 245.39,-345.35 236.78,-339.17 234.81,-345.89"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_two_elem(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_two_elem().</title>
<g id="a_node10"><a xlink:title=" &#160;&#160;&#160;fn test_quick_two_elem() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in = [20, 10]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_dual_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, [10, 20]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="183,-160 24,-160 24,-124 183,-124 183,-160"/>
<text text-anchor="middle" x="103.5" y="-138.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_two_elem</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_two_elem().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_two_elem().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().</title>
<path fill="none" stroke="gray" d="M183.07,-142C194.28,-142 205.77,-142 216.85,-142"/>
<polygon fill="gray" stroke="gray" points="216.88,-145.5 226.88,-142 216.88,-138.5 216.88,-145.5"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_longer(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_longer().</title>
<g id="a_node11"><a xlink:title=" &#160;&#160;&#160;fn test_quick_dual_longer() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in = [10, 20, 11, 24, 22, 21, 19]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_dual_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, [10, 11, 19, 20, 21, 22, 24]); ...">
<polygon fill="lightblue" stroke="black" points="191,-106 16,-106 16,-70 191,-70 191,-106"/>
<text text-anchor="middle" x="103.5" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_dual_longer</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_longer().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_longer().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().</title>
<path fill="none" stroke="gray" d="M166.03,-106.06C182.44,-110.87 200.32,-116.12 217.22,-121.08"/>
<polygon fill="gray" stroke="gray" points="216.45,-124.5 227.03,-123.96 218.42,-117.79 216.45,-124.5"/>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_len1(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_len1().</title>
<g id="a_node12"><a xlink:title=" &#160;&#160;&#160;fn test_quick_dual_len1() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut vector_in = vec![1]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;quick_dual_sort(&amp;mut vector_in); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(vector_in, vec![1]); &#160;&#160;&#160;&#160;}">
<polygon fill="lightblue" stroke="black" points="184,-52 23,-52 23,-16 184,-16 184,-52"/>
<text text-anchor="middle" x="103.5" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_quick_dual_len1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_len1().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo quicksort_rust 0.1.0 tests/test_quick_dual_len1().&#45;&gt;rust&#45;analyzer cargo quicksort_rust 0.1.0 quick_dual_sort().</title>
<path fill="none" stroke="gray" d="M171.7,-52.08C178.37,-54.73 184.92,-57.69 191,-61 218.24,-75.81 245.02,-98.84 263.61,-116.57"/>
<polygon fill="gray" stroke="gray" points="261.44,-119.34 271.05,-123.81 266.32,-114.33 261.44,-119.34"/>
</g>
</g>
</svg>
