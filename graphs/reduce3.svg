<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="1839pt" height="5071pt"
 viewBox="0.00 0.00 1839.00 5071.34" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 5067.34)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-5067.34 1835,-5067.34 1835,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" points="521.5,-3388.88 521.5,-3517.88 686.5,-3517.88 686.5,-3388.88 521.5,-3388.88"/>
<text text-anchor="middle" x="604" y="-3502.68" font-family="Helvetica,sans-Serif" font-size="14.00">dalek_benchmarks.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" points="949.5,-625.88 949.5,-700.88 1146.5,-700.88 1146.5,-625.88 949.5,-625.88"/>
<text text-anchor="middle" x="1048" y="-685.68" font-family="Helvetica,sans-Serif" font-size="14.00">pippenger.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1519.5,-3265.88 1519.5,-3448.88 1823,-3448.88 1823,-3265.88 1519.5,-3265.88"/>
<text text-anchor="middle" x="1671.25" y="-3433.68" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1294,-3070.88 1294,-3145.88 1469,-3145.88 1469,-3070.88 1294,-3070.88"/>
<text text-anchor="middle" x="1381.5" y="-3130.68" font-family="Helvetica,sans-Serif" font-size="14.00">constants.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightgrey" stroke="lightgrey" points="832,-776.88 832,-2147.88 1479,-2147.88 1479,-776.88 832,-776.88"/>
<text text-anchor="middle" x="1155.5" y="-2132.68" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightgrey" stroke="lightgrey" points="955,-3456.88 955,-3659.88 1610,-3659.88 1610,-3456.88 955,-3456.88"/>
<text text-anchor="middle" x="1282.5" y="-3644.68" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightgrey" stroke="lightgrey" points="982.5,-3135.88 982.5,-3210.88 1113.5,-3210.88 1113.5,-3135.88 982.5,-3135.88"/>
<text text-anchor="middle" x="1048" y="-3195.68" font-family="Helvetica,sans-Serif" font-size="14.00">jacobi_quartic.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightgrey" stroke="lightgrey" points="498.5,-2944.88 498.5,-3127.88 1111.5,-3127.88 1111.5,-2944.88 498.5,-2944.88"/>
<text text-anchor="middle" x="805" y="-3112.68" font-family="Helvetica,sans-Serif" font-size="14.00">lizard_ristretto.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightgrey" stroke="lightgrey" points="412.5,-2155.88 412.5,-2770.88 1428.5,-2770.88 1428.5,-2155.88 412.5,-2155.88"/>
<text text-anchor="middle" x="920.5" y="-2755.68" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightgrey" stroke="lightgrey" points="396,-3674.88 396,-4397.88 1420.5,-4397.88 1420.5,-3674.88 396,-3674.88"/>
<text text-anchor="middle" x="908.25" y="-4382.68" font-family="Helvetica,sans-Serif" font-size="14.00">ristretto.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1001,-542.88 1001,-617.88 1095,-617.88 1095,-542.88 1001,-542.88"/>
<text text-anchor="middle" x="1048" y="-602.68" font-family="Helvetica,sans-Serif" font-size="14.00">signing.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightgrey" stroke="lightgrey" points="533,-420.88 533,-603.88 675,-603.88 675,-420.88 533,-420.88"/>
<text text-anchor="middle" x="604" y="-588.68" font-family="Helvetica,sans-Serif" font-size="14.00">verifying.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightgrey" stroke="lightgrey" points="548.5,-223.88 548.5,-352.88 1131.5,-352.88 1131.5,-223.88 548.5,-223.88"/>
<text text-anchor="middle" x="840" y="-337.68" font-family="Helvetica,sans-Serif" font-size="14.00">ed25519.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightgrey" stroke="lightgrey" points="560,-2018.88 560,-2147.88 648,-2147.88 648,-2018.88 560,-2018.88"/>
<text text-anchor="middle" x="604" y="-2132.68" font-family="Helvetica,sans-Serif" font-size="14.00">x25519.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightgrey" stroke="lightgrey" points="428.5,-1935.88 428.5,-2010.88 779.5,-2010.88 779.5,-1935.88 428.5,-1935.88"/>
<text text-anchor="middle" x="604" y="-1995.68" font-family="Helvetica,sans-Serif" font-size="14.00">x25519_tests.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightgrey" stroke="lightgrey" points="552,-1852.88 552,-1927.88 656,-1927.88 656,-1852.88 552,-1852.88"/>
<text text-anchor="middle" x="604" y="-1912.68" font-family="Helvetica,sans-Serif" font-size="14.00">ed_to_xed.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightgrey" stroke="lightgrey" points="521,-692.88 521,-821.88 687,-821.88 687,-692.88 521,-692.88"/>
<text text-anchor="middle" x="604" y="-806.68" font-family="Helvetica,sans-Serif" font-size="14.00">curve25519.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightgrey" stroke="lightgrey" points="445,-47.88 445,-176.88 1112.5,-176.88 1112.5,-47.88 445,-47.88"/>
<text text-anchor="middle" x="778.75" y="-161.68" font-family="Helvetica,sans-Serif" font-size="14.00">vrf.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightgrey" stroke="lightgrey" points="227.5,-4848.88 227.5,-4923.88 661,-4923.88 661,-4848.88 227.5,-4848.88"/>
<text text-anchor="middle" x="444.25" y="-4908.68" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightgrey" stroke="lightgrey" points="218.5,-4405.88 218.5,-4642.88 660.5,-4642.88 660.5,-4405.88 218.5,-4405.88"/>
<text text-anchor="middle" x="439.5" y="-4627.68" font-family="Helvetica,sans-Serif" font-size="14.00">lib.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightgrey" stroke="lightgrey" points="17.5,-4899.88 17.5,-5028.88 121.5,-5028.88 121.5,-4899.88 17.5,-4899.88"/>
<text text-anchor="middle" x="69.5" y="-5013.68" font-family="Helvetica,sans-Serif" font-size="14.00">username.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightgrey" stroke="lightgrey" points="8,-4656.88 8,-4839.88 376,-4839.88 376,-4656.88 8,-4656.88"/>
<text text-anchor="middle" x="192" y="-4824.68" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust23" class="cluster">
<title>cluster_22</title>
<polygon fill="lightgrey" stroke="lightgrey" points="168.5,-2944.88 168.5,-3019.88 358.5,-3019.88 358.5,-2944.88 168.5,-2944.88"/>
<text text-anchor="middle" x="263.5" y="-3004.68" font-family="Helvetica,sans-Serif" font-size="14.00">profile_key_encryption.rs</text>
</g>
<g id="clust24" class="cluster">
<title>cluster_23</title>
<polygon fill="lightgrey" stroke="lightgrey" points="536,-2861.88 536,-2936.88 673,-2936.88 673,-2861.88 536,-2861.88"/>
<text text-anchor="middle" x="604.5" y="-2921.68" font-family="Helvetica,sans-Serif" font-size="14.00">uid_encryption.rs</text>
</g>
<g id="clust25" class="cluster">
<title>cluster_24</title>
<polygon fill="lightgrey" stroke="lightgrey" points="528.5,-2778.88 528.5,-2853.88 679.5,-2853.88 679.5,-2778.88 528.5,-2778.88"/>
<text text-anchor="middle" x="604" y="-2838.68" font-family="Helvetica,sans-Serif" font-size="14.00">integration_tests.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto_benches/compress(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto_benches/compress().</title>
<g id="a_node1"><a xlink:title=" &#160;&#160;&#160;fn compress&lt;M: Measurement&gt;(c: &amp;mut BenchmarkGroup&lt;M&gt;) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.bench_function(&#39; RistrettoPoint compression&#39; , |b| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let B = &amp;constants::RISTRETTO_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b.ite...">
<polygon fill="white" stroke="black" points="645.5,-3486.88 562.5,-3486.88 562.5,-3450.88 645.5,-3450.88 645.5,-3486.88"/>
<text text-anchor="middle" x="604" y="-3465.18" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<g id="a_node66"><a xlink:title=" &#160;&#160;&#160;pub fn compress(&amp;self) &#45;&gt; CompressedRistretto { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut X = self.0.X; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut Y = self.0.Y; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Z = &amp;self.0.Z; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let T = &amp;self.0.T; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let u1 = &amp;(Z + &amp;Y) * &amp;(Z ...">
<polygon fill="white" stroke="black" points="1089.5,-4312.88 1006.5,-4312.88 1006.5,-4276.88 1089.5,-4276.88 1089.5,-4312.88"/>
<text text-anchor="middle" x="1048" y="-4291.18" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto_benches/compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto_benches/compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M631.8,-3486.95C676.12,-3518.47 763.75,-3588.09 804,-3670.88 846.91,-3759.13 802.29,-3796.36 832,-3889.88 880.47,-4042.46 985.47,-4205.25 1028.27,-4268.05"/>
<polygon fill="gray" stroke="gray" points="1025.58,-4270.31 1034.12,-4276.58 1031.35,-4266.35 1025.58,-4270.31"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards_benches/compress(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards_benches/compress().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;fn compress&lt;M: Measurement&gt;(c: &amp;mut BenchmarkGroup&lt;M&gt;) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let B = &amp;constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c.bench_function(&#39; EdwardsPoint compression&#39; , move |b| b.iter(|| B.compress()...">
<polygon fill="white" stroke="black" points="645.5,-3432.88 562.5,-3432.88 562.5,-3396.88 645.5,-3396.88 645.5,-3432.88"/>
<text text-anchor="middle" x="604" y="-3411.18" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<g id="a_node29"><a xlink:title=" &#160;&#160;&#160;pub fn compress(&amp;self) &#45;&gt; CompressedEdwardsY { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let recip = self.Z.invert(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x = &amp;self.X * &amp;recip; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let y = &amp;self.Y * &amp;recip; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s: [u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s = y....">
<polygon fill="white" stroke="black" points="1423,-1225.88 1340,-1225.88 1340,-1189.88 1423,-1189.88 1423,-1225.88"/>
<text text-anchor="middle" x="1381.5" y="-1204.18" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards_benches/compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards_benches/compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M631.28,-3396.82C672.25,-3369.53 754.7,-3318.11 832,-3290.88 1012.57,-3227.28 1130.85,-3359.76 1256,-3214.88 1297.53,-3166.8 1287.76,-2135.27 1292,-2071.88 1314.03,-1742.43 1363.13,-1344.41 1376.87,-1236.19"/>
<polygon fill="gray" stroke="gray" points="1380.36,-1236.44 1378.15,-1226.08 1373.42,-1235.56 1380.36,-1236.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/pippenger/test/test_vartime_pippenger(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/pippenger/test/test_vartime_pippenger().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn test_vartime_pippenger() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Reuse points across different tests &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut n = 512; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x = Scalar::from(2128506u64).invert(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let y = Scalar::from(4443282u64).in...">
<polygon fill="white" stroke="black" points="1138.5,-669.88 957.5,-669.88 957.5,-633.88 1138.5,-633.88 1138.5,-669.88"/>
<text text-anchor="middle" x="1048" y="-648.18" font-family="Helvetica,sans-Serif" font-size="14.00">test_vartime_pippenger</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/pippenger/test/test_vartime_pippenger().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/pippenger/test/test_vartime_pippenger().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1138.51,-654.5C1179.37,-660.29 1225.37,-674 1256,-704.88 1324.33,-773.76 1365.9,-1083.63 1377.29,-1179.51"/>
<polygon fill="gray" stroke="gray" points="1373.84,-1180.09 1378.48,-1189.62 1380.79,-1179.28 1373.84,-1180.09"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][Neg]neg(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][Neg]neg().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;fn neg(self) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut output = *self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;output.negate(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;output &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1581.5,-3417.88 1527.5,-3417.88 1527.5,-3381.88 1581.5,-3381.88 1581.5,-3417.88"/>
<text text-anchor="middle" x="1554.5" y="-3396.18" font-family="Helvetica,sans-Serif" font-size="14.00">neg</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]negate(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]negate().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;pub fn negate(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// See commentary in the Sub impl &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let neg = FieldElement51::reduce([ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;36028797018963664u64 &#45; self.0[0], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;36028797018963952u64 &#45; sel...">
<polygon fill="white" stroke="black" points="1709,-3417.88 1644,-3417.88 1644,-3381.88 1709,-3381.88 1709,-3417.88"/>
<text text-anchor="middle" x="1676.5" y="-3396.18" font-family="Helvetica,sans-Serif" font-size="14.00">negate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][Neg]neg().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]negate(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][Neg]neg().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]negate().</title>
<path fill="none" stroke="gray" d="M1581.54,-3399.88C1596.72,-3399.88 1616.23,-3399.88 1633.54,-3399.88"/>
<polygon fill="gray" stroke="gray" points="1633.97,-3403.38 1643.97,-3399.88 1633.97,-3396.38 1633.97,-3403.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;pub fn as_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Let h = limbs[0] + limbs[1]*2^51 + ... + limbs[4]*2^204. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Write h = pq + r with 0 &lt;= r &lt; p. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We want to co...">
<polygon fill="white" stroke="black" points="1715,-3363.88 1638,-3363.88 1638,-3327.88 1715,-3327.88 1715,-3363.88"/>
<text text-anchor="middle" x="1676.5" y="-3342.18" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<g id="a_node8"><a xlink:title=" &#160;&#160;&#160;fn reduce(mut limbs: [u64; 5]) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const LOW_51_BIT_MASK: u64 = (1u64 &lt;&lt; 51) &#45; 1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Since the input limbs are bounded by 2^64, the biggest &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// carry&#45;out is...">
<polygon fill="lightblue" stroke="black" points="1815,-3363.88 1751,-3363.88 1751,-3327.88 1815,-3327.88 1815,-3363.88"/>
<text text-anchor="middle" x="1783" y="-3342.18" font-family="Helvetica,sans-Serif" font-size="14.00">reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<path fill="none" stroke="gray" d="M1715.23,-3345.88C1723.54,-3345.88 1732.38,-3345.88 1740.83,-3345.88"/>
<polygon fill="gray" stroke="gray" points="1740.86,-3349.38 1750.86,-3345.88 1740.86,-3342.38 1740.86,-3349.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][`Sub&lt;&amp;FieldElement51&gt;`]sub(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][`Sub&lt;&amp;FieldElement51&gt;`]sub().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;fn sub(self, _rhs: &amp;&#39;b FieldElement51) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// To avoid underflow, first add a multiple of p. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Choose 16*p = p &lt;&lt; 4 to be larger than 54&#45;bit _rhs. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1703.5,-3309.88 1649.5,-3309.88 1649.5,-3273.88 1703.5,-3273.88 1703.5,-3309.88"/>
<text text-anchor="middle" x="1676.5" y="-3288.18" font-family="Helvetica,sans-Serif" font-size="14.00">sub</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][`Sub&lt;&amp;FieldElement51&gt;`]sub().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[`&amp;FieldElement51`][`Sub&lt;&amp;FieldElement51&gt;`]sub().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<path fill="none" stroke="gray" d="M1703.6,-3305.37C1715.08,-3311.3 1728.83,-3318.4 1741.59,-3325"/>
<polygon fill="gray" stroke="gray" points="1740.16,-3328.2 1750.65,-3329.68 1743.38,-3321.98 1740.16,-3328.2"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]negate().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]negate().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<path fill="none" stroke="gray" d="M1709.14,-3383.53C1719.46,-3378.2 1731.07,-3372.2 1741.93,-3366.59"/>
<polygon fill="gray" stroke="gray" points="1743.55,-3369.69 1750.83,-3361.99 1740.34,-3363.47 1743.55,-3369.69"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 constants/test/test_sqrt_minus_one(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 constants/test/test_sqrt_minus_one().</title>
<g id="a_node9"><a xlink:title=" &#160;&#160;&#160;fn test_sqrt_minus_one() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let minus_one = FieldElement::MINUS_ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let sqrt_m1_sq = &amp;constants::SQRT_M1 * &amp;constants::SQRT_M1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(minus_one, sqrt_m1_sq); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a...">
<polygon fill="white" stroke="black" points="1461,-3114.88 1302,-3114.88 1302,-3078.88 1461,-3078.88 1461,-3114.88"/>
<text text-anchor="middle" x="1381.5" y="-3093.18" font-family="Helvetica,sans-Serif" font-size="14.00">test_sqrt_minus_one</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<g id="a_node44"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn is_negative(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes = self.as_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(bytes[0] &amp; 1).into() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1602,-3608.88 1507,-3608.88 1507,-3572.88 1602,-3572.88 1602,-3608.88"/>
<text text-anchor="middle" x="1554.5" y="-3587.18" font-family="Helvetica,sans-Serif" font-size="14.00">is_negative</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 constants/test/test_sqrt_minus_one().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 constants/test/test_sqrt_minus_one().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1390.19,-3114.94C1408.05,-3157.44 1452.78,-3267.43 1479,-3362.88 1496.62,-3427.01 1483.9,-3447.51 1507,-3509.88 1514.11,-3529.07 1525.51,-3549.03 1535.25,-3564.33"/>
<polygon fill="gray" stroke="gray" points="1532.35,-3566.3 1540.74,-3572.77 1538.21,-3562.48 1532.35,-3566.3"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_vs_basepoint2(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_vs_basepoint2().</title>
<g id="a_node10"><a xlink:title=" &#160;&#160;&#160;fn basepoint_plus_basepoint_vs_basepoint2() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp = constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp_added = bp + bp; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(bp_added.compress(), BASE2_CMPRSSD); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1199,-1090.88 897,-1090.88 897,-1054.88 1199,-1054.88 1199,-1090.88"/>
<text text-anchor="middle" x="1048" y="-1069.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_plus_basepoint_vs_basepoint2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1199.18,-1081.86C1218.8,-1086.08 1238.23,-1091.9 1256,-1099.88 1297.92,-1118.71 1336.25,-1156.42 1358.99,-1181.91"/>
<polygon fill="gray" stroke="gray" points="1356.59,-1184.49 1365.81,-1189.72 1361.87,-1179.89 1356.59,-1184.49"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalar_mul_vs_ed25519py(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalar_mul_vs_ed25519py().</title>
<g id="a_node11"><a xlink:title=" &#160;&#160;&#160;fn scalar_mul_vs_ed25519py() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aB = constants::ED25519_BASEPOINT_POINT * A_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(aB.compress(), A_TIMES_BASEPOINT); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1148,-1036.88 948,-1036.88 948,-1000.88 1148,-1000.88 1148,-1036.88"/>
<text text-anchor="middle" x="1048" y="-1015.18" font-family="Helvetica,sans-Serif" font-size="14.00">scalar_mul_vs_ed25519py</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalar_mul_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalar_mul_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1148.04,-1016.34C1184.02,-1019.28 1223.73,-1027.29 1256,-1045.88 1310.6,-1077.33 1349.37,-1143.13 1367.99,-1180.47"/>
<polygon fill="gray" stroke="gray" points="1364.98,-1182.28 1372.5,-1189.75 1371.28,-1179.23 1364.98,-1182.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/compressed_identity(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/compressed_identity().</title>
<g id="a_node12"><a xlink:title=" &#160;&#160;&#160;fn compressed_identity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint::identity().compress(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CompressedEdwardsY::identity() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1128,-982.88 968,-982.88 968,-946.88 1128,-946.88 1128,-982.88"/>
<text text-anchor="middle" x="1048" y="-961.18" font-family="Helvetica,sans-Serif" font-size="14.00">compressed_identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/compressed_identity().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/compressed_identity().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1128.04,-959.11C1169.29,-959.86 1218.78,-967.02 1256,-991.88 1323.74,-1037.12 1359.17,-1132.57 1373.18,-1179.97"/>
<polygon fill="gray" stroke="gray" points="1369.81,-1180.93 1375.92,-1189.58 1376.55,-1179.01 1369.81,-1180.93"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_double_vs_basepoint2(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_double_vs_basepoint2().</title>
<g id="a_node13"><a xlink:title=" &#160;&#160;&#160;fn basepoint_double_vs_basepoint2() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::ED25519_BASEPOINT_POINT.double().compress(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BASE2_CMPRSSD &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1170.5,-928.88 925.5,-928.88 925.5,-892.88 1170.5,-892.88 1170.5,-928.88"/>
<text text-anchor="middle" x="1048" y="-907.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_double_vs_basepoint2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_double_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_double_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1170.55,-906.64C1200.76,-910.73 1231.48,-919.84 1256,-937.88 1337.25,-997.65 1367,-1123.48 1376.53,-1179.71"/>
<polygon fill="gray" stroke="gray" points="1373.09,-1180.35 1378.13,-1189.67 1380,-1179.24 1373.09,-1180.35"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables_unreduced_scalar(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables_unreduced_scalar().</title>
<g id="a_node14"><a xlink:title=" &#160;&#160;&#160;fn basepoint_tables_unreduced_scalar() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = &amp;constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a = crate::scalar::test::LARGEST_UNREDUCED_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let table_radix16 = EdwardsBas...">
<polygon fill="white" stroke="black" points="1179.5,-874.88 916.5,-874.88 916.5,-838.88 1179.5,-838.88 1179.5,-874.88"/>
<text text-anchor="middle" x="1048" y="-853.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_tables_unreduced_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables_unreduced_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables_unreduced_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1179.73,-852.84C1207.14,-857.48 1234.29,-866.79 1256,-883.88 1351.12,-958.75 1373.62,-1115.62 1378.9,-1179.7"/>
<polygon fill="gray" stroke="gray" points="1375.42,-1180.14 1379.65,-1189.85 1382.4,-1179.62 1375.42,-1180.14"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_affine_niels_vs_basepoint2(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_affine_niels_vs_basepoint2().</title>
<g id="a_node15"><a xlink:title=" &#160;&#160;&#160;fn basepoint_plus_basepoint_affine_niels_vs_basepoint2() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp = constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp_affine_niels = bp.as_affine_niels(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp_added = (&amp;bp + &amp;b...">
<polygon fill="white" stroke="black" points="1241.5,-820.88 854.5,-820.88 854.5,-784.88 1241.5,-784.88 1241.5,-820.88"/>
<text text-anchor="middle" x="1048" y="-799.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_plus_basepoint_affine_niels_vs_basepoint2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_affine_niels_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_affine_niels_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1241.89,-819.83C1246.81,-822.84 1251.53,-826.18 1256,-829.88 1365.12,-920.16 1379.32,-1108.2 1380.64,-1179.58"/>
<polygon fill="gray" stroke="gray" points="1377.14,-1179.66 1380.75,-1189.62 1384.14,-1179.58 1377.14,-1179.66"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint16_vs_mul_by_pow_2_4(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint16_vs_mul_by_pow_2_4().</title>
<g id="a_node16"><a xlink:title=" &#160;&#160;&#160;fn basepoint16_vs_mul_by_pow_2_4() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp16 = constants::ED25519_BASEPOINT_POINT.mul_by_pow_2(4); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(bp16.compress(), BASE16_CMPRSSD); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1172.5,-1954.88 923.5,-1954.88 923.5,-1918.88 1172.5,-1918.88 1172.5,-1954.88"/>
<text text-anchor="middle" x="1048" y="-1933.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint16_vs_mul_by_pow_2_4</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint16_vs_mul_by_pow_2_4().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint16_vs_mul_by_pow_2_4().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1172.61,-1945.35C1203.24,-1941.34 1233.66,-1931.22 1256,-1909.88 1355.49,-1814.85 1376.07,-1355.48 1379.77,-1236.22"/>
<polygon fill="gray" stroke="gray" points="1383.27,-1236.16 1380.07,-1226.06 1376.27,-1235.95 1383.27,-1236.16"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve().</title>
<g id="a_node17"><a xlink:title=" &#160;&#160;&#160;pub fn nonspec_map_to_curve&lt;D&gt;(bytes: &amp;[u8]) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;D: Digest&lt;OutputSize = U64&gt; + Default, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut hash = D::new(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hash.update(bytes); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let...">
<polygon fill="white" stroke="black" points="1471,-2116.88 1292,-2116.88 1292,-2080.88 1471,-2080.88 1471,-2116.88"/>
<text text-anchor="middle" x="1381.5" y="-2095.18" font-family="Helvetica,sans-Serif" font-size="14.00">nonspec_map_to_curve</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().</title>
<g id="a_node57"><a xlink:title=" &#160;&#160;&#160;pub fn to_edwards(&amp;self, sign: u8) &#45;&gt; Option&lt;EdwardsPoint&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// To decompress the Montgomery u coordinate to an &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// `EdwardsPoint`, we apply the birational map to obtain the &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1095.5,-2415.88 1000.5,-2415.88 1000.5,-2379.88 1095.5,-2379.88 1095.5,-2415.88"/>
<text text-anchor="middle" x="1048" y="-2394.18" font-family="Helvetica,sans-Serif" font-size="14.00">to_edwards</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().</title>
<path fill="none" stroke="gray" d="M1345.57,-2117.1C1328.72,-2126.55 1308.62,-2138.83 1292,-2151.88 1201.83,-2222.66 1110.98,-2324.72 1070.63,-2372.01"/>
<polygon fill="gray" stroke="gray" points="1067.95,-2369.77 1064.14,-2379.66 1073.28,-2374.3 1067.95,-2369.77"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().</title>
<g id="a_node60"><a xlink:title="pub(crate) fn elligator_encode(r_0: &amp;FieldElement) &#45;&gt; MontgomeryPoint { &#160;&#160;&#160;&#160;let one = FieldElement::ONE; &#160;&#160;&#160;&#160;let d_1 = &amp;one + &amp;r_0.square2(); /* 2r^2 */ &#160;&#160;&#160;&#160;&#160;let d = &amp;MONTGOMERY_A_NEG * &amp;(d_1.invert()...">
<polygon fill="white" stroke="black" points="1113,-2739.88 983,-2739.88 983,-2703.88 1113,-2703.88 1113,-2739.88"/>
<text text-anchor="middle" x="1048" y="-2718.18" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_encode</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().</title>
<path fill="none" stroke="gray" d="M1332.37,-2116.91C1316.89,-2125.17 1301.34,-2136.6 1292,-2151.88 1228.92,-2255.06 1338.75,-2606.7 1256,-2694.88 1222.91,-2730.14 1168.1,-2735.98 1123.18,-2733.49"/>
<polygon fill="gray" stroke="gray" points="1123.39,-2730 1113.17,-2732.79 1122.91,-2736.98 1123.39,-2730"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/elligator_signal_test_vectors(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/elligator_signal_test_vectors().</title>
<g id="a_node18"><a xlink:title=" &#160;&#160;&#160;fn elligator_signal_test_vectors() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for vector in test_vectors().iter() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let input = hex::decode(vector[0]).unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let output = hex::decode(vector[1]).unwrap()...">
<polygon fill="white" stroke="black" points="1154,-2008.88 942,-2008.88 942,-1972.88 1154,-1972.88 1154,-2008.88"/>
<text text-anchor="middle" x="1048" y="-1987.18" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_signal_test_vectors</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/elligator_signal_test_vectors().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/elligator_signal_test_vectors().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]nonspec_map_to_curve().</title>
<path fill="none" stroke="gray" d="M1154.1,-1995.44C1187.44,-1999.29 1223.95,-2006.06 1256,-2017.88 1291.49,-2030.97 1327.19,-2055.65 1351.21,-2074.35"/>
<polygon fill="gray" stroke="gray" points="1349.18,-2077.21 1359.19,-2080.68 1353.53,-2071.73 1349.18,-2077.21"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/elligator_signal_test_vectors().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/elligator_signal_test_vectors().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1154.22,-2001.25C1190.79,-1999.18 1229.3,-1989.7 1256,-1963.88 1362.86,-1860.54 1378.03,-1361.39 1380.16,-1236.34"/>
<polygon fill="gray" stroke="gray" points="1383.66,-1236.11 1380.32,-1226.06 1376.66,-1236 1383.66,-1236.11"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/test_precomputed_basepoint_mult(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/test_precomputed_basepoint_mult().</title>
<g id="a_node19"><a xlink:title=" &#160;&#160;&#160;fn test_precomputed_basepoint_mult() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aB_1 = ED25519_BASEPOINT_TABLE * &amp;A_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aB_2 = constants::ED25519_BASEPOINT_POINT * A_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(aB_1.compress(),...">
<polygon fill="white" stroke="black" points="1175.5,-1900.88 920.5,-1900.88 920.5,-1864.88 1175.5,-1864.88 1175.5,-1900.88"/>
<text text-anchor="middle" x="1048" y="-1879.18" font-family="Helvetica,sans-Serif" font-size="14.00">test_precomputed_basepoint_mult</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/test_precomputed_basepoint_mult().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/test_precomputed_basepoint_mult().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1175.64,-1890.69C1205.17,-1886.41 1234.3,-1876.31 1256,-1855.88 1348.12,-1769.14 1373.96,-1349.63 1379.32,-1236.2"/>
<polygon fill="gray" stroke="gray" points="1382.83,-1236.06 1379.78,-1225.91 1375.83,-1235.74 1382.83,-1236.06"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime_precomputed_vs_nonprecomputed_multiscalar(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime_precomputed_vs_nonprecomputed_multiscalar().</title>
<g id="a_node20"><a xlink:title=" &#160;&#160;&#160;fn vartime_precomputed_vs_nonprecomputed_multiscalar() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = rand::thread_rng(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let static_scalars = (0..128) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.map(|_| Scalar::random(&amp;mut rng)) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1248,-1846.88 848,-1846.88 848,-1810.88 1248,-1810.88 1248,-1846.88"/>
<text text-anchor="middle" x="1048" y="-1825.18" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_precomputed_vs_nonprecomputed_multiscalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime_precomputed_vs_nonprecomputed_multiscalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime_precomputed_vs_nonprecomputed_multiscalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1245.11,-1810.73C1248.9,-1808.03 1252.54,-1805.08 1256,-1801.88 1340.84,-1723.33 1371.71,-1342.91 1378.8,-1235.92"/>
<polygon fill="gray" stroke="gray" points="1382.3,-1236.1 1379.45,-1225.89 1375.31,-1235.65 1382.3,-1236.1"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][ConstantTimeEq]ct_eq(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][ConstantTimeEq]ct_eq().</title>
<g id="a_node21"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;EdwardsPoint) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We would like to check that the point (X/Z, Y/Z) is equal to &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// the point (X&#39;/Z&#39;, Y&#39;/Z&#39;) without converting into affine &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1075,-2116.88 1021,-2116.88 1021,-2080.88 1075,-2080.88 1075,-2116.88"/>
<text text-anchor="middle" x="1048" y="-2095.18" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<g id="a_node37"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;FieldElement) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.as_bytes().ct_eq(&amp;other.as_bytes()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1581.5,-3500.88 1527.5,-3500.88 1527.5,-3464.88 1581.5,-3464.88 1581.5,-3500.88"/>
<text text-anchor="middle" x="1554.5" y="-3479.18" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1075.08,-2096.65C1120.15,-2094.41 1212.02,-2097.28 1256,-2151.88 1325.61,-2238.29 1234.04,-3055.26 1292,-3149.88 1341.68,-3230.97 1425.18,-3175.47 1479,-3253.88 1529.54,-3327.52 1458.89,-3377.63 1507,-3452.88 1510.04,-3457.63 1514.13,-3461.79 1518.64,-3465.36"/>
<polygon fill="gray" stroke="gray" points="1516.83,-3468.37 1527.05,-3471.18 1520.82,-3462.62 1516.83,-3468.37"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_projective_extended_round_trip(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_projective_extended_round_trip().</title>
<g id="a_node22"><a xlink:title=" &#160;&#160;&#160;fn basepoint_projective_extended_round_trip() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::ED25519_BASEPOINT_POINT &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.as_projective() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.as_extended() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="1202.5,-1792.88 893.5,-1792.88 893.5,-1756.88 1202.5,-1756.88 1202.5,-1792.88"/>
<text text-anchor="middle" x="1048" y="-1771.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_projective_extended_round_trip</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_projective_extended_round_trip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_projective_extended_round_trip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1202.58,-1776.32C1222.28,-1770.64 1240.84,-1761.64 1256,-1747.88 1333.5,-1677.54 1369.2,-1336.71 1378.17,-1235.97"/>
<polygon fill="gray" stroke="gray" points="1381.66,-1236.21 1379.04,-1225.94 1374.68,-1235.6 1381.66,-1236.21"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/double_scalar_mul_basepoint_vs_ed25519py(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/double_scalar_mul_basepoint_vs_ed25519py().</title>
<g id="a_node23"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn double_scalar_mul_basepoint_vs_ed25519py() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A = A_TIMES_BASEPOINT.decompress().unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let result = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint::vartime_double_scalar_mul_ba...">
<polygon fill="white" stroke="black" points="1212.5,-1738.88 883.5,-1738.88 883.5,-1702.88 1212.5,-1702.88 1212.5,-1738.88"/>
<text text-anchor="middle" x="1048" y="-1717.18" font-family="Helvetica,sans-Serif" font-size="14.00">double_scalar_mul_basepoint_vs_ed25519py</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/double_scalar_mul_basepoint_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/double_scalar_mul_basepoint_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1212.65,-1718.68C1228.52,-1713.06 1243.38,-1705.05 1256,-1693.88 1326.17,-1631.73 1366.35,-1330.56 1377.37,-1236.21"/>
<polygon fill="gray" stroke="gray" points="1380.88,-1236.33 1378.54,-1226 1373.93,-1235.53 1380.88,-1236.33"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<g id="a_node24"><a xlink:title=" &#160;&#160;&#160;pub fn to_montgomery(&amp;self) &#45;&gt; MontgomeryPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We have u = (1+y)/(1&#45;y) = (Z+Y)/(Z&#45;Y). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// The denominator is zero only when y=1, the identity point of &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// the...">
<polygon fill="white" stroke="black" points="1111,-2062.88 985,-2062.88 985,-2026.88 1111,-2026.88 1111,-2062.88"/>
<text text-anchor="middle" x="1048" y="-2041.18" font-family="Helvetica,sans-Serif" font-size="14.00">to_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1111.4,-2033.98C1158.23,-2029.73 1220.21,-2033.16 1256,-2071.88 1309.09,-2129.31 1251.31,-2708.08 1292,-2774.88 1342.04,-2857.04 1406.09,-2821.12 1479,-2883.88 1549.44,-2944.52 1574.68,-2960.91 1610,-3046.88 1656.18,-3159.29 1577.12,-3213.7 1638,-3318.88 1638.17,-3319.18 1638.35,-3319.48 1638.53,-3319.77"/>
<polygon fill="gray" stroke="gray" points="1635.9,-3322.08 1644.93,-3327.63 1641.33,-3317.66 1635.9,-3322.08"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vs_ed25519py(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vs_ed25519py().</title>
<g id="a_node25"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn multiscalar_mul_vs_ed25519py() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A = A_TIMES_BASEPOINT.decompress().unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let result = EdwardsPoint::vartime_multiscalar_mul( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;[A_SCALAR, B_S...">
<polygon fill="white" stroke="black" points="1165.5,-1684.88 930.5,-1684.88 930.5,-1648.88 1165.5,-1648.88 1165.5,-1684.88"/>
<text text-anchor="middle" x="1048" y="-1663.18" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul_vs_ed25519py</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1165.76,-1674.39C1198.15,-1670.84 1231.19,-1661.2 1256,-1639.88 1319,-1585.73 1363.31,-1322.93 1376.45,-1235.92"/>
<polygon fill="gray" stroke="gray" points="1379.92,-1236.39 1377.94,-1225.98 1373,-1235.35 1379.92,-1236.39"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_one_vs_basepoint(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_one_vs_basepoint().</title>
<g id="a_node26"><a xlink:title=" &#160;&#160;&#160;fn basepoint_mult_one_vs_basepoint() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp = ED25519_BASEPOINT_TABLE * &amp;Scalar::ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let compressed = bp.compress(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(compressed, constants::ED25519_BASEPOINT_...">
<polygon fill="white" stroke="black" points="1174.5,-1630.88 921.5,-1630.88 921.5,-1594.88 1174.5,-1594.88 1174.5,-1630.88"/>
<text text-anchor="middle" x="1048" y="-1609.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_mult_one_vs_basepoint</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_one_vs_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_one_vs_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1174.7,-1618.59C1203.99,-1614.28 1233.24,-1604.71 1256,-1585.88 1365.12,-1495.6 1379.32,-1307.55 1380.64,-1236.18"/>
<polygon fill="gray" stroke="gray" points="1384.14,-1236.18 1380.75,-1226.14 1377.14,-1236.1 1384.14,-1236.18"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_projective_niels_vs_basepoint2(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_projective_niels_vs_basepoint2().</title>
<g id="a_node27"><a xlink:title=" &#160;&#160;&#160;fn basepoint_plus_basepoint_projective_niels_vs_basepoint2() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp = constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp_added = (&amp;bp + &amp;bp.as_projective_niels()).as_extended(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1256,-1576.88 840,-1576.88 840,-1540.88 1256,-1540.88 1256,-1576.88"/>
<text text-anchor="middle" x="1048" y="-1555.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_plus_basepoint_projective_niels_vs_basepoint2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_projective_niels_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_plus_basepoint_projective_niels_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1243.06,-1540.81C1247.54,-1538.1 1251.87,-1535.13 1256,-1531.88 1351.12,-1457.01 1373.62,-1300.14 1378.9,-1236.06"/>
<polygon fill="gray" stroke="gray" points="1382.4,-1236.14 1379.65,-1225.9 1375.42,-1235.62 1382.4,-1236.14"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_decompression_compression(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_decompression_compression().</title>
<g id="a_node28"><a xlink:title=" &#160;&#160;&#160;fn basepoint_decompression_compression() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let base_X = FieldElement::from_bytes(&amp;BASE_X_COORD_BYTES); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp = constants::ED25519_BASEPOINT_COMPRESSED &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.decompress() &#160;&#160;...">
<polygon fill="white" stroke="black" points="1193.5,-1522.88 902.5,-1522.88 902.5,-1486.88 1193.5,-1486.88 1193.5,-1522.88"/>
<text text-anchor="middle" x="1048" y="-1501.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_decompression_compression</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_decompression_compression().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_decompression_compression().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1193.74,-1504.93C1216.08,-1499.78 1237.75,-1491.3 1256,-1477.88 1337.25,-1418.11 1367,-1292.27 1376.53,-1236.05"/>
<polygon fill="gray" stroke="gray" points="1380,-1236.51 1378.13,-1226.09 1373.09,-1235.41 1380,-1236.51"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1386.68,-1225.9C1412.86,-1339.82 1555.09,-1971.94 1610,-2495.88 1619.54,-2586.88 1594.91,-3238.16 1638,-3318.88 1638.16,-3319.18 1638.33,-3319.49 1638.5,-3319.79"/>
<polygon fill="gray" stroke="gray" points="1635.8,-3322.01 1644.71,-3327.75 1641.32,-3317.71 1635.8,-3322.01"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1385.16,-1226.06C1398.31,-1316.91 1456.68,-1730.75 1479,-2071.88 1489.44,-2231.35 1464.33,-3355.87 1507,-3509.88 1512.43,-3529.47 1523.7,-3549.31 1533.78,-3564.44"/>
<polygon fill="gray" stroke="gray" points="1530.97,-3566.53 1539.53,-3572.77 1536.73,-3562.55 1530.97,-3566.53"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_vs_ed25519py(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_vs_ed25519py().</title>
<g id="a_node30"><a xlink:title=" &#160;&#160;&#160;fn basepoint_mult_vs_ed25519py() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aB = EdwardsPoint::mul_base(&amp;A_SCALAR); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(aB.compress(), A_TIMES_BASEPOINT); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1164,-1468.88 932,-1468.88 932,-1432.88 1164,-1432.88 1164,-1468.88"/>
<text text-anchor="middle" x="1048" y="-1447.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_mult_vs_ed25519py</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_vs_ed25519py().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1164.09,-1454.27C1195.98,-1450.51 1229.18,-1441.79 1256,-1423.88 1323.74,-1378.64 1359.17,-1283.19 1373.18,-1235.79"/>
<polygon fill="gray" stroke="gray" points="1376.55,-1236.75 1375.92,-1226.18 1369.81,-1234.83 1376.55,-1236.75"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_table_basepoint_function_correct(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_table_basepoint_function_correct().</title>
<g id="a_node31"><a xlink:title=" &#160;&#160;&#160;fn basepoint_table_basepoint_function_correct() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp = ED25519_BASEPOINT_TABLE.basepoint(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(bp.compress(), constants::ED25519_BASEPOINT_COMPRESSED); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1207.5,-1414.88 888.5,-1414.88 888.5,-1378.88 1207.5,-1378.88 1207.5,-1414.88"/>
<text text-anchor="middle" x="1048" y="-1393.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_table_basepoint_function_correct</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_table_basepoint_function_correct().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_table_basepoint_function_correct().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1207.58,-1389.42C1224.58,-1384.81 1241.08,-1378.47 1256,-1369.88 1310.6,-1338.43 1349.37,-1272.63 1367.99,-1235.29"/>
<polygon fill="gray" stroke="gray" points="1371.28,-1236.53 1372.5,-1226.01 1364.98,-1233.47 1371.28,-1236.53"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables().</title>
<g id="a_node32"><a xlink:title=" &#160;&#160;&#160;fn basepoint_tables() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = &amp;constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a = A_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let table_radix16 = EdwardsBasepointTableRadix16::create(P); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let table_radix...">
<polygon fill="white" stroke="black" points="1115,-1360.88 981,-1360.88 981,-1324.88 1115,-1324.88 1115,-1360.88"/>
<text text-anchor="middle" x="1048" y="-1339.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_tables</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_tables().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1115.04,-1343.88C1157.06,-1342.24 1211.7,-1335.78 1256,-1315.88 1297.92,-1297.05 1336.25,-1259.33 1358.99,-1233.84"/>
<polygon fill="gray" stroke="gray" points="1361.87,-1235.87 1365.81,-1226.04 1356.59,-1231.26 1361.87,-1235.87"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vartime_vs_consttime(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vartime_vs_consttime().</title>
<g id="a_node33"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn multiscalar_mul_vartime_vs_consttime() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A = A_TIMES_BASEPOINT.decompress().unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let result_vartime = EdwardsPoint::vartime_multiscalar_mul( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1190,-1306.88 906,-1306.88 906,-1270.88 1190,-1270.88 1190,-1306.88"/>
<text text-anchor="middle" x="1048" y="-1285.18" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul_vartime_vs_consttime</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vartime_vs_consttime().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/vartime/multiscalar_mul_vartime_vs_consttime().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1190.08,-1275.86C1212.35,-1272.26 1234.95,-1267.69 1256,-1261.88 1283.74,-1254.22 1313.36,-1241.57 1336.75,-1230.44"/>
<polygon fill="gray" stroke="gray" points="1338.56,-1233.45 1346.04,-1225.94 1335.51,-1227.15 1338.56,-1233.45"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/to_affine_niels_clears_denominators(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/to_affine_niels_clears_denominators().</title>
<g id="a_node34"><a xlink:title=" &#160;&#160;&#160;fn to_affine_niels_clears_denominators() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// construct a point as aB so it has denominators (ie. Z != 1) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aB = ED25519_BASEPOINT_TABLE * &amp;A_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aB_affine_niels ...">
<polygon fill="white" stroke="black" points="1181,-1252.88 915,-1252.88 915,-1216.88 1181,-1216.88 1181,-1252.88"/>
<text text-anchor="middle" x="1048" y="-1231.18" font-family="Helvetica,sans-Serif" font-size="14.00">to_affine_niels_clears_denominators</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/to_affine_niels_clears_denominators().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/to_affine_niels_clears_denominators().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1181.45,-1224.09C1233.43,-1219.86 1289.97,-1215.25 1329.46,-1212.04"/>
<polygon fill="gray" stroke="gray" points="1329.94,-1215.51 1339.62,-1211.21 1329.37,-1208.53 1329.94,-1215.51"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_two_vs_basepoint2(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_two_vs_basepoint2().</title>
<g id="a_node35"><a xlink:title=" &#160;&#160;&#160;fn basepoint_mult_two_vs_basepoint2() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let two = Scalar::from(2u64); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp2 = EdwardsPoint::mul_base(&amp;two); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(bp2.compress(), BASE2_CMPRSSD); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1178.5,-1198.88 917.5,-1198.88 917.5,-1162.88 1178.5,-1162.88 1178.5,-1198.88"/>
<text text-anchor="middle" x="1048" y="-1177.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_mult_two_vs_basepoint2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_two_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/basepoint_mult_two_vs_basepoint2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1178.59,-1191.43C1231.55,-1195.75 1289.68,-1200.48 1329.91,-1203.76"/>
<polygon fill="gray" stroke="gray" points="1329.74,-1207.26 1340,-1204.58 1330.31,-1200.28 1329.74,-1207.26"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalarmult_extended_point_works_both_ways(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalarmult_extended_point_works_both_ways().</title>
<g id="a_node36"><a xlink:title=" &#160;&#160;&#160;fn scalarmult_extended_point_works_both_ways() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let G: EdwardsPoint = constants::ED25519_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let s: Scalar = A_SCALAR; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P1 = G * s; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P2 = s * G...">
<polygon fill="white" stroke="black" points="1213.5,-1144.88 882.5,-1144.88 882.5,-1108.88 1213.5,-1108.88 1213.5,-1144.88"/>
<text text-anchor="middle" x="1048" y="-1123.18" font-family="Helvetica,sans-Serif" font-size="14.00">scalarmult_extended_point_works_both_ways</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalarmult_extended_point_works_both_ways().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/test/scalarmult_extended_point_works_both_ways().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1213.68,-1144.08C1228.1,-1146.87 1242.38,-1150.12 1256,-1153.88 1283.74,-1161.54 1313.36,-1174.19 1336.75,-1185.32"/>
<polygon fill="gray" stroke="gray" points="1335.51,-1188.61 1346.04,-1189.81 1338.56,-1182.31 1335.51,-1188.61"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1581.53,-3473.32C1591.59,-3468.52 1602.47,-3461.78 1610,-3452.88 1634.33,-3424.12 1615.45,-3403.06 1638,-3372.88 1638.45,-3372.28 1638.92,-3371.68 1639.4,-3371.1"/>
<polygon fill="gray" stroke="gray" points="1641.9,-3373.54 1646.4,-3363.95 1636.9,-3368.65 1641.9,-3373.54"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/encoding_is_canonical(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/encoding_is_canonical().</title>
<g id="a_node38"><a xlink:title=" &#160;&#160;&#160;fn encoding_is_canonical() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Encode 1 wrongly as 1 + (2^255 &#45; 19) = 2^255 &#45; 18 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one_encoded_wrongly_bytes: [u8; 32] = [ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, ...">
<polygon fill="white" stroke="black" points="1133,-3628.88 963,-3628.88 963,-3592.88 1133,-3592.88 1133,-3628.88"/>
<text text-anchor="middle" x="1048" y="-3607.18" font-family="Helvetica,sans-Serif" font-size="14.00">encoding_is_canonical</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/encoding_is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/encoding_is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1133.12,-3625.28C1243.89,-3642.13 1430.33,-3662.43 1479,-3617.88 1531,-3570.28 1455,-3349.48 1507,-3301.88 1540.77,-3270.97 1566.21,-3288.54 1610,-3301.88 1613.83,-3303.05 1627.85,-3312.34 1641.94,-3322.09"/>
<polygon fill="gray" stroke="gray" points="1639.96,-3324.98 1650.17,-3327.82 1643.96,-3319.24 1639.96,-3324.98"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][`PartialEq&lt;Self&gt;`]eq(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][`PartialEq&lt;Self&gt;`]eq().</title>
<g id="a_node39"><a xlink:title=" &#160;&#160;&#160;fn eq(&amp;self, other: &amp;FieldElement) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.ct_eq(other).into() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1408.5,-3554.88 1354.5,-3554.88 1354.5,-3518.88 1408.5,-3518.88 1408.5,-3554.88"/>
<text text-anchor="middle" x="1381.5" y="-3533.18" font-family="Helvetica,sans-Serif" font-size="14.00">eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][`PartialEq&lt;Self&gt;`]eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][`PartialEq&lt;Self&gt;`]eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1408.87,-3530.07C1428.36,-3524.9 1455.48,-3517.42 1479,-3509.88 1491.82,-3505.77 1505.72,-3500.86 1518.01,-3496.36"/>
<polygon fill="gray" stroke="gray" points="1519.3,-3499.61 1527.46,-3492.86 1516.87,-3493.05 1519.3,-3499.61"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<g id="a_node40"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn is_zero(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let zero = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes = self.as_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes.ct_eq(&amp;zero) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1413.5,-3500.88 1349.5,-3500.88 1349.5,-3464.88 1413.5,-3464.88 1413.5,-3500.88"/>
<text text-anchor="middle" x="1381.5" y="-3479.18" font-family="Helvetica,sans-Serif" font-size="14.00">is_zero</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1386.35,-3464.67C1396.78,-3420.62 1430.07,-3308.64 1507,-3263.88 1546.57,-3240.86 1570.97,-3239.95 1610,-3263.88 1633.39,-3278.22 1620.14,-3298.06 1638,-3318.88 1638.59,-3319.57 1639.21,-3320.26 1639.84,-3320.93"/>
<polygon fill="gray" stroke="gray" points="1637.49,-3323.53 1647.19,-3327.8 1642.27,-3318.41 1637.49,-3323.53"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]batch_invert(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]batch_invert().</title>
<g id="a_node41"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn batch_invert(inputs: &amp;mut [FieldElement]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Montgomery’s Trick and Fast Implementation of Masked AES &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Genelle, Prouff and Quisquater &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Section 3.2 &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1099.5,-3520.88 996.5,-3520.88 996.5,-3484.88 1099.5,-3484.88 1099.5,-3520.88"/>
<text text-anchor="middle" x="1048" y="-3499.18" font-family="Helvetica,sans-Serif" font-size="14.00">batch_invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]batch_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]batch_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<path fill="none" stroke="gray" d="M1099.71,-3499.82C1165.38,-3495.86 1278.58,-3489.03 1339.25,-3485.37"/>
<polygon fill="gray" stroke="gray" points="1339.47,-3488.86 1349.24,-3484.77 1339.04,-3481.87 1339.47,-3488.86"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<g id="a_node42"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn sqrt_ratio_i(u: &amp;FieldElement, v: &amp;FieldElement) &#45;&gt; (Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Using the same trick as in ed25519 decoding, we merge the &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// inversion, the square roo...">
<polygon fill="white" stroke="black" points="1428,-3608.88 1335,-3608.88 1335,-3572.88 1428,-3572.88 1428,-3608.88"/>
<text text-anchor="middle" x="1381.5" y="-3587.18" font-family="Helvetica,sans-Serif" font-size="14.00">sqrt_ratio_i</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1428.34,-3583.51C1445.12,-3579.45 1463.72,-3573.25 1479,-3563.88 1501.68,-3549.98 1521.72,-3527.24 1535.29,-3509.39"/>
<polygon fill="gray" stroke="gray" points="1538.3,-3511.2 1541.42,-3501.08 1532.67,-3507.05 1538.3,-3511.2"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1428.32,-3590.88C1449.33,-3590.88 1474.45,-3590.88 1496.65,-3590.88"/>
<polygon fill="gray" stroke="gray" points="1496.95,-3594.38 1506.95,-3590.88 1496.95,-3587.38 1496.95,-3594.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/sqrt_ratio_behavior(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/sqrt_ratio_behavior().</title>
<g id="a_node43"><a xlink:title=" &#160;&#160;&#160;fn sqrt_ratio_behavior() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let zero = FieldElement::ZERO; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one = FieldElement::ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let i = constants::SQRT_M1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let two = &amp;one + &amp;one; // 2 is nonsquare mod p. &#160;...">
<polygon fill="white" stroke="black" points="1123,-3574.88 973,-3574.88 973,-3538.88 1123,-3538.88 1123,-3574.88"/>
<text text-anchor="middle" x="1048" y="-3553.18" font-family="Helvetica,sans-Serif" font-size="14.00">sqrt_ratio_behavior</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/sqrt_ratio_behavior().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/sqrt_ratio_behavior().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1123.4,-3564.51C1184.5,-3570.78 1269.68,-3579.51 1324.96,-3585.18"/>
<polygon fill="gray" stroke="gray" points="1324.62,-3588.67 1334.92,-3586.2 1325.33,-3581.7 1324.62,-3588.67"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/sqrt_ratio_behavior().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/test/sqrt_ratio_behavior().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1123.01,-3555.54C1163.96,-3557.45 1214.75,-3564.29 1256,-3583.88 1275.88,-3593.32 1271.55,-3609.75 1292,-3617.88 1369.23,-3648.58 1397.14,-3632.26 1479,-3617.88 1486.62,-3616.54 1494.49,-3614.49 1502.13,-3612.1"/>
<polygon fill="gray" stroke="gray" points="1503.27,-3615.41 1511.65,-3608.92 1501.06,-3608.77 1503.27,-3615.41"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1570.74,-3572.78C1583.15,-3557.11 1600.17,-3533.33 1610,-3509.88 1634.03,-3452.56 1604.24,-3425.06 1638,-3372.88 1638.26,-3372.48 1638.53,-3372.08 1638.81,-3371.68"/>
<polygon fill="gray" stroke="gray" points="1641.61,-3373.8 1645.6,-3363.98 1636.36,-3369.16 1641.61,-3373.8"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().</title>
<g id="a_node45"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn elligator_inv(&amp;self) &#45;&gt; (Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut out = FieldElement::ZERO; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Special case: s = 0. &#160;If s is zero, either t = 1 or t = &#45;1. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// If t=1, ...">
<polygon fill="white" stroke="black" points="1098.5,-3179.88 997.5,-3179.88 997.5,-3143.88 1098.5,-3143.88 1098.5,-3179.88"/>
<text text-anchor="middle" x="1048" y="-3158.18" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_inv</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1092.39,-3179.97C1140.6,-3199.69 1221.04,-3231.42 1292,-3253.88 1373.8,-3279.78 1420.42,-3239.18 1479,-3301.88 1525.6,-3351.75 1468.99,-3396.19 1507,-3452.88 1510.14,-3457.57 1514.29,-3461.68 1518.82,-3465.24"/>
<polygon fill="gray" stroke="gray" points="1517.03,-3468.26 1527.25,-3471.05 1521,-3462.5 1517.03,-3468.26"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<path fill="none" stroke="gray" d="M1077.53,-3179.92C1120.19,-3207.91 1201.43,-3265.27 1256,-3328.88 1276.75,-3353.06 1272.82,-3365.44 1292,-3390.88 1310.33,-3415.19 1334.47,-3439.9 1352.91,-3457.58"/>
<polygon fill="gray" stroke="gray" points="1350.76,-3460.37 1360.43,-3464.71 1355.58,-3455.29 1350.76,-3460.37"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/jacobi_quartic/impl#[JacobiPoint]elligator_inv().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1081.54,-3179.89C1176.85,-3232.86 1450.45,-3386.72 1479,-3422.88 1504.17,-3454.76 1490.58,-3472.73 1507,-3509.88 1515.33,-3528.72 1526.85,-3548.82 1536.33,-3564.28"/>
<polygon fill="gray" stroke="gray" points="1533.39,-3566.16 1541.65,-3572.8 1539.33,-3562.46 1533.39,-3566.16"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode().</title>
<g id="a_node46"><a xlink:title=" &#160;&#160;&#160;pub fn lizard_decode&lt;D: Digest&gt;(&amp;self) &#45;&gt; Option&lt;[u8; 16]&gt; &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;D: Digest&lt;OutputSize = U32&gt;, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut result: [u8; 16] = Default::default(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut h: [u8; 32] =...">
<polygon fill="white" stroke="black" points="1103.5,-3042.88 992.5,-3042.88 992.5,-3006.88 1103.5,-3006.88 1103.5,-3042.88"/>
<text text-anchor="middle" x="1048" y="-3021.18" font-family="Helvetica,sans-Serif" font-size="14.00">lizard_decode</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1083.86,-3042.91C1150.4,-3077.32 1289.24,-3149.04 1292,-3149.88 1360.05,-3170.71 1557.42,-3139.91 1610,-3187.88 1653.98,-3228.01 1605.44,-3269.04 1638,-3318.88 1638.26,-3319.28 1638.53,-3319.68 1638.81,-3320.08"/>
<polygon fill="gray" stroke="gray" points="1636.38,-3322.6 1645.63,-3327.76 1641.61,-3317.95 1636.38,-3322.6"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]to_jacobi_quartic_ristretto(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]to_jacobi_quartic_ristretto().</title>
<g id="a_node47"><a xlink:title=" &#160;&#160;&#160;fn to_jacobi_quartic_ristretto(self) &#45;&gt; [JacobiPoint; 4] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x2 = self.0.X.square(); // X^2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let y2 = self.0.Y.square(); // Y^2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let y4 = y2.square(); // Y^4 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let z2...">
<polygon fill="white" stroke="black" points="701,-3042.88 507,-3042.88 507,-3006.88 701,-3006.88 701,-3042.88"/>
<text text-anchor="middle" x="604" y="-3021.18" font-family="Helvetica,sans-Serif" font-size="14.00">to_jacobi_quartic_ristretto</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]to_jacobi_quartic_ristretto().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]to_jacobi_quartic_ristretto().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<path fill="none" stroke="gray" d="M701.05,-3014.97C737.82,-3016.49 777.29,-3025.46 804,-3051.88 864.99,-3112.22 779.94,-3174.68 832,-3242.88 961.26,-3412.23 1235.13,-3464.25 1339.2,-3478.26"/>
<polygon fill="gray" stroke="gray" points="1338.94,-3481.75 1349.31,-3479.57 1339.84,-3474.81 1338.94,-3481.75"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;fn test_lizard_encode_helper(data: &amp;[u8; 16], result: &amp;[u8; 32]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let p = RistrettoPoint::lizard_encode::&lt;Sha256&gt;(data); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let p_bytes = p.compress().to_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(&amp;p_...">
<polygon fill="white" stroke="black" points="701.5,-3096.88 506.5,-3096.88 506.5,-3060.88 701.5,-3060.88 701.5,-3096.88"/>
<text text-anchor="middle" x="604" y="-3075.18" font-family="Helvetica,sans-Serif" font-size="14.00">test_lizard_encode_helper</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode().</title>
<path fill="none" stroke="gray" d="M701.73,-3067.06C786.78,-3056.67 908.21,-3041.84 982.09,-3032.81"/>
<polygon fill="gray" stroke="gray" points="982.69,-3036.26 992.19,-3031.58 981.84,-3029.31 982.69,-3036.26"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M621.92,-3097.07C662.32,-3141.84 764.02,-3262.61 804,-3384.88 873.86,-3598.54 771.67,-3673.34 832,-3889.88 874.97,-4044.1 983.11,-4205.96 1027.51,-4268.28"/>
<polygon fill="gray" stroke="gray" points="1024.91,-4270.65 1033.58,-4276.74 1030.6,-4266.57 1024.91,-4270.65"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;pub fn decompress(&amp;self) &#45;&gt; Option&lt;RistrettoPoint&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (s_encoding_is_canonical, s_is_negative, s) = decompress::step_1(self); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!s_encoding_is_canonical | s_is_negative).into...">
<polygon fill="white" stroke="black" points="1098.5,-3880.88 997.5,-3880.88 997.5,-3844.88 1098.5,-3844.88 1098.5,-3880.88"/>
<text text-anchor="middle" x="1048" y="-3859.18" font-family="Helvetica,sans-Serif" font-size="14.00">decompress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/test/test_lizard_encode_helper().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M621.83,-3097.1C662.04,-3141.93 763.35,-3262.83 804,-3384.88 833.63,-3473.84 772.39,-3733.51 832,-3805.88 869.13,-3850.96 937.43,-3862.67 987.11,-3864.7"/>
<polygon fill="gray" stroke="gray" points="987.32,-3868.21 997.41,-3865 987.52,-3861.21 987.32,-3868.21"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]decode_253_bits(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]decode_253_bits().</title>
<g id="a_node49"><a xlink:title=" &#160;&#160;&#160;pub fn decode_253_bits(&amp;self) &#45;&gt; (u8, [[u8; 32]; 8]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut ret = [[0u8; 32]; 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (mask, fes) = self.elligator_ristretto_flavor_inverse(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="670.5,-2988.88 537.5,-2988.88 537.5,-2952.88 670.5,-2952.88 670.5,-2988.88"/>
<text text-anchor="middle" x="604" y="-2967.18" font-family="Helvetica,sans-Serif" font-size="14.00">decode_253_bits</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]decode_253_bits().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]decode_253_bits().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M670.78,-2961.07C714.51,-2958.53 769.97,-2963.62 804,-2997.88 872.54,-3066.87 760.1,-3149.41 832,-3214.88 959.92,-3331.35 1470.05,-3140.19 1610,-3241.88 1639.46,-3263.28 1616.03,-3289.84 1638,-3318.88 1638.45,-3319.48 1638.92,-3320.07 1639.41,-3320.66"/>
<polygon fill="gray" stroke="gray" points="1636.92,-3323.12 1646.43,-3327.78 1641.91,-3318.2 1636.92,-3323.12"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_correct(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_correct().</title>
<g id="a_node50"><a xlink:title=" &#160;&#160;&#160;fn montgomery_elligator_correct() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes: Vec&lt;u8&gt; = (0u8..32u8).collect(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bits_in: [u8; 32] = (&amp;bytes[..]).try_into().expect(&#39; Range invariant broken&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let fe ...">
<polygon fill="white" stroke="black" points="715.5,-2739.88 492.5,-2739.88 492.5,-2703.88 715.5,-2703.88 715.5,-2739.88"/>
<text text-anchor="middle" x="604" y="-2718.18" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_elligator_correct</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_correct().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_correct().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().</title>
<path fill="none" stroke="gray" d="M715.68,-2721.88C795.99,-2721.88 902.43,-2721.88 972.74,-2721.88"/>
<polygon fill="gray" stroke="gray" points="972.84,-2725.38 982.84,-2721.88 972.84,-2718.38 972.84,-2725.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_to_edwards_rejects_twist(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_to_edwards_rejects_twist().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;fn montgomery_to_edwards_rejects_twist() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one = FieldElement::ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// u = 2 corresponds to a point on the twist. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let two = MontgomeryPoint((&amp;one + &amp;one).as_bytes()); ...">
<polygon fill="white" stroke="black" points="746,-2415.88 462,-2415.88 462,-2379.88 746,-2379.88 746,-2415.88"/>
<text text-anchor="middle" x="604" y="-2394.18" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_to_edwards_rejects_twist</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_to_edwards_rejects_twist().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_to_edwards_rejects_twist().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M746.16,-2403.72C768.26,-2398.15 788.79,-2388.03 804,-2370.88 871.55,-2294.73 759.48,-610.3 832,-538.88 966.26,-406.65 1082.78,-464.68 1256,-538.88 1388.06,-595.45 1417.45,-643.07 1479,-772.88 1680.31,-1197.41 1576.45,-1353.24 1610,-1821.88 1615.94,-1904.85 1599.39,-3245.2 1638,-3318.88 1638.16,-3319.19 1638.33,-3319.49 1638.5,-3319.79"/>
<polygon fill="gray" stroke="gray" points="1635.78,-3322 1644.66,-3327.78 1641.32,-3317.72 1635.78,-3322"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_to_edwards_rejects_twist().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_to_edwards_rejects_twist().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().</title>
<path fill="none" stroke="gray" d="M746.07,-2397.88C828.82,-2397.88 928.86,-2397.88 990.19,-2397.88"/>
<polygon fill="gray" stroke="gray" points="990.44,-2401.38 1000.44,-2397.88 990.44,-2394.38 990.44,-2401.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_bits_be(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_bits_be().</title>
<g id="a_node52"><a xlink:title=" &#160;&#160;&#160;pub fn mul_bits_be(&amp;self, bits: impl Iterator&lt;Item = bool&gt;) &#45;&gt; MontgomeryPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Algorithm 8 of Costello&#45;Smith 2017 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let affine_u = FieldElement::from_bytes(&amp;self.0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let...">
<polygon fill="white" stroke="black" points="1097.5,-2631.88 998.5,-2631.88 998.5,-2595.88 1097.5,-2595.88 1097.5,-2631.88"/>
<text text-anchor="middle" x="1048" y="-2610.18" font-family="Helvetica,sans-Serif" font-size="14.00">mul_bits_be</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;pub fn as_affine(&amp;self) &#45;&gt; MontgomeryPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let u = &amp;self.U * &amp;self.W.invert(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;MontgomeryPoint(u.as_bytes()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1420.5,-2685.88 1342.5,-2685.88 1342.5,-2649.88 1420.5,-2649.88 1420.5,-2685.88"/>
<text text-anchor="middle" x="1381.5" y="-2664.18" font-family="Helvetica,sans-Serif" font-size="14.00">as_affine</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_bits_be().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_bits_be().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine().</title>
<path fill="none" stroke="gray" d="M1097.69,-2619.06C1139.75,-2623.82 1202.08,-2631.53 1256,-2640.88 1281.34,-2645.27 1309.35,-2651.25 1332.38,-2656.46"/>
<polygon fill="gray" stroke="gray" points="1331.72,-2659.9 1342.24,-2658.71 1333.28,-2653.07 1331.72,-2659.9"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_coordinates(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_coordinates().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;fn identity_in_different_coordinates() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let id_projective = ProjectivePoint::identity(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let id_montgomery = id_projective.as_affine(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(id_montgomery == Montgomer...">
<polygon fill="white" stroke="black" points="1168.5,-2685.88 927.5,-2685.88 927.5,-2649.88 1168.5,-2649.88 1168.5,-2685.88"/>
<text text-anchor="middle" x="1048" y="-2664.18" font-family="Helvetica,sans-Serif" font-size="14.00">identity_in_different_coordinates</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_coordinates().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_coordinates().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine().</title>
<path fill="none" stroke="gray" d="M1168.68,-2667.88C1225.22,-2667.88 1289.53,-2667.88 1332.31,-2667.88"/>
<polygon fill="gray" stroke="gray" points="1332.43,-2671.38 1342.43,-2667.88 1332.43,-2664.38 1332.43,-2671.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_ladder_matches_edwards_scalarmult(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_ladder_matches_edwards_scalarmult().</title>
<g id="a_node54"><a xlink:title=" &#160;&#160;&#160;fn montgomery_ladder_matches_edwards_scalarmult() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut csprng = rand_core::OsRng; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..100 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let p_edwards = rand_prime_order_point(&amp;mut csprng); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="787.5,-2361.88 420.5,-2361.88 420.5,-2325.88 787.5,-2325.88 787.5,-2361.88"/>
<text text-anchor="middle" x="604" y="-2340.18" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_ladder_matches_edwards_scalarmult</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_ladder_matches_edwards_scalarmult().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_ladder_matches_edwards_scalarmult().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M787.68,-2330.34C793.52,-2326.45 799,-2321.99 804,-2316.88 880.68,-2238.57 754.94,-2149.81 832,-2071.88 868.35,-2035.12 927.63,-2030.05 974.74,-2033.23"/>
<polygon fill="gray" stroke="gray" points="974.65,-2036.74 984.9,-2034.06 975.22,-2029.76 974.65,-2036.74"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][Hash]hash(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][Hash]hash().</title>
<g id="a_node55"><a xlink:title=" &#160;&#160;&#160;fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Do a round trip through a `FieldElement`. `as_bytes` is guaranteed to give a canonical &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// 32&#45;byte encoding &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let canonical_bytes...">
<polygon fill="white" stroke="black" points="631,-2199.88 577,-2199.88 577,-2163.88 631,-2163.88 631,-2199.88"/>
<text text-anchor="middle" x="604" y="-2178.18" font-family="Helvetica,sans-Serif" font-size="14.00">hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][Hash]hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][Hash]hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M631.2,-2187.23C674.62,-2194.39 760.98,-2201.05 804,-2151.88 866.05,-2080.96 764.82,-521.96 832,-455.88 935.6,-353.97 1374.88,-449.51 1479,-550.88 1579.18,-648.41 1579.43,-700.45 1610,-836.88 1625.07,-904.16 1606.22,-3257.69 1638,-3318.88 1638.16,-3319.19 1638.32,-3319.49 1638.49,-3319.79"/>
<polygon fill="gray" stroke="gray" points="1635.77,-3321.99 1644.63,-3327.79 1641.32,-3317.73 1635.77,-3321.99"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_zero_zero(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_zero_zero().</title>
<g id="a_node56"><a xlink:title=" &#160;&#160;&#160;fn montgomery_elligator_zero_zero() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let zero = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let fe = FieldElement::from_bytes(&amp;zero); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let eg = elligator_encode(&amp;fe); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(eg.to_bytes(), zero...">
<polygon fill="white" stroke="black" points="724.5,-2685.88 483.5,-2685.88 483.5,-2649.88 724.5,-2649.88 724.5,-2685.88"/>
<text text-anchor="middle" x="604" y="-2664.18" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_elligator_zero_zero</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_zero_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_elligator_zero_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().</title>
<path fill="none" stroke="gray" d="M724.61,-2682.49C803.77,-2692.16 905.08,-2704.54 972.8,-2712.81"/>
<polygon fill="gray" stroke="gray" points="972.61,-2716.32 982.96,-2714.06 973.46,-2709.37 972.61,-2716.32"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1095.68,-2408.48C1208.61,-2436.95 1495.68,-2526.77 1610,-2725.88 1675.69,-2840.29 1575.1,-3202.91 1638,-3318.88 1638.16,-3319.18 1638.33,-3319.48 1638.51,-3319.78"/>
<polygon fill="gray" stroke="gray" points="1635.82,-3322.03 1644.75,-3327.73 1641.33,-3317.7 1635.82,-3322.03"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_base(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_base().</title>
<g id="a_node58"><a xlink:title=" &#160;&#160;&#160;pub fn mul_base(scalar: &amp;Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint::mul_base(scalar).to_montgomery() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="645.5,-2307.88 562.5,-2307.88 562.5,-2271.88 645.5,-2271.88 645.5,-2307.88"/>
<text text-anchor="middle" x="604" y="-2286.18" font-family="Helvetica,sans-Serif" font-size="14.00">mul_base</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_base().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_base().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M645.83,-2297.26C690.97,-2302.85 762.73,-2303.71 804,-2262.88 864.99,-2202.54 770.71,-2131.92 832,-2071.88 868.8,-2035.83 927.76,-2030.62 974.64,-2033.58"/>
<polygon fill="gray" stroke="gray" points="974.51,-2037.08 984.75,-2034.35 975.04,-2030.1 974.51,-2037.08"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_models(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_models().</title>
<g id="a_node59"><a xlink:title=" &#160;&#160;&#160;fn identity_in_different_models() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(EdwardsPoint::identity().to_montgomery() == MontgomeryPoint::identity()); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="709.5,-2523.88 498.5,-2523.88 498.5,-2487.88 709.5,-2487.88 709.5,-2523.88"/>
<text text-anchor="middle" x="604" y="-2502.18" font-family="Helvetica,sans-Serif" font-size="14.00">identity_in_different_models</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_models().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/identity_in_different_models().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M709.57,-2516.41C744.24,-2514.12 780.06,-2504.46 804,-2478.88 865.95,-2412.69 769.72,-2137.76 832,-2071.88 867.63,-2034.18 927.25,-2029.26 974.68,-2032.74"/>
<polygon fill="gray" stroke="gray" points="974.65,-2036.25 984.91,-2033.64 975.25,-2029.28 974.65,-2036.25"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1077.48,-2739.89C1181.84,-2806.47 1540.77,-3040.71 1610,-3155.88 1647.87,-3218.88 1599.05,-3256.54 1638,-3318.88 1638.26,-3319.29 1638.52,-3319.69 1638.79,-3320.09"/>
<polygon fill="gray" stroke="gray" points="1636.31,-3322.57 1645.5,-3327.84 1641.6,-3317.99 1636.31,-3322.57"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/elligator_encode().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1075.69,-2740.11C1122.16,-2773.59 1216.71,-2849.86 1256,-2940.88 1310.96,-3068.2 1206.3,-3454.86 1292,-3563.88 1300.23,-3574.35 1312.4,-3580.86 1325.11,-3584.9"/>
<polygon fill="gray" stroke="gray" points="1324.3,-3588.3 1334.87,-3587.52 1326.12,-3581.54 1324.3,-3588.3"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_mul_bits_be(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_mul_bits_be().</title>
<g id="a_node61"><a xlink:title=" &#160;&#160;&#160;fn montgomery_mul_bits_be() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut csprng = rand_core::OsRng; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..100 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Make a random prime&#45;order point P &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let p_edwards = rand_prime_order_po...">
<polygon fill="white" stroke="black" points="701.5,-2631.88 506.5,-2631.88 506.5,-2595.88 701.5,-2595.88 701.5,-2631.88"/>
<text text-anchor="middle" x="604" y="-2610.18" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_mul_bits_be</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_mul_bits_be().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_mul_bits_be().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M701.52,-2625.01C738.7,-2623.77 778.35,-2614.68 804,-2586.88 881.72,-2502.64 753.87,-2155.73 832,-2071.88 867.36,-2033.93 927,-2029.03 974.51,-2032.58"/>
<polygon fill="gray" stroke="gray" points="974.49,-2036.09 984.76,-2033.49 975.1,-2029.12 974.49,-2036.09"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_mul_bits_be().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_bits_be(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/montgomery_mul_bits_be().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]mul_bits_be().</title>
<path fill="none" stroke="gray" d="M701.73,-2613.88C789.02,-2613.88 914.65,-2613.88 987.85,-2613.88"/>
<polygon fill="gray" stroke="gray" points="988.26,-2617.38 998.26,-2613.88 988.26,-2610.38 988.26,-2617.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_edwards_to_montgomery(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_edwards_to_montgomery().</title>
<g id="a_node62"><a xlink:title=" &#160;&#160;&#160;fn basepoint_edwards_to_montgomery() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::ED25519_BASEPOINT_POINT.to_montgomery(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::X25519_BASEPOINT &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="737,-2469.88 471,-2469.88 471,-2433.88 737,-2433.88 737,-2469.88"/>
<text text-anchor="middle" x="604" y="-2448.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_edwards_to_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_edwards_to_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_edwards_to_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M737.1,-2458.71C762.33,-2453.72 786.33,-2443.56 804,-2424.88 858.07,-2367.71 777.65,-2128.78 832,-2071.88 867.71,-2034.5 927.03,-2029.47 974.33,-2032.83"/>
<polygon fill="gray" stroke="gray" points="974.27,-2036.34 984.53,-2033.7 974.86,-2029.36 974.27,-2036.34"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[ProjectivePoint]as_affine().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1420.93,-2682.76C1474.07,-2705.63 1568.18,-2754.9 1610,-2830.88 1662.38,-2926.04 1585.73,-3223.66 1638,-3318.88 1638.17,-3319.18 1638.34,-3319.48 1638.51,-3319.78"/>
<polygon fill="gray" stroke="gray" points="1635.84,-3322.04 1644.78,-3327.71 1641.33,-3317.7 1635.84,-3322.04"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_montgomery_to_edwards(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_montgomery_to_edwards().</title>
<g id="a_node64"><a xlink:title=" &#160;&#160;&#160;fn basepoint_montgomery_to_edwards() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// sign bit = 0 =&gt; basepoint &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::ED25519_BASEPOINT_POINT, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::X25519_BASEPOINT.to_edwards(0...">
<polygon fill="white" stroke="black" points="737,-2577.88 471,-2577.88 471,-2541.88 737,-2541.88 737,-2577.88"/>
<text text-anchor="middle" x="604" y="-2556.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_montgomery_to_edwards</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_montgomery_to_edwards().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/test/basepoint_montgomery_to_edwards().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().</title>
<path fill="none" stroke="gray" d="M737.17,-2548.98C759.8,-2545.13 782.83,-2539.92 804,-2532.88 884.24,-2506.2 968.47,-2452.81 1013.64,-2421.76"/>
<polygon fill="gray" stroke="gray" points="1015.66,-2424.62 1021.88,-2416.05 1011.67,-2418.87 1015.66,-2424.62"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][ConstantTimeEq]ct_eq(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][ConstantTimeEq]ct_eq().</title>
<g id="a_node65"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;MontgomeryPoint) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let self_fe = FieldElement::from_bytes(&amp;self.0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let other_fe = FieldElement::from_bytes(&amp;other.0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self_fe.ct_eq(&amp;oth...">
<polygon fill="white" stroke="black" points="631,-2253.88 577,-2253.88 577,-2217.88 631,-2217.88 631,-2253.88"/>
<text text-anchor="middle" x="604" y="-2232.18" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M631.14,-2241.68C674.47,-2249.56 760.7,-2257.62 804,-2208.88 865.63,-2139.51 765.84,-603.94 832,-538.88 966.36,-406.75 1082.78,-464.68 1256,-538.88 1388.06,-595.45 1424.93,-639.78 1479,-772.88 1535.04,-910.83 1435.07,-3322.51 1507,-3452.88 1509.91,-3458.16 1514.19,-3462.66 1519,-3466.43"/>
<polygon fill="gray" stroke="gray" points="1517.18,-3469.43 1527.42,-3472.12 1521.09,-3463.63 1517.18,-3469.43"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1084.98,-4276.68C1191.95,-4220.19 1506.91,-4035.79 1610,-3774.88 1642.91,-3691.59 1594.43,-3451.11 1638,-3372.88 1638.17,-3372.58 1638.34,-3372.28 1638.52,-3371.98"/>
<polygon fill="gray" stroke="gray" points="1641.33,-3374.07 1644.82,-3364.07 1635.85,-3369.71 1641.33,-3374.07"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1058.24,-4276.63C1101.46,-4191.36 1281.96,-3835.93 1292,-3827.88 1359.1,-3774.04 1419.03,-3839.57 1479,-3777.88 1516.57,-3739.23 1485.37,-3709.25 1507,-3659.88 1513.59,-3644.83 1523.51,-3629.53 1532.49,-3617.18"/>
<polygon fill="gray" stroke="gray" points="1535.32,-3619.24 1538.51,-3609.13 1529.72,-3615.04 1535.32,-3619.24"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/scalarmult_ristrettopoint_works_both_ways(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/scalarmult_ristrettopoint_works_both_ways().</title>
<g id="a_node67"><a xlink:title=" &#160;&#160;&#160;fn scalarmult_ristrettopoint_works_both_ways() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = constants::RISTRETTO_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let s = Scalar::from(999u64); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P1 = P * s; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P2 = s * P; &#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="761,-4096.88 447,-4096.88 447,-4060.88 761,-4060.88 761,-4096.88"/>
<text text-anchor="middle" x="604" y="-4075.18" font-family="Helvetica,sans-Serif" font-size="14.00">scalarmult_ristrettopoint_works_both_ways</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/scalarmult_ristrettopoint_works_both_ways().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/scalarmult_ristrettopoint_works_both_ways().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M761.13,-4091.98C775.9,-4095.61 790.42,-4100.17 804,-4105.88 896.07,-4144.58 983.2,-4227.49 1023.55,-4269.44"/>
<polygon fill="gray" stroke="gray" points="1021.1,-4271.95 1030.53,-4276.78 1026.17,-4267.12 1021.1,-4271.95"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/encodings_of_small_multiples_of_basepoint(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/encodings_of_small_multiples_of_basepoint().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;fn encodings_of_small_multiples_of_basepoint() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Table of encodings of i*basepoint &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Generated using ristretto.sage &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let compressed = [ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CompressedRistretto([...">
<polygon fill="white" stroke="black" points="762.5,-4366.88 445.5,-4366.88 445.5,-4330.88 762.5,-4330.88 762.5,-4366.88"/>
<text text-anchor="middle" x="604" y="-4345.18" font-family="Helvetica,sans-Serif" font-size="14.00">encodings_of_small_multiples_of_basepoint</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/encodings_of_small_multiples_of_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/encodings_of_small_multiples_of_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M752.49,-4330.86C836.56,-4320.59 936.65,-4308.36 995.84,-4301.13"/>
<polygon fill="gray" stroke="gray" points="996.54,-4304.57 1006.05,-4299.88 995.69,-4297.62 996.54,-4304.57"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;fn basepoint_roundtrip() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp_compressed_ristretto = constants::RISTRETTO_BASEPOINT_POINT.compress(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bp_recaf = bp_compressed_ristretto.decompress().unwrap().0; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//...">
<polygon fill="white" stroke="black" points="682,-3934.88 526,-3934.88 526,-3898.88 682,-3898.88 682,-3934.88"/>
<text text-anchor="middle" x="604" y="-3913.18" font-family="Helvetica,sans-Serif" font-size="14.00">basepoint_roundtrip</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M682.18,-3927.89C724.22,-3929.23 773.7,-3922.41 804,-3889.88 870.33,-3818.68 769.44,-3527.42 832,-3452.88 956.67,-3304.34 1134.01,-3500.63 1256,-3349.88 1300.68,-3294.66 1287.38,-2142.76 1292,-2071.88 1313.49,-1742.39 1362.97,-1344.4 1376.83,-1236.19"/>
<polygon fill="gray" stroke="gray" points="1380.33,-1236.44 1378.13,-1226.08 1373.38,-1235.55 1380.33,-1236.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M682.17,-3913.07C721.23,-3914.53 767.89,-3921.74 804,-3943.88 932.91,-4022.92 1010.69,-4198.92 1036.96,-4267.13"/>
<polygon fill="gray" stroke="gray" points="1033.79,-4268.63 1040.6,-4276.75 1040.34,-4266.16 1033.79,-4268.63"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/basepoint_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M682.24,-3907.44C769.04,-3896.84 908.1,-3879.85 987.08,-3870.2"/>
<polygon fill="gray" stroke="gray" points="987.84,-3873.63 997.34,-3868.95 986.99,-3866.68 987.84,-3873.63"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;pub(super) fn step_1(repr: &amp;CompressedRistretto) &#45;&gt; (Choice, Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Step 1. Check s for validity: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// 1.a) s must be 32 bytes (we get this from the type system) ...">
<polygon fill="white" stroke="black" points="1412.5,-3926.88 1350.5,-3926.88 1350.5,-3890.88 1412.5,-3890.88 1412.5,-3926.88"/>
<text text-anchor="middle" x="1381.5" y="-3905.18" font-family="Helvetica,sans-Serif" font-size="14.00">step_1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1412.94,-3906.23C1433.36,-3903.14 1459.91,-3896.43 1479,-3881.88 1568.9,-3813.36 1574.6,-3771.23 1610,-3663.88 1650.69,-3540.48 1573.29,-3485.55 1638,-3372.88 1638.17,-3372.58 1638.35,-3372.28 1638.53,-3371.99"/>
<polygon fill="gray" stroke="gray" points="1641.33,-3374.09 1644.91,-3364.12 1635.89,-3369.68 1641.33,-3374.09"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1412.59,-3908.09C1433.93,-3905.92 1461.73,-3899.54 1479,-3881.88 1483.7,-3877.07 1529.23,-3690.94 1546.71,-3618.93"/>
<polygon fill="gray" stroke="gray" points="1550.12,-3619.71 1549.08,-3609.16 1543.32,-3618.06 1550.12,-3619.71"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_negative_s_fails(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_negative_s_fails().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;fn decompress_negative_s_fails() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// constants::d is neg, so decompression should fail as |d| != d. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bad_compressed = CompressedRistretto(constants::EDWARDS_D.as_bytes()); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="712.5,-3880.88 495.5,-3880.88 495.5,-3844.88 712.5,-3844.88 712.5,-3880.88"/>
<text text-anchor="middle" x="604" y="-3859.18" font-family="Helvetica,sans-Serif" font-size="14.00">decompress_negative_s_fails</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_negative_s_fails().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_negative_s_fails().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M712.64,-3869.27C745.05,-3866.03 778.7,-3856.85 804,-3835.88 834.3,-3810.77 800.99,-3776.11 832,-3751.88 945.73,-3663 1377.99,-3797.98 1479,-3694.88 1529.27,-3643.57 1458.08,-3425.47 1507,-3372.88 1522.97,-3355.71 1583.63,-3349.45 1627.59,-3347.17"/>
<polygon fill="gray" stroke="gray" points="1627.99,-3350.66 1637.81,-3346.7 1627.66,-3343.67 1627.99,-3350.66"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_negative_s_fails().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_negative_s_fails().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M712.56,-3862.88C798.9,-3862.88 916.93,-3862.88 987.23,-3862.88"/>
<polygon fill="gray" stroke="gray" points="987.24,-3866.38 997.24,-3862.88 987.24,-3859.38 987.24,-3866.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/one_way_map(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/one_way_map().</title>
<g id="a_node72"><a xlink:title=" &#160;&#160;&#160;fn one_way_map() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// These inputs are from &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// https://datatracker.ietf.org/doc/html/draft&#45;irtf&#45;cfrg&#45;ristretto255&#45;decaf448&#45;04#appendix&#45;A.3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let test_vectors: &amp;[([u8; 64], Co...">
<polygon fill="white" stroke="black" points="661,-4312.88 547,-4312.88 547,-4276.88 661,-4276.88 661,-4312.88"/>
<text text-anchor="middle" x="604" y="-4291.18" font-family="Helvetica,sans-Serif" font-size="14.00">one_way_map</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/one_way_map().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/one_way_map().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M661.43,-4294.88C748.14,-4294.88 912.81,-4294.88 996.08,-4294.88"/>
<polygon fill="gray" stroke="gray" points="996.3,-4298.38 1006.3,-4294.88 996.3,-4291.38 996.3,-4298.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/random_roundtrip(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/random_roundtrip().</title>
<g id="a_node73"><a xlink:title=" &#160;&#160;&#160;fn random_roundtrip() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = OsRng; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..100 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = RistrettoPoint::mul_base(&amp;Scalar::random(&amp;mut rng)); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let compressed_P = P.compress();...">
<polygon fill="white" stroke="black" points="675,-4042.88 533,-4042.88 533,-4006.88 675,-4006.88 675,-4042.88"/>
<text text-anchor="middle" x="604" y="-4021.18" font-family="Helvetica,sans-Serif" font-size="14.00">random_roundtrip</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/random_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/random_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M675.44,-4023.56C715.04,-4025.42 764.33,-4032.22 804,-4051.88 907.85,-4103.35 994.02,-4216.63 1029.54,-4268.28"/>
<polygon fill="gray" stroke="gray" points="1026.67,-4270.29 1035.19,-4276.6 1032.46,-4266.36 1026.67,-4270.29"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/random_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/random_roundtrip().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M675.05,-4021.75C713.84,-4018.44 762.48,-4011.68 804,-3997.88 884.24,-3971.2 968.47,-3917.81 1013.64,-3886.76"/>
<polygon fill="gray" stroke="gray" points="1015.66,-3889.62 1021.88,-3881.05 1011.67,-3883.87 1015.66,-3889.62"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().</title>
<g id="a_node74"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fn from(P: &amp;&#39;a RistrettoPoint) &#45;&gt; BatchCompressState { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let XX = P.0.X.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let YY = P.0.Y.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let ZZ = P.0.Z.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="631,-3772.88 577,-3772.88 577,-3736.88 631,-3736.88 631,-3772.88"/>
<text text-anchor="middle" x="604" y="-3751.18" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M631.02,-3752.82C669.28,-3749.47 742.8,-3741.75 804,-3727.88 816.75,-3724.99 819.18,-3721.45 832,-3718.88 902.74,-3704.69 1427.95,-3714.86 1479,-3663.88 1530.14,-3612.81 1453.74,-3388.73 1507,-3339.88 1538.98,-3310.54 1590.43,-3317.2 1628.07,-3328"/>
<polygon fill="gray" stroke="gray" points="1627.22,-3331.4 1637.81,-3330.97 1629.27,-3324.7 1627.22,-3331.4"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]batch_invert(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]batch_invert().</title>
<path fill="none" stroke="gray" d="M631.19,-3760.18C673.8,-3767.14 758.02,-3773.61 804,-3727.88 867.02,-3665.21 768.67,-3592.23 832,-3529.88 871.79,-3490.7 937.73,-3487.88 986.11,-3492.42"/>
<polygon fill="gray" stroke="gray" points="985.83,-3495.92 996.15,-3493.5 986.58,-3488.95 985.83,-3495.92"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[BatchCompressState][`From&lt;&amp;RistrettoPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M631.34,-3760.34C674.18,-3767.51 758.7,-3774.29 804,-3727.88 843.36,-3687.56 790.84,-3514.36 832,-3475.88 937.07,-3377.64 1356.08,-3381.16 1479,-3455.88 1502.1,-3469.92 1494.05,-3486.15 1507,-3509.88 1516.94,-3528.08 1528.55,-3548.31 1537.69,-3564"/>
<polygon fill="gray" stroke="gray" points="1534.68,-3565.8 1542.75,-3572.67 1540.73,-3562.27 1534.68,-3565.8"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][ConstantTimeEq]ct_eq(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][ConstantTimeEq]ct_eq().</title>
<g id="a_node75"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;RistrettoPoint) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let X1Y2 = &amp;self.0.X * &amp;other.0.Y; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Y1X2 = &amp;self.0.Y * &amp;other.0.X; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let X1X2 = &amp;self.0.X * &amp;other.0.X; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Y1Y...">
<polygon fill="white" stroke="black" points="631,-3718.88 577,-3718.88 577,-3682.88 631,-3682.88 631,-3718.88"/>
<text text-anchor="middle" x="604" y="-3697.18" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M631.03,-3685.23C674.2,-3657.84 760.19,-3596.92 804,-3521.88 832.92,-3472.34 787.25,-3431.77 832,-3395.88 1056.32,-3215.94 1233.21,-3253.59 1479,-3402.88 1500.77,-3416.1 1489.56,-3434.32 1507,-3452.88 1510.53,-3456.63 1514.62,-3460.13 1518.88,-3463.32"/>
<polygon fill="gray" stroke="gray" points="1516.96,-3466.25 1527.19,-3469.04 1520.94,-3460.48 1516.96,-3466.25"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/double_and_compress_1024_random_points(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/double_and_compress_1024_random_points().</title>
<g id="a_node76"><a xlink:title=" &#160;&#160;&#160;fn double_and_compress_1024_random_points() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = OsRng; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut points: Vec&lt;RistrettoPoint&gt; = (0..1024) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.map(|_| RistrettoPoint::random(&amp;mut rng)) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="765.5,-4258.88 442.5,-4258.88 442.5,-4222.88 765.5,-4222.88 765.5,-4258.88"/>
<text text-anchor="middle" x="604" y="-4237.18" font-family="Helvetica,sans-Serif" font-size="14.00">double_and_compress_1024_random_points</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/double_and_compress_1024_random_points().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/double_and_compress_1024_random_points().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M752.49,-4258.9C836.56,-4269.17 936.65,-4281.4 995.84,-4288.63"/>
<polygon fill="gray" stroke="gray" points="995.69,-4292.14 1006.05,-4289.88 996.54,-4285.19 995.69,-4292.14"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().</title>
<g id="a_node77"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn elligator_ristretto_flavor(r_0: &amp;FieldElement) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let i = &amp;constants::SQRT_M1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let d = &amp;constants::EDWARDS_D; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one_minus_d_sq = &amp;constants...">
<polygon fill="white" stroke="black" points="1138.5,-3796.88 957.5,-3796.88 957.5,-3760.88 1138.5,-3760.88 1138.5,-3796.88"/>
<text text-anchor="middle" x="1048" y="-3775.18" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_ristretto_flavor</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1082.12,-3760.79C1123.1,-3738.33 1194.95,-3698.73 1256,-3663.88 1284.78,-3647.45 1317.05,-3628.51 1341.53,-3614.04"/>
<polygon fill="gray" stroke="gray" points="1343.35,-3617.03 1350.17,-3608.93 1339.78,-3611.01 1343.35,-3617.03"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1138.91,-3782.51C1248.48,-3785.19 1425.63,-3783.38 1479,-3746.88 1522.41,-3717.2 1541.29,-3655.07 1548.89,-3618.82"/>
<polygon fill="gray" stroke="gray" points="1552.35,-3619.38 1550.83,-3608.89 1545.48,-3618.04 1552.35,-3619.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/elligator_vs_ristretto_sage(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/elligator_vs_ristretto_sage().</title>
<g id="a_node78"><a xlink:title=" &#160;&#160;&#160;fn elligator_vs_ristretto_sage() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Test vectors extracted from ristretto.sage. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Notice that all of the byte sequences have bit 255 set to 0; this is because &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="702.5,-3988.88 505.5,-3988.88 505.5,-3952.88 702.5,-3952.88 702.5,-3988.88"/>
<text text-anchor="middle" x="604" y="-3967.18" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_vs_ristretto_sage</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/elligator_vs_ristretto_sage().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/elligator_vs_ristretto_sage().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M702.73,-3969.78C736.55,-3973.02 773.57,-3980.86 804,-3997.88 919.94,-4062.73 1002.69,-4206.74 1033.62,-4267.25"/>
<polygon fill="gray" stroke="gray" points="1030.68,-4269.2 1038.3,-4276.56 1036.93,-4266.05 1030.68,-4269.2"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/elligator_vs_ristretto_sage().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/elligator_vs_ristretto_sage().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().</title>
<path fill="none" stroke="gray" d="M702.71,-3979.13C738.41,-3977.05 776.69,-3968.12 804,-3943.88 841.08,-3910.96 797.03,-3871.04 832,-3835.88 862.25,-3805.46 906.73,-3790.71 947.4,-3783.76"/>
<polygon fill="gray" stroke="gray" points="948.04,-3787.2 957.37,-3782.19 946.95,-3780.28 948.04,-3787.2"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Debug]fmt(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Debug]fmt().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;fn fmt(&amp;self, f: &amp;mut core::fmt::Formatter&lt;&#39;_&gt;) &#45;&gt; core::fmt::Result { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let coset = self.coset4(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;f, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39; RistrettoPoint: coset &#10;{:?}&#10;{:?}&#10;{:?}&#10;{:?...">
<polygon fill="white" stroke="black" points="1075,-4366.88 1021,-4366.88 1021,-4330.88 1075,-4330.88 1075,-4366.88"/>
<text text-anchor="middle" x="1048" y="-4345.18" font-family="Helvetica,sans-Serif" font-size="14.00">fmt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Debug]fmt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Debug]fmt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<path fill="none" stroke="gray" d="M1075.09,-4353.66C1118.16,-4359.96 1204.47,-4365.62 1256,-4321.88 1316.5,-4270.52 1362.16,-4021.14 1376.08,-3936.81"/>
<polygon fill="gray" stroke="gray" points="1379.54,-3937.36 1377.69,-3926.92 1372.63,-3936.23 1379.54,-3937.36"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<g id="a_node82"><a xlink:title=" &#160;&#160;&#160;pub(super) fn step_2(s: FieldElement) &#45;&gt; (Choice, Choice, Choice, RistrettoPoint) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Step 2. &#160;Compute (X:Y:Z:T). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one = FieldElement::ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let ss = s.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1412.5,-3872.88 1350.5,-3872.88 1350.5,-3836.88 1412.5,-3836.88 1412.5,-3872.88"/>
<text text-anchor="middle" x="1381.5" y="-3851.18" font-family="Helvetica,sans-Serif" font-size="14.00">step_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Debug]fmt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Debug]fmt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<path fill="none" stroke="gray" d="M1075.11,-4354.62C1119.39,-4362.64 1208.99,-4371.2 1256,-4321.88 1323.68,-4250.86 1230.45,-3958.28 1292,-3881.88 1303.63,-3867.45 1322.74,-3860.54 1340.24,-3857.31"/>
<polygon fill="gray" stroke="gray" points="1340.92,-3860.74 1350.29,-3855.8 1339.88,-3853.82 1340.92,-3860.74"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<path fill="none" stroke="gray" d="M1098.63,-3869.77C1164.54,-3878.91 1279.67,-3894.89 1340.39,-3903.31"/>
<polygon fill="gray" stroke="gray" points="1339.97,-3906.79 1350.36,-3904.7 1340.93,-3899.86 1339.97,-3906.79"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<path fill="none" stroke="gray" d="M1098.63,-3861.68C1164.4,-3860.09 1279.19,-3857.32 1340.01,-3855.86"/>
<polygon fill="gray" stroke="gray" points="1340.44,-3859.35 1350.36,-3855.61 1340.28,-3852.35 1340.44,-3859.35"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_id(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_id().</title>
<g id="a_node81"><a xlink:title=" &#160;&#160;&#160;fn decompress_id() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let compressed_id = CompressedRistretto::identity(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let id = compressed_id.decompress().unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut identity_in_coset = false; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for P in ...">
<polygon fill="white" stroke="black" points="664,-3826.88 544,-3826.88 544,-3790.88 664,-3790.88 664,-3826.88"/>
<text text-anchor="middle" x="604" y="-3805.18" font-family="Helvetica,sans-Serif" font-size="14.00">decompress_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_id().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_id().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M664.33,-3818.74C709.29,-3822.52 769.12,-3818.95 804,-3781.88 861.57,-3720.7 780.15,-3470.98 832,-3404.88 954.31,-3248.95 1137.15,-3425.46 1256,-3266.88 1295.83,-3213.73 1287.61,-2138.15 1292,-2071.88 1313.81,-1742.41 1363.06,-1344.41 1376.85,-1236.19"/>
<polygon fill="gray" stroke="gray" points="1380.35,-1236.44 1378.14,-1226.08 1373.4,-1235.55 1380.35,-1236.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_id().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/decompress_id().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M664.15,-3816.11C748.58,-3826.42 902.77,-3845.26 987.43,-3855.6"/>
<polygon fill="gray" stroke="gray" points="987.05,-3859.08 997.4,-3856.82 987.9,-3852.13 987.05,-3859.08"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<path fill="none" stroke="gray" d="M1350.34,-3852.83C1324.64,-3849.25 1289.91,-3839.62 1274,-3813.88 1256.77,-3786 1256.77,-3546.76 1274,-3518.88 1287.58,-3496.9 1315.49,-3488 1339.47,-3484.54"/>
<polygon fill="gray" stroke="gray" points="1339.93,-3488.01 1349.45,-3483.37 1339.11,-3481.06 1339.93,-3488.01"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1412.82,-3852.01C1433.99,-3848.47 1461.49,-3840.56 1479,-3822.88 1508.09,-3793.52 1536.18,-3673.81 1547.84,-3618.78"/>
<polygon fill="gray" stroke="gray" points="1551.27,-3619.5 1549.89,-3608.99 1544.42,-3618.06 1551.27,-3619.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/vartime_precomputed_vs_nonprecomputed_multiscalar(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/vartime_precomputed_vs_nonprecomputed_multiscalar().</title>
<g id="a_node83"><a xlink:title=" &#160;&#160;&#160;fn vartime_precomputed_vs_nonprecomputed_multiscalar() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = rand::thread_rng(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let static_scalars = (0..128) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.map(|_| Scalar::random(&amp;mut rng)) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="804,-4204.88 404,-4204.88 404,-4168.88 804,-4168.88 804,-4204.88"/>
<text text-anchor="middle" x="604" y="-4183.18" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_precomputed_vs_nonprecomputed_multiscalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/vartime_precomputed_vs_nonprecomputed_multiscalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/vartime_precomputed_vs_nonprecomputed_multiscalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M759.25,-4204.9C774.44,-4207.54 789.57,-4210.53 804,-4213.88 872.08,-4229.7 948.16,-4256.62 996.76,-4275.06"/>
<polygon fill="gray" stroke="gray" points="995.81,-4278.44 1006.4,-4278.74 998.3,-4271.9 995.81,-4278.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/compress_id(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/compress_id().</title>
<g id="a_node84"><a xlink:title=" &#160;&#160;&#160;fn compress_id() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let id = RistrettoPoint::identity(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(id.compress(), CompressedRistretto::identity()); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="655.5,-4150.88 552.5,-4150.88 552.5,-4114.88 655.5,-4114.88 655.5,-4150.88"/>
<text text-anchor="middle" x="604" y="-4129.18" font-family="Helvetica,sans-Serif" font-size="14.00">compress_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/compress_id().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/test/compress_id().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M655.64,-4134.57C696.57,-4137.16 755.2,-4143.65 804,-4159.88 884.24,-4186.56 968.47,-4239.95 1013.64,-4271"/>
<polygon fill="gray" stroke="gray" points="1011.67,-4273.89 1021.88,-4276.71 1015.66,-4268.14 1011.67,-4273.89"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 signing/impl#[ExpandedSecretKey]raw_sign(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 signing/impl#[ExpandedSecretKey]raw_sign().</title>
<g id="a_node85"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn raw_sign&lt;CtxDigest&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;verifying_key: &amp;VerifyingKey, &#160;&#160;&#160;&#160;) &#45;&gt; Signature &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CtxDigest: Digest&lt;OutputSize = U64&gt;, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1087,-586.88 1009,-586.88 1009,-550.88 1087,-550.88 1087,-586.88"/>
<text text-anchor="middle" x="1048" y="-565.18" font-family="Helvetica,sans-Serif" font-size="14.00">raw_sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 signing/impl#[ExpandedSecretKey]raw_sign().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 signing/impl#[ExpandedSecretKey]raw_sign().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1087.37,-567.39C1134.02,-567.79 1211.95,-575.97 1256,-621.88 1334.76,-703.97 1369.83,-1073.67 1378.36,-1179.49"/>
<polygon fill="gray" stroke="gray" points="1374.89,-1180.02 1379.17,-1189.71 1381.87,-1179.47 1374.89,-1180.02"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]recompute_R(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]recompute_R().</title>
<g id="a_node86"><a xlink:title=" &#160;&#160;&#160;fn recompute_R&lt;CtxDigest&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: Option&lt;&amp;[u8]&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: &amp;InternalSignature, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;M: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; CompressedEdwardsY &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CtxDigest: Digest&lt;O...">
<polygon fill="white" stroke="black" points="657.5,-518.88 550.5,-518.88 550.5,-482.88 657.5,-482.88 657.5,-518.88"/>
<text text-anchor="middle" x="604" y="-497.18" font-family="Helvetica,sans-Serif" font-size="14.00">recompute_R</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]recompute_R().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]recompute_R().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M657.51,-496.03C796.26,-484.4 1168.05,-461.34 1256,-538.88 1354.19,-625.44 1375.68,-1063.44 1379.68,-1179.58"/>
<polygon fill="gray" stroke="gray" points="1376.19,-1179.91 1380.01,-1189.79 1383.18,-1179.68 1376.19,-1179.91"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]to_montgomery(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]to_montgomery().</title>
<g id="a_node87"><a xlink:title=" &#160;&#160;&#160;pub fn to_montgomery(&amp;self) &#45;&gt; MontgomeryPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.point.to_montgomery() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="667,-572.88 541,-572.88 541,-536.88 667,-536.88 667,-572.88"/>
<text text-anchor="middle" x="604" y="-551.18" font-family="Helvetica,sans-Serif" font-size="14.00">to_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]to_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey]to_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M655.39,-572.98C703.19,-593.14 772.27,-630.75 804,-688.88 839.38,-753.7 782.56,-1963.02 832,-2017.88 866.92,-2056.62 927.07,-2061.32 974.89,-2057.49"/>
<polygon fill="gray" stroke="gray" points="975.26,-2060.97 984.89,-2056.55 974.61,-2054 975.26,-2060.97"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey][`From&lt;EdwardsPoint&gt;`]from(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey][`From&lt;EdwardsPoint&gt;`]from().</title>
<g id="a_node88"><a xlink:title=" &#160;&#160;&#160;fn from(point: EdwardsPoint) &#45;&gt; VerifyingKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VerifyingKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;compressed: point.compress(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="631,-464.88 577,-464.88 577,-428.88 631,-428.88 631,-464.88"/>
<text text-anchor="middle" x="604" y="-443.18" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey][`From&lt;EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 verifying/impl#[VerifyingKey][`From&lt;EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M631.24,-438.07C728.34,-407.3 1071.21,-315.04 1256,-478.88 1363.24,-573.97 1378.12,-1057.67 1380.17,-1179.83"/>
<polygon fill="gray" stroke="gray" points="1376.68,-1179.93 1380.33,-1189.88 1383.67,-1179.83 1376.68,-1179.93"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/compute_challenge(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/compute_challenge().</title>
<g id="a_node89"><a xlink:title=" &#160;&#160;&#160;fn compute_challenge( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pub_key: &amp;EdwardsPoint, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature_r: &amp;EdwardsPoint, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: Option&lt;&amp;[u8]&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut h = Sha512::defa...">
<polygon fill="white" stroke="black" points="1123.5,-267.88 972.5,-267.88 972.5,-231.88 1123.5,-231.88 1123.5,-267.88"/>
<text text-anchor="middle" x="1048" y="-246.18" font-family="Helvetica,sans-Serif" font-size="14.00">compute_challenge</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/compute_challenge().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/compute_challenge().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1123.55,-238.99C1167.94,-236.96 1222.05,-243.04 1256,-276.88 1321.84,-342.51 1369.17,-1029.98 1378.73,-1179.34"/>
<polygon fill="gray" stroke="gray" points="1375.25,-1179.77 1379.37,-1189.53 1382.23,-1179.33 1375.25,-1179.77"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/serialize_signature(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/serialize_signature().</title>
<g id="a_node90"><a xlink:title=" &#160;&#160;&#160;fn serialize_signature(r: &amp;EdwardsPoint, s: &amp;Scalar) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&amp;r.compress().as_bytes()[..], &amp;s.as_bytes()[..]].concat() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1121,-321.88 975,-321.88 975,-285.88 1121,-285.88 1121,-321.88"/>
<text text-anchor="middle" x="1048" y="-300.18" font-family="Helvetica,sans-Serif" font-size="14.00">serialize_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/serialize_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/serialize_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1101.42,-321.99C1149.69,-341.53 1219.21,-377.5 1256,-432.88 1340.18,-559.59 1372.22,-1054.74 1379.04,-1179.31"/>
<polygon fill="gray" stroke="gray" points="1375.56,-1179.76 1379.59,-1189.56 1382.55,-1179.39 1375.56,-1179.76"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().</title>
<g id="a_node91"><a xlink:title=" &#160;&#160;&#160;fn repudiation() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let message1 = b&#39; Send 100 USD to Alice&#39; ; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let message2 = b&#39; Send 100000 USD to Alice&#39; ; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s: Scalar = non_null_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let pubkey = WEA...">
<polygon fill="white" stroke="black" points="651.5,-267.88 556.5,-267.88 556.5,-231.88 651.5,-231.88 651.5,-267.88"/>
<text text-anchor="middle" x="604" y="-246.18" font-family="Helvetica,sans-Serif" font-size="14.00">repudiation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M651.87,-239.97C785.91,-212.82 1166.9,-144.34 1256,-222.88 1330.02,-288.14 1371.24,-1024.85 1379.11,-1179.51"/>
<polygon fill="gray" stroke="gray" points="1375.62,-1179.81 1379.62,-1189.62 1382.61,-1179.45 1375.62,-1179.81"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().&#45;&gt;rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/compute_challenge(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().&#45;&gt;rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/compute_challenge().</title>
<path fill="none" stroke="gray" d="M651.88,-249.88C725.66,-249.88 869.93,-249.88 962.23,-249.88"/>
<polygon fill="gray" stroke="gray" points="962.38,-253.38 972.38,-249.88 962.38,-246.38 962.38,-253.38"/>
</g>
<!-- rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().&#45;&gt;rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/serialize_signature(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/repudiation().&#45;&gt;rust&#45;analyzer cargo ed25519&#45;dalek 2.1.0 vectors/serialize_signature().</title>
<path fill="none" stroke="gray" d="M651.88,-255.61C726.3,-264.7 872.45,-282.55 964.63,-293.82"/>
<polygon fill="gray" stroke="gray" points="964.41,-297.31 974.76,-295.05 965.26,-290.37 964.41,-297.31"/>
</g>
<!-- rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;EphemeralSecret&gt;`]from(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;EphemeralSecret&gt;`]from().</title>
<g id="a_node92"><a xlink:title=" &#160;&#160;&#160;fn from(secret: &amp;&#39;a EphemeralSecret) &#45;&gt; PublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PublicKey(EdwardsPoint::mul_base_clamped(secret.0).to_montgomery()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="631,-2116.88 577,-2116.88 577,-2080.88 631,-2080.88 631,-2116.88"/>
<text text-anchor="middle" x="604" y="-2095.18" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;EphemeralSecret&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;EphemeralSecret&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M631.33,-2095.66C697.81,-2087.54 874.29,-2065.98 974.62,-2053.72"/>
<polygon fill="gray" stroke="gray" points="975.18,-2057.18 984.68,-2052.49 974.33,-2050.23 975.18,-2057.18"/>
</g>
<!-- rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;StaticSecret&gt;`]from(). -->
<g id="node93" class="node">
<title>rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;StaticSecret&gt;`]from().</title>
<g id="a_node93"><a xlink:title=" &#160;&#160;&#160;fn from(secret: &amp;&#39;a StaticSecret) &#45;&gt; PublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PublicKey(EdwardsPoint::mul_base_clamped(secret.0).to_montgomery()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="631,-2062.88 577,-2062.88 577,-2026.88 631,-2026.88 631,-2062.88"/>
<text text-anchor="middle" x="604" y="-2041.18" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;StaticSecret&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 x25519/impl#[PublicKey][`From&lt;&amp;StaticSecret&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M631.33,-2044.88C697.81,-2044.88 874.29,-2044.88 974.62,-2044.88"/>
<polygon fill="gray" stroke="gray" points="974.68,-2048.38 984.68,-2044.88 974.68,-2041.38 974.68,-2048.38"/>
</g>
<!-- rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 byte_basepoint_matches_edwards_scalar_mul(). -->
<g id="node94" class="node">
<title>rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 byte_basepoint_matches_edwards_scalar_mul().</title>
<g id="a_node94"><a xlink:title="fn byte_basepoint_matches_edwards_scalar_mul() { &#160;&#160;&#160;&#160;let mut scalar_bytes = [0x37; 32]; &#160;&#160;&#160;&#160;&#160;for i in 0..32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_bytes[i] += 2; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let result = x25519(scalar_bytes, X25519_BASEPOINT_...">
<polygon fill="white" stroke="black" points="771.5,-1979.88 436.5,-1979.88 436.5,-1943.88 771.5,-1943.88 771.5,-1979.88"/>
<text text-anchor="middle" x="604" y="-1958.18" font-family="Helvetica,sans-Serif" font-size="14.00">byte_basepoint_matches_edwards_scalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 byte_basepoint_matches_edwards_scalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo x25519&#45;dalek 2.0.0 byte_basepoint_matches_edwards_scalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M669.63,-1979.96C714.82,-1992.08 776.72,-2007.63 832,-2017.88 879.16,-2026.63 932.67,-2033.36 974.51,-2037.91"/>
<polygon fill="gray" stroke="gray" points="974.29,-2041.41 984.61,-2038.99 975.04,-2034.45 974.29,-2041.41"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main(). -->
<g id="node95" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main().</title>
<g id="a_node95"><a xlink:title="fn main() { &#160;&#160;&#160;&#160;let mut input = vec![]; &#160;&#160;&#160;&#160;std::io::stdin() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.read_to_end(&amp;mut input) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; can read input&#39; ); &#160;&#160;&#160;&#160;let key = boring::pkey::PKey::public_key_from_pem(&amp;input).expect(...">
<polygon fill="white" stroke="black" points="631,-1896.88 577,-1896.88 577,-1860.88 631,-1860.88 631,-1896.88"/>
<text text-anchor="middle" x="604" y="-1875.18" font-family="Helvetica,sans-Serif" font-size="14.00">main</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="gray" d="M631.01,-1878.35C672.99,-1878.93 755.84,-1886.28 804,-1931.88 833.19,-1959.52 801.01,-1992.28 832,-2017.88 871.23,-2050.29 929.03,-2055.99 974.82,-2054.15"/>
<polygon fill="gray" stroke="gray" points="975.19,-2057.64 984.99,-2053.62 974.82,-2050.65 975.19,-2057.64"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature(). -->
<g id="node96" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().</title>
<g id="a_node96"><a xlink:title=" &#160;&#160;&#160;pub fn calculate_signature&lt;R&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;csprng: &amp;mut R, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;) &#45;&gt; [u8; SIGNATURE_LENGTH] &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: CryptoRng + Rng, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut random_...">
<polygon fill="white" stroke="black" points="679,-736.88 529,-736.88 529,-700.88 679,-700.88 679,-736.88"/>
<text text-anchor="middle" x="604" y="-715.18" font-family="Helvetica,sans-Serif" font-size="14.00">calculate_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M679.06,-715.55C840.18,-708.99 1211.68,-697.91 1256,-732.88 1327.94,-789.64 1366.86,-1086.06 1377.48,-1179.58"/>
<polygon fill="gray" stroke="gray" points="1374.02,-1180.16 1378.61,-1189.71 1380.98,-1179.38 1374.02,-1180.16"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="node97" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<g id="a_node97"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;their_public_key: &amp;[u8; PUBLIC_KEY_LENGTH], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: &amp;[u8; SIGNATURE_LENGTH], &#160;&#160;&#160;&#160;) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mont_point = Montgom...">
<polygon fill="white" stroke="black" points="668,-790.88 540,-790.88 540,-754.88 668,-754.88 668,-790.88"/>
<text text-anchor="middle" x="604" y="-769.18" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M668.06,-763.96C813.13,-744.87 1165.06,-707.12 1256,-775.88 1322.34,-826.04 1364.51,-1092.06 1376.77,-1179.79"/>
<polygon fill="gray" stroke="gray" points="1373.32,-1180.38 1378.15,-1189.81 1380.26,-1179.42 1373.32,-1180.38"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 montgomery/impl#[MontgomeryPoint]to_edwards().</title>
<path fill="none" stroke="gray" d="M609.03,-791.2C631.69,-894.7 744.23,-1417.01 804,-1848.88 822.54,-1982.84 778.69,-2027.59 832,-2151.88 873.11,-2247.72 966.07,-2332.79 1015.2,-2373.12"/>
<polygon fill="gray" stroke="gray" points="1013.3,-2376.08 1023.27,-2379.66 1017.71,-2370.65 1013.3,-2376.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_encode_to_curve_try_and_increment(). -->
<g id="node98" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_encode_to_curve_try_and_increment().</title>
<g id="a_node98"><a xlink:title=" &#160;&#160;&#160;fn test_encode_to_curve_try_and_increment() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for v in TEST_VECTORS { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let got = encode_to_curve_try_and_increment(&amp;v.pk, v.alpha) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.compress() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.0...">
<polygon fill="white" stroke="black" points="755,-91.88 453,-91.88 453,-55.88 755,-55.88 755,-91.88"/>
<text text-anchor="middle" x="604" y="-70.18" font-family="Helvetica,sans-Serif" font-size="14.00">test_encode_to_curve_try_and_increment</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_encode_to_curve_try_and_increment().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_encode_to_curve_try_and_increment().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M655.9,-55.84C777.51,-16.35 1087.39,62.44 1256,-92.88 1338.54,-168.91 1373.37,-1011.63 1379.49,-1179.06"/>
<polygon fill="gray" stroke="gray" points="1376.01,-1179.65 1379.87,-1189.51 1383.01,-1179.39 1376.01,-1179.65"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/proof_to_hash(). -->
<g id="node99" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/proof_to_hash().</title>
<g id="a_node99"><a xlink:title="fn proof_to_hash(gamma: &amp;EdwardsPoint) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;let mut hasher = Sha512::new(); &#160;&#160;&#160;&#160;hasher.update([SUITE_ID, DOMAIN_SEPARATOR_PROOF]); &#160;&#160;&#160;&#160;hasher.update(gamma.mul_by_cofactor().compress().0);...">
<polygon fill="white" stroke="black" points="1104.5,-137.88 991.5,-137.88 991.5,-101.88 1104.5,-101.88 1104.5,-137.88"/>
<text text-anchor="middle" x="1048" y="-116.18" font-family="Helvetica,sans-Serif" font-size="14.00">proof_to_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M1104.73,-111.74C1151.85,-108.28 1217.63,-112.1 1256,-151.88 1329.68,-228.26 1371.45,-1019.56 1379.19,-1179.71"/>
<polygon fill="gray" stroke="gray" points="1375.69,-1179.91 1379.66,-1189.73 1382.68,-1179.57 1375.69,-1179.91"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="node100" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<g id="a_node100"><a xlink:title=" &#160;&#160;&#160;pub fn proof_to_hash(&amp;self, m: &amp;[u8], proof: &amp;[u8; 80]) &#45;&gt; Result&lt;[u8; 32]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Decode proof into its component parts: gamma, c, and s. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let gamma = CompressedEdwardsY(proof[..32]....">
<polygon fill="white" stroke="black" points="660.5,-145.88 547.5,-145.88 547.5,-109.88 660.5,-109.88 660.5,-145.88"/>
<text text-anchor="middle" x="604" y="-124.18" font-family="Helvetica,sans-Serif" font-size="14.00">proof_to_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]compress().</title>
<path fill="none" stroke="gray" d="M660.51,-132.54C706.46,-136.4 773.47,-142.01 832,-146.88 879.11,-150.8 1221.94,-149.1 1256,-181.88 1330.18,-253.26 1371.41,-1021.19 1379.16,-1179.45"/>
<polygon fill="gray" stroke="gray" points="1375.68,-1179.96 1379.66,-1189.78 1382.67,-1179.62 1375.68,-1179.96"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/proof_to_hash(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/proof_to_hash().</title>
<path fill="none" stroke="gray" d="M660.53,-126.87C742.16,-125.4 894.26,-122.64 981.32,-121.07"/>
<polygon fill="gray" stroke="gray" points="981.41,-124.57 991.35,-120.89 981.29,-117.57 981.41,-124.57"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="node101" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<g id="a_node101"><a xlink:title=" &#160;&#160;&#160;pub fn prove( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_args: &amp;ScalarArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: &amp;[u8], // must be 32 bytes &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Vec&lt;u8&gt;, Poksh...">
<polygon fill="white" stroke="black" points="291.5,-4892.88 235.5,-4892.88 235.5,-4856.88 291.5,-4856.88 291.5,-4892.88"/>
<text text-anchor="middle" x="263.5" y="-4871.18" font-family="Helvetica,sans-Serif" font-size="14.00">prove</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M291.56,-4868.52C318.05,-4862.48 359.61,-4853.52 396,-4847.88 486.09,-4833.92 741.07,-4870.85 804,-4804.88 878.21,-4727.09 758.57,-4400.41 832,-4321.88 873.02,-4278.01 946.49,-4278.36 995.99,-4284.83"/>
<polygon fill="gray" stroke="gray" points="995.77,-4288.34 1006.16,-4286.29 996.76,-4281.41 995.77,-4288.34"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="node102" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<g id="a_node102"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof_bytes: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let proof = Proof::from_slice(pro...">
<polygon fill="white" stroke="black" points="653,-4892.88 555,-4892.88 555,-4856.88 653,-4856.88 653,-4892.88"/>
<text text-anchor="middle" x="604" y="-4871.18" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="gray" d="M291.63,-4874.88C346.32,-4874.88 470.88,-4874.88 544.81,-4874.88"/>
<polygon fill="gray" stroke="gray" points="544.9,-4878.38 554.9,-4874.88 544.9,-4871.38 544.9,-4878.38"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M653.03,-4882.39C699.04,-4886.57 766.79,-4884.25 804,-4842.88 881.54,-4756.68 752.99,-4406.73 832,-4321.88 872.93,-4277.93 946.42,-4278.29 995.95,-4284.79"/>
<polygon fill="gray" stroke="gray" points="995.73,-4288.3 1006.13,-4286.26 996.73,-4281.37 995.73,-4288.3"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_secret(). -->
<g id="node103" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_secret().</title>
<g id="a_node103"><a xlink:title="fn auth_secret(input: &amp;[u8; 64], auth_pt: &amp;RistrettoPoint) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;Kdf::make( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_SVR_MasterAuthorizationKey_20240823&#39; , &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;input, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;auth_pt.compress().to_bytes(), ...">
<polygon fill="white" stroke="black" points="652.5,-4449.88 555.5,-4449.88 555.5,-4413.88 652.5,-4413.88 652.5,-4449.88"/>
<text text-anchor="middle" x="604" y="-4428.18" font-family="Helvetica,sans-Serif" font-size="14.00">auth_secret</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_secret().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_secret().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M652.74,-4437.62C696.9,-4440.21 761.89,-4436.76 804,-4401.88 833.01,-4377.85 802.7,-4345.55 832,-4321.88 877.94,-4284.77 948.38,-4283.02 996,-4287.22"/>
<polygon fill="gray" stroke="gray" points="995.8,-4290.71 1006.1,-4288.22 996.5,-4283.75 995.8,-4290.71"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new(). -->
<g id="node104" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().</title>
<g id="a_node104"><a xlink:title=" &#160;&#160;&#160;pub fn new&lt;R: Rng + CryptoRng&gt;(server_ids: &amp;&#39;a [u64], password: &amp;[u8], rng: &amp;mut R) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let blind = random_scalar(rng); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let input = password_to_uniform_input(password); &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="290.5,-4611.88 236.5,-4611.88 236.5,-4575.88 290.5,-4575.88 290.5,-4611.88"/>
<text text-anchor="middle" x="263.5" y="-4590.18" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M290.66,-4601.83C377.39,-4626.4 658.28,-4691.41 804,-4551.88 878.38,-4480.66 759.32,-4394.83 832,-4321.88 874.26,-4279.46 947.09,-4279.35 996.14,-4285.34"/>
<polygon fill="gray" stroke="gray" points="995.84,-4288.83 1006.22,-4286.7 996.78,-4281.89 995.84,-4288.83"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore1(). -->
<g id="node105" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore1().</title>
<g id="a_node105"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn restore1(&amp;mut self, req_bytes: &amp;[u8]) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let req = match svrb::Request4::decode(req_bytes) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; decode Request4&#39; ) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.inner &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="300.5,-4557.88 226.5,-4557.88 226.5,-4521.88 300.5,-4521.88 300.5,-4557.88"/>
<text text-anchor="middle" x="263.5" y="-4536.18" font-family="Helvetica,sans-Serif" font-size="14.00">restore1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M300.69,-4544.02C409.44,-4555.64 730.4,-4583.47 804,-4516.88 868.93,-4458.14 769.54,-4383.24 832,-4321.88 874.72,-4279.91 947.43,-4279.7 996.33,-4285.54"/>
<polygon fill="gray" stroke="gray" points="996.01,-4289.02 1006.38,-4286.86 996.93,-4282.08 996.01,-4289.02"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2(). -->
<g id="node106" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().</title>
<g id="a_node106"><a xlink:title=" &#160;&#160;&#160;pub fn restore2&lt;R: Rng + CryptoRng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;responses1_bytes: &amp;[Vec&lt;u8&gt;], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;handshake_hashes: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Restore2&lt;&#39;a&gt;, Error&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ...">
<polygon fill="white" stroke="black" points="300.5,-4503.88 226.5,-4503.88 226.5,-4467.88 300.5,-4467.88 300.5,-4503.88"/>
<text text-anchor="middle" x="263.5" y="-4482.18" font-family="Helvetica,sans-Serif" font-size="14.00">restore2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M300.88,-4491.67C409.44,-4508.09 728.3,-4549.75 804,-4485.88 860.51,-4438.2 778.57,-4373 832,-4321.88 875.14,-4280.6 947.43,-4280.13 996.14,-4285.73"/>
<polygon fill="gray" stroke="gray" points="995.79,-4289.21 1006.16,-4287 996.68,-4282.27 995.79,-4289.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new(). -->
<g id="node107" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().</title>
<g id="a_node107"><a xlink:title=" &#160;&#160;&#160;pub fn new&lt;R: Rng + CryptoRng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_ids: &amp;[u64], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;password: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;max_tries: NonZeroU32, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(!server_ids.is_empty()); &#160;&#160;...">
<polygon fill="white" stroke="black" points="290.5,-4449.88 236.5,-4449.88 236.5,-4413.88 290.5,-4413.88 290.5,-4449.88"/>
<text text-anchor="middle" x="263.5" y="-4428.18" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M290.95,-4438.96C317.33,-4445.63 359.13,-4455.13 396,-4458.88 486.2,-4468.04 733.76,-4516.21 804,-4458.88 852.14,-4419.58 786.4,-4364.11 832,-4321.88 875.81,-4281.31 947.93,-4280.67 996.43,-4286.04"/>
<polygon fill="gray" stroke="gray" points="996.05,-4289.52 1006.4,-4287.26 996.9,-4282.57 996.05,-4289.52"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_secret(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_secret().</title>
<path fill="none" stroke="gray" d="M290.78,-4431.88C345.15,-4431.88 471.11,-4431.88 545.36,-4431.88"/>
<polygon fill="gray" stroke="gray" points="545.48,-4435.38 555.48,-4431.88 545.48,-4428.38 545.48,-4435.38"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]hash(). -->
<g id="node108" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]hash().</title>
<g id="a_node108"><a xlink:title=" &#160;&#160;&#160;pub fn hash(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*Self::hash_from_scalars(&amp;self.scalars).compress().as_bytes() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="96.5,-4997.88 42.5,-4997.88 42.5,-4961.88 96.5,-4961.88 96.5,-4997.88"/>
<text text-anchor="middle" x="69.5" y="-4976.18" font-family="Helvetica,sans-Serif" font-size="14.00">hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M96.67,-4989.67C202.67,-5027.46 604,-5152.12 804,-4953.88 853.92,-4904.4 784.34,-4373.55 832,-4321.88 872.84,-4277.61 946.7,-4278.15 996.29,-4284.77"/>
<polygon fill="gray" stroke="gray" points="996.09,-4288.28 1006.49,-4286.26 997.1,-4281.35 996.09,-4288.28"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="node109" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<g id="a_node109"><a xlink:title=" &#160;&#160;&#160;pub fn proof(&amp;self, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash = Self::hash_from_scalars(&amp;self.scalars); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_args = Self::make_scalar_args(&amp;self.sca...">
<polygon fill="white" stroke="black" points="96.5,-4943.88 42.5,-4943.88 42.5,-4907.88 96.5,-4907.88 96.5,-4943.88"/>
<text text-anchor="middle" x="69.5" y="-4922.18" font-family="Helvetica,sans-Serif" font-size="14.00">proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M96.63,-4928.04C221.32,-4938.05 752.02,-4977.51 804,-4927.88 852.75,-4881.33 786.25,-4371.38 832,-4321.88 872.76,-4277.77 946.3,-4278.18 995.88,-4284.73"/>
<polygon fill="gray" stroke="gray" points="995.67,-4288.24 1006.07,-4286.21 996.68,-4281.31 995.67,-4288.24"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="gray" d="M96.79,-4918.89C130.03,-4910.07 187.44,-4894.82 225.19,-4884.79"/>
<polygon fill="gray" stroke="gray" points="226.52,-4888.06 235.29,-4882.11 224.72,-4881.29 226.52,-4888.06"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="node110" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<g id="a_node110"><a xlink:title=" &#160;&#160;&#160;fn generate_weights_for_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;E: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: &amp;[CompressedRistretto], &#160;&#160;&#160;&#160;) &#45;&gt; Vec&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(E.len()...">
<polygon fill="white" stroke="black" points="368,-4724.88 159,-4724.88 159,-4688.88 368,-4688.88 368,-4724.88"/>
<text text-anchor="middle" x="263.5" y="-4703.18" font-family="Helvetica,sans-Serif" font-size="14.00">generate_weights_for_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M368.21,-4716.1C507.5,-4725.99 744.45,-4733.25 804,-4674.88 860.19,-4619.79 777.65,-4378.78 832,-4321.88 873.48,-4278.45 946.84,-4278.69 996.18,-4285.02"/>
<polygon fill="gray" stroke="gray" points="995.94,-4288.52 1006.33,-4286.45 996.91,-4281.59 995.94,-4288.52"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress(). -->
<g id="node111" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress().</title>
<g id="a_node111"><a xlink:title=" &#160;&#160;&#160;pub fn compress(self) &#45;&gt; Endorsement&lt;CompressedRistretto&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Endorsement { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: self.R.compress(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="111,-4700.88 28,-4700.88 28,-4664.88 111,-4664.88 111,-4700.88"/>
<text text-anchor="middle" x="69.5" y="-4679.18" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M111.12,-4681.24C264.17,-4675.03 797.71,-4652.94 804,-4646.88 856.19,-4596.58 781.75,-4374.13 832,-4321.88 873.63,-4278.59 946.95,-4278.79 996.25,-4285.08"/>
<polygon fill="gray" stroke="gray" points="995.99,-4288.58 1006.38,-4286.5 996.96,-4281.64 995.99,-4288.58"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="node112" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<g id="a_node112"><a xlink:title=" &#160;&#160;&#160;fn to_token_raw(unblinded_endorsement: RistrettoPoint) &#45;&gt; Box&lt;[u8]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Skip the Sho for this, we&#39;re hashing a single point into a single bitstring. We don&#39;t &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// need domain separa...">
<polygon fill="white" stroke="black" points="123,-4808.88 16,-4808.88 16,-4772.88 123,-4772.88 123,-4808.88"/>
<text text-anchor="middle" x="69.5" y="-4787.18" font-family="Helvetica,sans-Serif" font-size="14.00">to_token_raw</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M123.22,-4792.24C283.31,-4795.85 755.79,-4802.34 804,-4754.88 872.71,-4687.23 765.91,-4392.09 832,-4321.88 873.17,-4278.15 946.6,-4278.46 996.05,-4284.89"/>
<polygon fill="gray" stroke="gray" points="995.82,-4288.39 1006.22,-4286.34 996.81,-4281.46 995.82,-4288.39"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node113" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node113"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="96.5,-4754.88 42.5,-4754.88 42.5,-4718.88 96.5,-4718.88 96.5,-4754.88"/>
<text text-anchor="middle" x="69.5" y="-4733.18" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M96.84,-4740.44C215.85,-4755.87 701.96,-4811.87 804,-4711.88 866.06,-4651.07 772.22,-4384.93 832,-4321.88 873.32,-4278.3 946.72,-4278.57 996.11,-4284.95"/>
<polygon fill="gray" stroke="gray" points="995.88,-4288.45 1006.27,-4286.39 996.86,-4281.52 995.88,-4288.45"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="gray" d="M96.55,-4746.08C105.81,-4750.36 115.73,-4756.22 123,-4763.88 149.84,-4792.16 129.67,-4818.19 159,-4843.88 177.31,-4859.92 203.65,-4867.66 225.18,-4871.4"/>
<polygon fill="gray" stroke="gray" points="224.89,-4874.9 235.3,-4872.93 225.94,-4867.98 224.89,-4874.9"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="gray" d="M96.79,-4732.77C110.94,-4730.56 129.47,-4727.67 148.99,-4724.61"/>
<polygon fill="gray" stroke="gray" points="149.62,-4728.06 158.96,-4723.06 148.54,-4721.14 149.62,-4728.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt(). -->
<g id="node114" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().</title>
<g id="a_node114"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn decrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: &amp;Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_bytes: UidBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;profile_key_struct::ProfileKeyStruct, ZkGroupVerificationFailure&gt; {...">
<polygon fill="white" stroke="black" points="298.5,-2988.88 228.5,-2988.88 228.5,-2952.88 298.5,-2952.88 298.5,-2988.88"/>
<text text-anchor="middle" x="263.5" y="-2967.18" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]decode_253_bits(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]decode_253_bits().</title>
<path fill="none" stroke="gray" d="M298.51,-2970.88C351.56,-2970.88 455.34,-2970.88 526.89,-2970.88"/>
<polygon fill="gray" stroke="gray" points="527.2,-2974.38 537.2,-2970.88 527.2,-2967.38 527.2,-2974.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt(). -->
<g id="node115" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().</title>
<g id="a_node115"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn decrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: &amp;Ciphertext, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;libsignal_core::ServiceId, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let M2 = key_pair &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="639,-2905.88 569,-2905.88 569,-2869.88 639,-2869.88 639,-2905.88"/>
<text text-anchor="middle" x="604" y="-2884.18" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode().</title>
<path fill="none" stroke="gray" d="M639.01,-2896.14C678.81,-2905.99 746.56,-2923.33 804,-2940.88 867.63,-2960.32 939.55,-2985.6 988.53,-3003.33"/>
<polygon fill="gray" stroke="gray" points="987.42,-3006.65 998.01,-3006.77 989.8,-3000.07 987.42,-3006.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_lizard(). -->
<g id="node116" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_lizard().</title>
<g id="a_node116"><a xlink:title="fn test_lizard() { &#160;&#160;&#160;&#160;let p = RistrettoPoint::lizard_encode::&lt;Sha256&gt;(&amp;zkgroup::common::constants::TEST_ARRAY_16); &#160;&#160;&#160;&#160;let data_out = p.lizard_decode::&lt;Sha256&gt;(); &#160;&#160;&#160;&#160;assert_hex_eq!(data_out.unwrap()...">
<polygon fill="white" stroke="black" points="647.5,-2822.88 560.5,-2822.88 560.5,-2786.88 647.5,-2786.88 647.5,-2822.88"/>
<text text-anchor="middle" x="604" y="-2801.18" font-family="Helvetica,sans-Serif" font-size="14.00">test_lizard</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_lizard().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_lizard().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 lizard/lizard_ristretto/impl#[RistrettoPoint]lizard_decode().</title>
<path fill="none" stroke="gray" d="M647.6,-2811.85C688.91,-2819.61 752.68,-2834.27 804,-2857.88 888.1,-2896.57 974.65,-2963.94 1018.21,-3000.16"/>
<polygon fill="gray" stroke="gray" points="1016.17,-3003.01 1026.09,-3006.75 1020.67,-2997.65 1016.17,-3003.01"/>
</g>
</g>
</svg>
