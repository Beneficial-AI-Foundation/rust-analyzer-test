digraph call_graph {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue, fontname=Helvetica];
  edge [color=gray];

  subgraph cluster_0 {
    label = "protocol/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt()." [label="session_encrypt_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." [label="session_encrypt_decrypt_result", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet()." [label="ratchet", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." [label="v2", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." [label="v1", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." [label="bench_kem", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward()." [label="ratchet_forward", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." [label="ratchet_forward_result", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." [label="session_encrypt_result", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt()." [label="session_encrypt", tooltip=""]
  }
  subgraph cluster_1 {
    label = "protocol/examples";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Decapsulate#" [label="Decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Generate#" [label="Generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Encapsulate#" [label="Encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 impl#[`libsignal_protocol::kem::KeyType`][`From<KeyType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 KeyType#Kyber#" [label="Kyber", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_2 {
    label = "protocol/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv()." [label="iv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()." [label="sealed_sender_multi_recipient_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/test/aes_ctr_test()." [label="aes_ctr_test", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()." [label="calculate_chunk_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." [label="test_agreement_and_authentication", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_key()." [label="chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V1#" [label="V1", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()." [label="sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`RandomChunks<'a, T, R>`][Iterator]next()." [label="next", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`[T]`][`RandomChunksIterator<T>`]random_chunks()." [label="random_chunks", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." [label="fingerprint_matching_identifiers", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/impl#[PreKeysUsed][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#" [label="InvalidSignedPreKeyId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_k()." [label="derive_k", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." [label="process_prekey_impl", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()." [label="signing_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]body()." [label="body", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]sender_e164()." [label="sender_e164", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]ciphertext()." [label="ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()." [label="update", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()." [label="derive_keys_with_label", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMCiphertextLength#" [label="BadKEMCiphertextLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#" [label="LegacyCiphertextVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." [label="assert_records_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/assert_signal_message_equals()." [label="assert_signal_message_equals", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[InvalidSessionError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMacKeyLength#" [label="InvalidMacKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key()." [label="add_sender_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Previous#" [label="Previous", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()." [label="sender_ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#" [label="SignatureValidationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." [label="add_sender_key_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#" [label="InvalidRegistrationId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()." [label="chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#" [label="UnrecognizedMessageVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#" [label="UntrustedIdentity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadCiphertext#" [label="BadCiphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Current#" [label="Current", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." [label="group_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#" [label="BadKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." [label="message_decrypt_signal", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." [label="message_type", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()." [label="add_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." [label="test_dyn_parameters_consts", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/get_encoded_string()." [label="get_encoded_string", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintVersionMismatch#" [label="FingerprintVersionMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()." [label="derive_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()." [label="verify_mac", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." [label="decrypt_message_with_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Secret][KeyKind]key_length()." [label="key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[`rand::distributions::Standard`][`Distribution<Timestamp>`]sample()." [label="sample", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/EncryptionError#BadKeyOrIv#" [label="BadKeyOrIv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()." [label="counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()." [label="identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." [label="test_pre_key_signal_message_serialize_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]display_string()." [label="display_string", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." [label="fingerprint_mismatching_versions", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/create_decryption_failure_log()." [label="create_decryption_failure_log", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#" [label="DuplicatedMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]certificate()." [label="certificate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." [label="calculate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_of_shared_bytes()." [label="offset_of_shared_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#" [label="Kyber1024", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." [label="group_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]pre_key_id()." [label="pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]sender_uuid()." [label="sender_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." [label="decrypt_message_with_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#" [label="Kyber768", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf()." [label="from_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#" [label="InvalidPreKeyId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." [label="test_decryption_error_message_for_plaintext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FfiBindingError#" [label="FfiBindingError", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." [label="message_decrypt_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()." [label="sender_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." [label="test_serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()." [label="sender_device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." [label="aes_256_ctr_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]public_key_length()." [label="public_key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()." [label="group_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()." [label="to_proto", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()." [label="remove_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." [label="test_lossless_round_trip", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." [label="add_single_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#" [label="PreKey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V2#" [label="V2", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/advance()." [label="advance", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." [label="extract_decryption_error_message_from_serialized_content", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." [label="next", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#" [label="Resendable", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." [label="fingerprint_mismatching_identifiers", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." [label="add_second_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()." [label="update", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." [label="fingerprint_test_v2", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." [label="sealed_sender_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state()." [label="sender_key_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." [label="when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_pre_key_id()." [label="kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[u32][`From<ContentHint>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#" [label="InvalidProtobufEncoding", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()." [label="derive_e", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()." [label="new_empty", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." [label="message_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#" [label="InvalidSessionStructure", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadKeyOrIv#" [label="BadKeyOrIv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha256()." [label="chunk_sizes_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/total_digest_size_is_never_too_big()." [label="total_digest_size_is_never_too_big", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]certificate()." [label="certificate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()." [label="msg_type", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]expiration()." [label="expiration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()." [label="add_sender_key_state_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_encodings()." [label="fingerprint_encodings", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]signer()." [label="signer", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][ConstantTimeEq]ct_eq()." [label="ct_eq", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." [label="test_kyber1024_kem", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." [label="test_kyber1024_keypair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." [label="get_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()." [label="ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#" [label="NoSenderKeyState", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." [label="when_sender_chain_key_iteration_overflows", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]pending_bytes_size()." [label="pending_bytes_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()." [label="verify_alternate_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#" [label="ApplicationCallbackError", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]distribution_id()." [label="distribution_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyKind#key_length()." [label="key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()." [label="sender_e164", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]device_id()." [label="device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[`std::time::SystemTime`][`From<Timestamp>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#" [label="Implicit", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()." [label="from_epoch_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." [label="simple_test", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()." [label="sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." [label="aes256_ctr_hmacsha256_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." [label="append_session_summary", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()." [label="assert_number_of_states", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." [label="sealed_sender_decrypt_to_usmc", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_ciphertext()." [label="kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()." [label="random_public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." [label="compute_authentication_tag", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()." [label="content_hint", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf()." [label="from_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]distribution_id()." [label="distribution_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." [label="when_exceed_maximum_states_then_oldest_is_ejected", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()." [label="timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]sub_millis()." [label="sub_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id()." [label="remove_states_with_chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]key_type()." [label="key_type", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()." [label="identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#" [label="UnrecognizedCiphertextVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." [label="sealed_sender_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#" [label="SenderKey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." [label="compute_mac", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[KeyPair][`From<IdentityKeyPair>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." [label="test_agreement_and_authentication", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#" [label="FingerprintParsingError", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." [label="test_sender_key_message_serialize_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Public][KeyKind]key_length()." [label="key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#" [label="InvalidSealedSenderMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#" [label="PreKeySignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." [label="validating_returns_right_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]range_for_recipient_key_material()." [label="range_for_recipient_key_material", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()." [label="for_application_callback", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut()." [label="sender_key_state_mut", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`From<KeyPair>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/read5_mod_100k()." [label="read5_mod_100k", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." [label="get_or_create_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/impl#[CurrentOrPrevious][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()." [label="sender_key_state_for_chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." [label="initialize_bob_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()." [label="epoch_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." [label="test_signal_message_serialize_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()." [label="compare", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private()." [label="signing_key_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()." [label="new_incremental", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]secret_key_length()." [label="secret_key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#" [label="InvalidSenderKeySession", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." [label="test_identity_key_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." [label="incremental_macs_are_valid", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()." [label="assert_record_order", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." [label="process_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()." [label="sender_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`From<PublicKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()." [label="parse", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#" [label="CiphertextMessageTooShort", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#" [label="InvalidKyberPreKeyId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." [label="message_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging()." [label="chain_ids_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()." [label="calculate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." [label="decode_varint", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#" [label="Whisper", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." [label="test_decryption_error_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()." [label="registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]shared_secret_length()." [label="shared_secret_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#" [label="InvalidArgument", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." [label="sealed_sender_multi_recipient_encrypt_impl", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." [label="when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." [label="fingerprint_test_v1", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." [label="test_alternate_identity_signing", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()." [label="hmac_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." [label="get_or_create_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#" [label="SealedSenderSelfSend", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]body()." [label="body", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()." [label="contents", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." [label="test_serialize_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." [label="sealed_sender_encrypt_from_usmc", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()." [label="set_sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#" [label="Default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." [label="process_sender_key_distribution_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_size_zero()." [label="chunk_size_zero", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]key_id()." [label="key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." [label="to_u32", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_within_full_message()." [label="offset_within_full_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()." [label="initialize_bob_session_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#" [label="SignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()." [label="value", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/total_digest_size()." [label="total_digest_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key()." [label="remove_sender_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]chain_id()." [label="chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." [label="create_sender_key_distribution_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()." [label="initialize_alice_session_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#" [label="InvalidState", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()." [label="aes256_ctr_hmacsha256_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]key()." [label="key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]ciphertext_length()." [label="ciphertext_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()." [label="validating", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." [label="apply_agreement_xor", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." [label="final_result_should_be_equal_to_non_incremental_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyLength#" [label="BadKEMKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyType#" [label="BadKEMKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#" [label="WrongKEMKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()." [label="aes_256_ctr_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update_chunk()." [label="update_chunk", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()." [label="get_derivative", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed()." [label="seed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." [label="initialize_alice_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#" [label="SenderKeyMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()." [label="received_message_parts_for_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]to_protobuf()." [label="to_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#" [label="BadKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#" [label="PlaintextContent", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." [label="for_original", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()." [label="parameters", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#" [label="InvalidMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]signing_key()." [label="signing_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." [label="test_kyber768_keypair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()." [label="get_fingerprint", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()." [label="create_signal_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()." [label="sign_alternate_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]base_key()." [label="base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." [label="produce_and_validate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha512()." [label="chunk_sizes_sha512", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()." [label="device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#" [label="UnknownSealedSenderVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()." [label="signed_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." [label="process_prekey_bundle", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#" [label="Plaintext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()." [label="chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()." [label="decode", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." [label="fingerprint_mismatching_fingerprints", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." [label="validating_simple_test", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`RandomChunks<'_, T, R>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key()." [label="cipher_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." [label="when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_raw_kem()." [label="test_raw_kem", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#" [label="NoKeyTypeIdentifier", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_id()." [label="chain_id", tooltip=""]
  }
  subgraph cluster_3 {
    label = "protocol/src/kem";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]encapsulate()." [label="encapsulate", tooltip=""]
  }
  subgraph cluster_4 {
    label = "protocol/src/ratchet";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_ratchet_key_pair()." [label="our_ratchet_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_signed_pre_key()." [label="their_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_kyber_pre_key()." [label="their_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()." [label="cipher_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_identity_key_pair()." [label="our_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]new_from_seed()." [label="new_from_seed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." [label="generate_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_signed_pre_key_pair()." [label="our_signed_pre_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_identity_key_pair()." [label="our_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_base_key_pair()." [label="our_base_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_kyber_pre_key_pair()." [label="our_kyber_pre_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]counter()." [label="counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()." [label="iv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." [label="test_chain_key_derivation", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_ratchet_key()." [label="their_ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()." [label="mac_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()." [label="message_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()." [label="calculate_base_material", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]derive_keys()." [label="derive_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()." [label="next_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()." [label="with_their_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." [label="into_pb", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_identity_key()." [label="their_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_one_time_pre_key()." [label="their_one_time_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_one_time_pre_key()." [label="with_their_one_time_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()." [label="create_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_one_time_pre_key_pair()." [label="our_one_time_pre_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_kyber_pre_key()." [label="set_their_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#" [label="Keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_base_key()." [label="their_base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#" [label="Seed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()." [label="index", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_identity_key()." [label="their_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()." [label="from_pb", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_one_time_pre_key()." [label="set_their_one_time_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()." [label="key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]key()." [label="key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_kyber_ciphertext()." [label="their_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()." [label="new", tooltip=""]
  }
  subgraph cluster_5 {
    label = "protocol/src/state";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]base_key()." [label="base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]get_public()." [label="get_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()." [label="get_sender_chain_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[KyberPreKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundleContent][`From<PreKeyBundle>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_receiver_chain()." [label="with_receiver_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[InvalidSessionError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]modify()." [label="modify", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]timestamp()." [label="timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PrivateKey][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." [label="alice_base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SignalProtocolError][`From<InvalidSessionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]previous_counter()." [label="previous_counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_ciphertext()." [label="kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()." [label="signed_pre_key_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]all_receiver_chain_logging_info()." [label="all_receiver_chain_logging_info", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionStructure][`From<&SessionState>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()." [label="remote_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." [label="local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." [label="remote_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord][GenericSignedPreKey]get_storage()." [label="get_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()." [label="get_receiver_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." [label="get_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#timestamp()." [label="timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord][GenericSignedPreKey]get_storage()." [label="get_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." [label="set_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." [label="get_receiver_chain_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]signed_pre_key_id()." [label="signed_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_signature()." [label="kyber_pre_key_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]registration_id()." [label="registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_remote_registration_id()." [label="set_remote_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_previous_counter()." [label="set_previous_counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[SignedPreKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_registration_id()." [label="remote_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()." [label="new_fresh", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]identity_key()." [label="identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]pre_key_id()." [label="pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]id()." [label="id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()." [label="remote_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]current_ratchet_key_matches()." [label="current_ratchet_key_matches", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state_mut()." [label="session_state_mut", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." [label="remote_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." [label="get_sender_chain_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]has_kyber_pre_key()." [label="has_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()." [label="archive_current_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#from_storage()." [label="from_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()." [label="unacknowledged_pre_key_message_items", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()." [label="promote_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_pre_key_message()." [label="set_unacknowledged_pre_key_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle][`TryFrom<PreKeyBundleContent>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PublicKey][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]alice_base_key()." [label="alice_base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PublicKey][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()." [label="previous_session_states", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]get_public()." [label="get_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()." [label="sender_ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]from_session_structure()." [label="from_session_structure", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()." [label="local_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_public()." [label="signed_pre_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_private_key()." [label="sender_ratchet_private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()." [label="session_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]set_session_state()." [label="set_session_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()." [label="root_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()." [label="set_sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." [label="has_session_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()." [label="key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]get_private()." [label="get_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()." [label="sender_ratchet_key_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord][GenericSignedPreKey]from_storage()." [label="from_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_local_registration_id()." [label="set_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_kyber_ciphertext()." [label="get_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." [label="add_receiver_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_id()." [label="kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]clear_unacknowledged_pre_key_message()." [label="clear_unacknowledged_pre_key_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/zip3()." [label="zip3", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()." [label="get_message_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()." [label="get_receiver_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeySerde#deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]has_usable_sender_chain()." [label="has_usable_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_kyber_ciphertext()." [label="set_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord][GenericSignedPreKey]from_storage()." [label="from_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]key_pair()." [label="key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionStructure][`From<SessionState>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()." [label="set_message_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_root_key()." [label="set_root_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_kyber_pre_key_id()." [label="set_unacknowledged_kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()." [label="with_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_registration_id()." [label="local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." [label="set_receiver_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." [label="local_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]get_private()." [label="get_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()." [label="with_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_public()." [label="pre_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeyPairSerde#from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PrivateKey][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()." [label="local_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()." [label="get_sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState][`From<SessionStructure>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()." [label="has_usable_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_id()." [label="signed_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]secret_key()." [label="secret_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()." [label="session_with_self", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_old_session()." [label="promote_old_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#id()." [label="id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_public()." [label="kyber_pre_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()." [label="archive_current_state_inner", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()." [label="pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_pre_key_id()." [label="kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]device_id()." [label="device_id", tooltip=""]
  }
  subgraph cluster_6 {
    label = "protocol/src/storage";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#" [label="Receiving", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]all_signed_pre_key_ids()." [label="all_signed_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()." [label="load_existing_sessions", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]store_session()." [label="store_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]reset()." [label="reset", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]all_kyber_pre_key_ids()." [label="all_kyber_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]all_pre_key_ids()." [label="all_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()." [label="all_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#" [label="Sending", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()." [label="all_signed_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()." [label="all_kyber_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()." [label="store_session", tooltip=""]
  }
  subgraph cluster_7 {
    label = "protocol/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." [label="test_revoked_server_cert", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." [label="test_bad_message_bundle", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." [label="test_basic_simultaneous_initiate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." [label="test_chain_jump_over_limit_with_self", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." [label="group_basic_encrypt_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." [label="group_large_messages", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." [label="test_sealed_sender_multi_recipient_encrypt_with_archived_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." [label="test_ratcheting_session_as_bob", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." [label="test_simultaneous_initiate_with_lossage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." [label="group_too_far_in_the_future", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." [label="group_no_recv_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." [label="test_unacknowledged_sessions_eventually_expire", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." [label="test_optional_one_time_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." [label="test_server_cert", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." [label="test_signedprekey_not_saved", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." [label="test_ratcheting_session_as_alice", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." [label="group_no_send_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 init_logger()." [label="init_logger", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 run()." [label="run", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." [label="test_zero_is_a_valid_prekey_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." [label="test_sealed_sender_multi_recipient_redundant_empty_devices", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." [label="test_sender_cert", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." [label="test_simultaneous_initiate_repeated_messages", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." [label="test_simultaneous_initiate_lost_message_repeated_messages", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." [label="test_repeat_bundle_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." [label="group_late_join", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." [label="group_message_key_limit", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." [label="test_basic_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." [label="test_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." [label="test_message_key_limits", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." [label="test_bad_signed_pre_key_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." [label="run_interaction", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." [label="test_alice_and_bob_agree_on_chain_keys_with_kyber", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." [label="run_session_interaction", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." [label="group_sealed_sender_multiple_devices", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." [label="test_sender_key_in_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." [label="test_decryption_error_in_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." [label="group_basic_ratchet", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." [label="test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 parse_empty_multi_recipient_sealed_sender()." [label="parse_empty_multi_recipient_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." [label="test_sealed_sender_multi_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." [label="group_sealed_sender_multiple_devices_and_excluded_recipients", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." [label="group_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." [label="group_out_of_order", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." [label="test_simultaneous_initiate_lost_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." [label="test_chain_jump_over_limit", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." [label="test_basic_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 is_session_id_equal()." [label="is_session_id_equal", tooltip=""]
  }
  subgraph cluster_8 {
    label = "protocol/tests/support";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." [label="add_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()." [label="with_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." [label="make_bundle_with_latest_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[IdChoice][`From<u32>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#" [label="Random", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." [label="initialize_sessions_v4", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." [label="sign", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()." [label="with_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." [label="add_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." [label="create_pre_key_bundle", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]from_store()." [label="from_store", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." [label="gen_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()." [label="with_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder][HasSessionVersion]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()." [label="extract_single_ssv2_received_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]next_id()." [label="next_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Exactly#" [label="Exactly", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()." [label="test_in_memory_protocol_store", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#" [label="Next", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." [label="initialize_sessions_v3", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." [label="add_pre_key", tooltip=""]
  }

  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/test/aes_ctr_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]get_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]get_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[IdChoice][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Exactly#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SignalProtocolError][`From<InvalidSessionError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyKind#key_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/impl#[PreKeysUsed][Default]default()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]remove_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 v1()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 v2()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]from_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]new_from_seed()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]derive_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]distribution_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]verify_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]secret_key_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]shared_secret_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]ciphertext_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]public_key_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/get_encoded_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#timestamp()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord]private_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord][GenericSignedPreKey]get_storage()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]body()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]clear_unacknowledged_pre_key_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Secret][KeyKind]key_length()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/assert_signal_message_equals()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/get_encoded_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]save_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_of_shared_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_within_full_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]save_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_old_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Previous#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Current#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]previous_counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/create_decryption_failure_log()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]set_session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Unknown#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/create_decryption_failure_log()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/EncryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[u32][`From<ContentHint>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/advance()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]current_ratchet_key_matches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update_chunk()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]new_from_seed()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[u32][`From<ContentHint>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state_mut()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]previous_counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha256()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Exactly#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]next_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_encodings()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_encodings()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]is_trusted_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[`std::time::SystemTime`][`From<Timestamp>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle][`TryFrom<PreKeyBundleContent>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle][`TryFrom<PreKeyBundleContent>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]store_sender_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]all_receiver_chain_logging_info()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V2#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V1#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_k()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder][HasSessionVersion]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 is_session_id_equal()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]save_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]modify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder][HasSessionVersion]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]get_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_one_time_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_one_time_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMacKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Public][KeyKind]key_length()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]range_for_recipient_key_material()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_within_full_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeyPairSerde#from_public_and_private()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_previous_counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_root_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/impl#[CurrentOrPrevious][Display]fmt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Current#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/impl#[CurrentOrPrevious][Display]fmt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Previous#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#from_storage()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_one_time_pre_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_ratchet_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_signed_pre_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_kyber_pre_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]load_sender_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/assert_signal_message_equals()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]pending_bytes_size()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintVersionMismatch#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`From<PublicKey>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[SignedPreKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`[T]`][`RandomChunksIterator<T>`]random_chunks()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/zip3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#from_storage()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]to_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]save_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]sub_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 impl#[`libsignal_protocol::kem::KeyType`][`From<KeyType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 impl#[`libsignal_protocol::kem::KeyType`][`From<KeyType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 KeyType#Kyber#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/advance()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_root_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_k()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[KyberPreKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]modify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]all_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]distribution_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]signing_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_size_zero()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Unknown#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/total_digest_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]encapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V2#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V1#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]body()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeySerde#deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/EncryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 parse_empty_multi_recipient_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]sub_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState][`From<SessionStructure>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]from_session_structure()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]reset()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_one_time_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_base_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]has_usable_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]secret_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_old_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`[T]`][`RandomChunksIterator<T>`]random_chunks()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`RandomChunks<'_, T, R>`][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha512()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]all_signed_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]clear_unacknowledged_pre_key_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Generate#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Decapsulate#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Encapsulate#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_pre_key_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_one_time_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]all_kyber_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 is_session_id_equal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]save_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMCiphertextLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
}
