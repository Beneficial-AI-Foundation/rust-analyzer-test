<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="2661pt" height="2913pt"
 viewBox="0.00 0.00 2661.00 2913.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2909)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2909 2657,-2909 2657,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" points="635,-2768 635,-2897 1294.5,-2897 1294.5,-2768 635,-2768"/>
<text text-anchor="middle" x="964.75" y="-2881.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1436,-2368 1436,-2551 1559,-2551 1559,-2368 1436,-2368"/>
<text text-anchor="middle" x="1497.5" y="-2535.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" points="914,-2685 914,-2760 1056,-2760 1056,-2685 914,-2685"/>
<text text-anchor="middle" x="985" y="-2744.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1998.5,-1507 1998.5,-1744 2311,-1744 2311,-1507 1998.5,-1507"/>
<text text-anchor="middle" x="2154.75" y="-1728.8" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightgrey" stroke="lightgrey" points="2004,-1262 2004,-1499 2645,-1499 2645,-1262 2004,-1262"/>
<text text-anchor="middle" x="2324.5" y="-1483.8" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1192.5,-419 1192.5,-602 1537.5,-602 1537.5,-419 1192.5,-419"/>
<text text-anchor="middle" x="1365" y="-586.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightgrey" stroke="lightgrey" points="914,-473 914,-548 1056,-548 1056,-473 914,-473"/>
<text text-anchor="middle" x="985" y="-532.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1188.5,-2559 1188.5,-2742 1559,-2742 1559,-2559 1188.5,-2559"/>
<text text-anchor="middle" x="1373.75" y="-2726.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1457,-1752 1457,-1935 2131.5,-1935 2131.5,-1752 1457,-1752"/>
<text text-anchor="middle" x="1794.25" y="-1919.8" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightgrey" stroke="lightgrey" points="869,-1943 869,-2342 1544,-2342 1544,-1943 869,-1943"/>
<text text-anchor="middle" x="1206.5" y="-2326.8" font-family="Helvetica,sans-Serif" font-size="14.00">ristretto.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1168.5,-1017 1168.5,-1254 2163,-1254 2163,-1017 1168.5,-1017"/>
<text text-anchor="middle" x="1665.75" y="-1238.8" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightgrey" stroke="lightgrey" points="395.5,-8 395.5,-83 833,-83 833,-8 395.5,-8"/>
<text text-anchor="middle" x="614.25" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">traits.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightgrey" stroke="lightgrey" points="461.5,-336 461.5,-465 1036,-465 1036,-336 461.5,-336"/>
<text text-anchor="middle" x="748.75" y="-449.8" font-family="Helvetica,sans-Serif" font-size="14.00">lib.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightgrey" stroke="lightgrey" points="461.5,-91 461.5,-328 531.5,-328 531.5,-91 461.5,-91"/>
<text text-anchor="middle" x="496.5" y="-312.8" font-family="Helvetica,sans-Serif" font-size="14.00">args.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightgrey" stroke="lightgrey" points="934,-1617 934,-1746 1036,-1746 1036,-1617 934,-1617"/>
<text text-anchor="middle" x="985" y="-1730.8" font-family="Helvetica,sans-Serif" font-size="14.00">proof.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1137,-622 1137,-805 1382,-805 1382,-622 1137,-622"/>
<text text-anchor="middle" x="1259.5" y="-789.8" font-family="Helvetica,sans-Serif" font-size="14.00">shoapi.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightgrey" stroke="lightgrey" points="911,-859 911,-1042 1060,-1042 1060,-859 911,-859"/>
<text text-anchor="middle" x="985.5" y="-1026.8" font-family="Helvetica,sans-Serif" font-size="14.00">shohmacsha256.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightgrey" stroke="lightgrey" points="930,-776 930,-851 1041,-851 1041,-776 930,-776"/>
<text text-anchor="middle" x="985.5" y="-835.8" font-family="Helvetica,sans-Serif" font-size="14.00">shosha256.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightgrey" stroke="lightgrey" points="460.5,-2350 460.5,-2647 1117,-2647 1117,-2350 460.5,-2350"/>
<text text-anchor="middle" x="788.75" y="-2631.8" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightgrey" stroke="lightgrey" points="8,-1224 8,-1299 168,-1299 168,-1224 8,-1224"/>
<text text-anchor="middle" x="88" y="-1283.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightgrey" stroke="lightgrey" points="188,-1170 188,-1677 609,-1677 609,-1170 188,-1170"/>
<text text-anchor="middle" x="398.5" y="-1661.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightgrey" stroke="lightgrey" points="445,-1033 445,-1162 548,-1162 548,-1033 445,-1033"/>
<text text-anchor="middle" x="496.5" y="-1146.8" font-family="Helvetica,sans-Serif" font-size="14.00">sho.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get().</title>
<polygon fill="white" stroke="black" points="1286.5,-2812 1232.5,-2812 1232.5,-2776 1286.5,-2776 1286.5,-2812"/>
<text text-anchor="middle" x="1259.5" y="-2790.3" font-family="Helvetica,sans-Serif" font-size="14.00">get</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().</title>
<g id="a_node2"><a xlink:title="fn get_selected_backend() &#45;&gt; BackendKind { &#160;&#160;&#160;&#160;#[cfg(all(curve25519_dalek_backend = &#39; simd&#39; , nightly))] &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cpufeatures::new!(cpuid_avx512, &#39; avx512ifma&#39; , &#39; avx512vl&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let token_...">
<polygon fill="white" stroke="black" points="1069.5,-2812 900.5,-2812 900.5,-2776 1069.5,-2776 1069.5,-2812"/>
<text text-anchor="middle" x="985" y="-2790.3" font-family="Helvetica,sans-Serif" font-size="14.00">get_selected_backend</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get().</title>
<path fill="none" stroke="gray" d="M1069.61,-2794C1120.66,-2794 1183.37,-2794 1222.13,-2794"/>
<polygon fill="gray" stroke="gray" points="1222.4,-2797.5 1232.4,-2794 1222.4,-2790.5 1222.4,-2797.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init().</title>
<polygon fill="white" stroke="black" points="1286.5,-2866 1232.5,-2866 1232.5,-2830 1286.5,-2830 1286.5,-2866"/>
<text text-anchor="middle" x="1259.5" y="-2844.3" font-family="Helvetica,sans-Serif" font-size="14.00">init</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init().</title>
<path fill="none" stroke="gray" d="M1069.61,-2810.57C1120.66,-2820.69 1183.37,-2833.11 1222.13,-2840.79"/>
<polygon fill="gray" stroke="gray" points="1221.91,-2844.32 1232.4,-2842.83 1223.28,-2837.45 1221.91,-2844.32"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<g id="a_node4"><a xlink:title="pub fn straus_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint where &#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;I::Item: core::borrow::Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;J::Item: core::borrow::Borrow&lt;...">
<polygon fill="white" stroke="black" points="819,-2812 643,-2812 643,-2776 819,-2776 819,-2812"/>
<text text-anchor="middle" x="731" y="-2790.3" font-family="Helvetica,sans-Serif" font-size="14.00">straus_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().</title>
<path fill="none" stroke="gray" d="M819.08,-2794C842,-2794 866.84,-2794 890.1,-2794"/>
<polygon fill="gray" stroke="gray" points="890.32,-2797.5 900.32,-2794 890.32,-2790.5 890.32,-2797.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node8"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="white" stroke="black" points="1048,-2729 922,-2729 922,-2693 1048,-2693 1048,-2729"/>
<text text-anchor="middle" x="985" y="-2707.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M786.68,-2775.99C825.68,-2763.15 878.27,-2745.82 919.35,-2732.29"/>
<polygon fill="gray" stroke="gray" points="920.59,-2735.57 928.99,-2729.12 918.4,-2728.92 920.59,-2735.57"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node34"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item...">
<polygon fill="white" stroke="black" points="1048,-517 922,-517 922,-481 1048,-481 1048,-517"/>
<text text-anchor="middle" x="985" y="-495.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M750.57,-2775.73C774.91,-2750.38 816.43,-2701.86 833,-2651 897.67,-2452.47 815.62,-975.81 861,-772 882.29,-676.38 938.88,-573.61 967.27,-526.03"/>
<polygon fill="gray" stroke="gray" points="970.39,-527.64 972.55,-517.27 964.39,-524.02 970.39,-527.64"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;pub fn double(&amp;self) &#45;&gt; CompletedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Double() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let XX = self.X.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let YY = self.Y.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let ZZ2 = self.Z.square2(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let X_plus_Y = &amp;self.X ...">
<polygon fill="white" stroke="black" points="1529.5,-2520 1465.5,-2520 1465.5,-2484 1529.5,-2484 1529.5,-2520"/>
<text text-anchor="middle" x="1497.5" y="-2498.3" font-family="Helvetica,sans-Serif" font-size="14.00">double</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<g id="a_node14"><a xlink:title=" &#160;&#160;&#160;pub fn square(&amp;self) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.pow2k(1) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2110.5,-1659 2046.5,-1659 2046.5,-1623 2110.5,-1623 2110.5,-1659"/>
<text text-anchor="middle" x="2078.5" y="-1637.3" font-family="Helvetica,sans-Serif" font-size="14.00">square</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1529.53,-2497.37C1547.08,-2493.58 1568.7,-2486.83 1585,-2475 1821.56,-2303.35 1860.68,-2211.64 1966,-1939 1987.86,-1882.42 1960.34,-1715.15 1998.5,-1668 2007.82,-1656.49 2022.29,-1649.86 2036.31,-1646.06"/>
<polygon fill="gray" stroke="gray" points="2037.39,-1649.4 2046.36,-1643.76 2035.83,-1642.58 2037.39,-1649.4"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;pub fn as_extended(&amp;self) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: &amp;self.X * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: &amp;self.Y * &amp;self.Z, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: &amp;self.Z * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: &amp;self.X * &amp;s...">
<polygon fill="white" stroke="black" points="1549.5,-2412 1445.5,-2412 1445.5,-2376 1549.5,-2376 1549.5,-2412"/>
<text text-anchor="middle" x="1497.5" y="-2390.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_extended</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;pub fn as_projective(&amp;self) &#45;&gt; ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: &amp;self.X * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: &amp;self.Y * &amp;self.Z, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: &amp;self.Z * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1551,-2466 1444,-2466 1444,-2430 1551,-2430 1551,-2466"/>
<text text-anchor="middle" x="1497.5" y="-2444.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_projective</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<g id="a_node35"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: FieldElement::ZERO, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: FieldElement::ZERO, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1294,-2711 1225,-2711 1225,-2675 1294,-2675 1294,-2711"/>
<text text-anchor="middle" x="1259.5" y="-2689.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<path fill="none" stroke="gray" d="M1048.18,-2706.89C1099.04,-2703.53 1169.68,-2698.87 1214.75,-2695.89"/>
<polygon fill="gray" stroke="gray" points="1215.04,-2699.38 1224.79,-2695.23 1214.58,-2692.39 1215.04,-2699.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().</title>
<g id="a_node36"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn mul_by_pow_2(&amp;self, k: u32) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!(k &gt; 0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut r: CompletedPoint; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s = self.as_projective(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..(k &#45; 1) {...">
<polygon fill="white" stroke="black" points="1318.5,-2657 1200.5,-2657 1200.5,-2621 1318.5,-2621 1318.5,-2657"/>
<text text-anchor="middle" x="1259.5" y="-2635.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_by_pow_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().</title>
<path fill="none" stroke="gray" d="M1048.05,-2700.33C1070.33,-2695.34 1095.29,-2688.38 1117,-2679 1126.73,-2674.79 1127.23,-2670.1 1137,-2666 1153.65,-2659.01 1172.39,-2653.7 1190.07,-2649.73"/>
<polygon fill="gray" stroke="gray" points="1191.28,-2653.05 1200.33,-2647.54 1189.82,-2646.2 1191.28,-2653.05"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<g id="a_node9"><a xlink:title=" &#160;&#160;&#160;fn conditional_assign(&amp;mut self, other: &amp;FieldElement51, choice: Choice) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0[0].conditional_assign(&amp;other.0[0], choice); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0[1].conditional_assign(&amp;other.0[1], choice); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2150.5,-1605 2006.5,-1605 2006.5,-1569 2150.5,-1569 2150.5,-1605"/>
<text text-anchor="middle" x="2078.5" y="-1583.3" font-family="Helvetica,sans-Serif" font-size="14.00">conditional_assign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<g id="a_node10"><a xlink:title=" &#160;&#160;&#160;pub fn as_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Let h = limbs[0] + limbs[1]*2^51 + ... + limbs[4]*2^204. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Write h = pq + r with 0 &lt;= r &lt; p. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We want to co...">
<polygon fill="white" stroke="black" points="2117,-1713 2040,-1713 2040,-1677 2117,-1677 2117,-1713"/>
<text text-anchor="middle" x="2078.5" y="-1691.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<g id="a_node12"><a xlink:title=" &#160;&#160;&#160;fn reduce(mut limbs: [u64; 5]) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const LOW_51_BIT_MASK: u64 = (1u64 &lt;&lt; 51) &#45; 1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Since the input limbs are bounded by 2^64, the biggest &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// carry&#45;out is...">
<polygon fill="white" stroke="black" points="2303,-1659 2239,-1659 2239,-1623 2303,-1623 2303,-1659"/>
<text text-anchor="middle" x="2271" y="-1637.3" font-family="Helvetica,sans-Serif" font-size="14.00">reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<path fill="none" stroke="gray" d="M2117.14,-1684.33C2149.37,-1675.19 2195.7,-1662.06 2228.89,-1652.65"/>
<polygon fill="gray" stroke="gray" points="2230.08,-1655.95 2238.74,-1649.86 2228.17,-1649.22 2230.08,-1655.95"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes().</title>
<g id="a_node11"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes(bytes: &amp;[u8; 32]) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let load8 = |input: &amp;[u8]| &#45;&gt; u64 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(input[0] as u64) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| ((input[1] as u64) &lt;&lt; 8) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| ((input[2]...">
<polygon fill="white" stroke="black" points="2125.5,-1551 2031.5,-1551 2031.5,-1515 2125.5,-1515 2125.5,-1551"/>
<text text-anchor="middle" x="2078.5" y="-1529.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<g id="a_node13"><a xlink:title=" &#160;&#160;&#160;pub fn pow2k(&amp;self, mut k: u32) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!( k &gt; 0 ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/// Multiply two 64&#45;bit integers with 128 bits of output. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[inline(always)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fn m(x: u6...">
<polygon fill="white" stroke="black" points="2302,-1713 2240,-1713 2240,-1677 2302,-1677 2302,-1713"/>
<text text-anchor="middle" x="2271" y="-1691.3" font-family="Helvetica,sans-Serif" font-size="14.00">pow2k</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="edge187" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<path fill="none" stroke="gray" d="M2110.53,-1649.8C2143.06,-1659.02 2194.3,-1673.54 2229.88,-1683.63"/>
<polygon fill="gray" stroke="gray" points="2229.35,-1687.12 2239.93,-1686.47 2231.26,-1680.38 2229.35,-1687.12"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub().</title>
<g id="a_node15"><a xlink:title=" &#160;&#160;&#160;pub fn sub(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Optimization barrier to prevent compiler from inserting branch instructions &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// TODO(tarcieri): find a better home (or abstra...">
<polygon fill="white" stroke="black" points="2494,-1468 2440,-1468 2440,-1432 2494,-1432 2494,-1468"/>
<text text-anchor="middle" x="2467" y="-1446.3" font-family="Helvetica,sans-Serif" font-size="14.00">sub</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().</title>
<g id="a_node16"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_wide(bytes: &amp;[u8; 64]) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut words = [0u64; 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;words[i] |= (bytes[(i * 8) + j] as u64...">
<polygon fill="white" stroke="black" points="2145,-1468 2012,-1468 2012,-1432 2145,-1432 2145,-1468"/>
<text text-anchor="middle" x="2078.5" y="-1446.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_wide</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<g id="a_node22"><a xlink:title=" &#160;&#160;&#160;pub fn montgomery_mul(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_reduce(&amp;Scalar52::mul_internal(a, b)) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2340.5,-1360 2201.5,-1360 2201.5,-1324 2340.5,-1324 2340.5,-1360"/>
<text text-anchor="middle" x="2271" y="-1338.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<path fill="none" stroke="gray" d="M2145.08,-1434.44C2151.53,-1431.3 2157.65,-1427.53 2163,-1423 2183.63,-1405.53 2170.51,-1386.64 2191,-1369 2192.36,-1367.83 2193.77,-1366.71 2195.23,-1365.64"/>
<polygon fill="gray" stroke="gray" points="2197.48,-1368.35 2204.01,-1360 2193.7,-1362.46 2197.48,-1368.35"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().</title>
<g id="a_node26"><a xlink:title=" &#160;&#160;&#160;pub fn add(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sum = Scalar52::ZERO; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mask = (1u64 &lt;&lt; 52) &#45; 1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// a + b &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut carry: u64 = 0; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0...">
<polygon fill="white" stroke="black" points="2298,-1468 2244,-1468 2244,-1432 2298,-1432 2298,-1468"/>
<text text-anchor="middle" x="2271" y="-1446.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().</title>
<path fill="none" stroke="gray" d="M2145.06,-1450C2174.63,-1450 2208.44,-1450 2233.43,-1450"/>
<polygon fill="gray" stroke="gray" points="2233.56,-1453.5 2243.56,-1450 2233.56,-1446.5 2233.56,-1453.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().</title>
<g id="a_node17"><a xlink:title=" &#160;&#160;&#160;pub fn montgomery_square(&amp;self) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_reduce(&amp;Scalar52::square_internal(self)) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2351,-1414 2191,-1414 2191,-1378 2351,-1378 2351,-1414"/>
<text text-anchor="middle" x="2271" y="-1392.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_square</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<g id="a_node18"><a xlink:title=" &#160;&#160;&#160;pub (crate) fn montgomery_reduce(limbs: &amp;[u128; 9]) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[inline(always)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fn part1(sum: u128) &#45;&gt; (u128, u64) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let p = (sum as u64).wrapping_mul(constants::L...">
<polygon fill="white" stroke="black" points="2547,-1360 2387,-1360 2387,-1324 2547,-1324 2547,-1360"/>
<text text-anchor="middle" x="2467" y="-1338.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M2336.87,-1377.94C2354.34,-1373.08 2373.38,-1367.78 2391.34,-1362.78"/>
<polygon fill="gray" stroke="gray" points="2392.5,-1366.09 2401.19,-1360.04 2390.62,-1359.35 2392.5,-1366.09"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().</title>
<g id="a_node25"><a xlink:title=" &#160;&#160;&#160;fn square_internal(a: &amp;Scalar52) &#45;&gt; [u128; 9] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aa = [ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[0] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[1] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[2] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[3] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;m( a[0]...">
<polygon fill="white" stroke="black" points="2528.5,-1414 2405.5,-1414 2405.5,-1378 2528.5,-1378 2528.5,-1414"/>
<text text-anchor="middle" x="2467" y="-1392.3" font-family="Helvetica,sans-Serif" font-size="14.00">square_internal</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().</title>
<path fill="none" stroke="gray" d="M2351.19,-1396C2365.77,-1396 2380.91,-1396 2395.23,-1396"/>
<polygon fill="gray" stroke="gray" points="2395.49,-1399.5 2405.49,-1396 2395.49,-1392.5 2395.49,-1399.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().</title>
<g id="a_node19"><a xlink:title=" &#160;&#160;&#160;pub fn as_montgomery(&amp;self) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_mul(self, &amp;constants::RR) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2142.5,-1306 2014.5,-1306 2014.5,-1270 2142.5,-1270 2142.5,-1306"/>
<text text-anchor="middle" x="2078.5" y="-1284.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<path fill="none" stroke="gray" d="M2142.67,-1305.91C2159.94,-1310.8 2178.81,-1316.15 2196.6,-1321.19"/>
<polygon fill="gray" stroke="gray" points="2195.78,-1324.6 2206.35,-1323.96 2197.69,-1317.86 2195.78,-1324.6"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().</title>
<g id="a_node20"><a xlink:title=" &#160;&#160;&#160;pub fn from_montgomery(&amp;self) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut limbs = [0u128; 9]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..5 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;limbs[i] = self[i] as u128; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_reduce(&amp;limbs...">
<polygon fill="white" stroke="black" points="2343.5,-1306 2198.5,-1306 2198.5,-1270 2343.5,-1270 2343.5,-1306"/>
<text text-anchor="middle" x="2271" y="-1284.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M2336.87,-1306.06C2354.34,-1310.92 2373.38,-1316.22 2391.34,-1321.22"/>
<polygon fill="gray" stroke="gray" points="2390.62,-1324.65 2401.19,-1323.96 2392.5,-1317.91 2390.62,-1324.65"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().</title>
<g id="a_node21"><a xlink:title=" &#160;&#160;&#160;pub (crate) fn mul_internal(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; [u128; 9] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut z = [0u128; 9]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;z[0] = m(a[0], b[0]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;z[1] = m(a[0], b[1]) + m(a[1], b[0]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;z[2] = m...">
<polygon fill="white" stroke="black" points="2518,-1306 2416,-1306 2416,-1270 2518,-1270 2518,-1306"/>
<text text-anchor="middle" x="2467" y="-1284.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_internal</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m().</title>
<g id="a_node24"><a xlink:title="fn m(x: u64, y: u64) &#45;&gt; u128 { &#160;&#160;&#160;&#160;(x as u128) * (y as u128) }">
<polygon fill="white" stroke="black" points="2637,-1360 2583,-1360 2583,-1324 2637,-1324 2637,-1360"/>
<text text-anchor="middle" x="2610" y="-1338.3" font-family="Helvetica,sans-Serif" font-size="14.00">m</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m().</title>
<path fill="none" stroke="gray" d="M2518.37,-1304.53C2527.93,-1307.86 2537.81,-1311.44 2547,-1315 2555.67,-1318.36 2564.91,-1322.23 2573.53,-1325.96"/>
<polygon fill="gray" stroke="gray" points="2572.39,-1329.28 2582.95,-1330.09 2575.2,-1322.87 2572.39,-1329.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M2340.67,-1342C2352.34,-1342 2364.6,-1342 2376.71,-1342"/>
<polygon fill="gray" stroke="gray" points="2376.82,-1345.5 2386.82,-1342 2376.82,-1338.5 2376.82,-1345.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().</title>
<path fill="none" stroke="gray" d="M2336.87,-1323.94C2359.22,-1317.72 2384.14,-1310.79 2406.08,-1304.68"/>
<polygon fill="gray" stroke="gray" points="2407.23,-1307.99 2415.93,-1301.94 2405.36,-1301.25 2407.23,-1307.99"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes().</title>
<g id="a_node23"><a xlink:title=" &#160;&#160;&#160;pub fn as_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s[ 0] = &#160;(self.0[ 0] &gt;&gt; &#160;0) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as u8; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s[ 1] = &#160;(self.0[ 0] &gt;&gt; &#160;8) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as u8;...">
<polygon fill="white" stroke="black" points="2117,-1414 2040,-1414 2040,-1378 2117,-1378 2117,-1414"/>
<text text-anchor="middle" x="2078.5" y="-1392.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m(). -->
<g id="edge161" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m().</title>
<path fill="none" stroke="gray" d="M2522.61,-1377.99C2530.82,-1375.09 2539.16,-1372.04 2547,-1369 2555.67,-1365.64 2564.91,-1361.77 2573.53,-1358.04"/>
<polygon fill="gray" stroke="gray" points="2575.2,-1361.13 2582.95,-1353.91 2572.39,-1354.72 2575.2,-1361.13"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub(). -->
<g id="edge185" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub().</title>
<path fill="none" stroke="gray" d="M2298.16,-1450C2332.1,-1450 2391.48,-1450 2429.75,-1450"/>
<polygon fill="gray" stroke="gray" points="2429.94,-1453.5 2439.94,-1450 2429.94,-1446.5 2429.94,-1453.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes().</title>
<g id="a_node27"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes(bytes: &amp;[u8; 32]) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut words = [0u64; 4]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..4 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;words[i] |= (bytes[(i * 8) + j] as u64) &lt;&lt; ...">
<polygon fill="white" stroke="black" points="2125.5,-1360 2031.5,-1360 2031.5,-1324 2125.5,-1324 2125.5,-1360"/>
<text text-anchor="middle" x="2078.5" y="-1338.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity().</title>
<g id="a_node28"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::EXTENDEDPOINT_IDENTITY &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1294,-571 1225,-571 1225,-535 1294,-535 1294,-571"/>
<text text-anchor="middle" x="1259.5" y="-549.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node29"><a xlink:title=" &#160;&#160;&#160;fn from(P: edwards::EdwardsPoint) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ExtendedPoint(FieldElement2625x4::new(&amp;P.X, &amp;P.Y, &amp;P.Z, &amp;P.T)) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1524.5,-571 1470.5,-571 1470.5,-535 1524.5,-535 1524.5,-571"/>
<text text-anchor="middle" x="1497.5" y="-549.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().</title>
<g id="a_node30"><a xlink:title=" &#160;&#160;&#160;fn from(P: ExtendedPoint) &#45;&gt; CachedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut x = P.0; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x = x.blend(x.diff_sum(), Lanes::AB); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// x = (Y2 &#45; X2, Y2 + X2, Z2, T2) = (S2 S3 Z2 T2) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x = x * (12166...">
<polygon fill="white" stroke="black" points="1524.5,-517 1470.5,-517 1470.5,-481 1524.5,-481 1524.5,-517"/>
<text text-anchor="middle" x="1497.5" y="-495.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node31"><a xlink:title=" &#160;&#160;&#160;fn from(point: &amp;edwards::EdwardsPoint) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = ExtendedPoint::from(*point); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut points = [CachedPoint::from(P); 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..7 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;points[i + 1] ...">
<polygon fill="white" stroke="black" points="1286.5,-517 1232.5,-517 1232.5,-481 1286.5,-481 1286.5,-517"/>
<text text-anchor="middle" x="1259.5" y="-495.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" d="M1286.59,-504.7C1311.21,-510.1 1349.14,-518.48 1382,-526 1408.24,-532.01 1437.82,-538.99 1460.33,-544.35"/>
<polygon fill="gray" stroke="gray" points="1459.61,-547.77 1470.15,-546.68 1461.23,-540.96 1459.61,-547.77"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().</title>
<path fill="none" stroke="gray" d="M1286.66,-499C1328.83,-499 1411.97,-499 1459.97,-499"/>
<polygon fill="gray" stroke="gray" points="1460.23,-502.5 1470.23,-499 1460.22,-495.5 1460.23,-502.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<g id="a_node32"><a xlink:title=" &#160;&#160;&#160;pub fn double(&amp;self) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Want to compute (X1 Y1 Z1 X1+Y1). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Not sure how to do this less expensively than computing &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// (X1 Y1 Z1 T1) &#45;&#45;(256bit shuffle)&#45;...">
<polygon fill="white" stroke="black" points="1529.5,-463 1465.5,-463 1465.5,-427 1529.5,-427 1529.5,-463"/>
<text text-anchor="middle" x="1497.5" y="-441.3" font-family="Helvetica,sans-Serif" font-size="14.00">double</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().</title>
<g id="a_node33"><a xlink:title=" &#160;&#160;&#160;pub fn mul_by_pow_2(&amp;self, k: u32) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut tmp: ExtendedPoint = *self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..k { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp = tmp.double(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1318.5,-463 1200.5,-463 1200.5,-427 1318.5,-427 1318.5,-463"/>
<text text-anchor="middle" x="1259.5" y="-441.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_by_pow_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<path fill="none" stroke="gray" d="M1318.53,-445C1360.95,-445 1417.44,-445 1455.3,-445"/>
<polygon fill="gray" stroke="gray" points="1455.45,-448.5 1465.45,-445 1455.45,-441.5 1455.45,-448.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity().</title>
<path fill="none" stroke="gray" d="M1048.18,-511.32C1099.04,-521.4 1169.68,-535.4 1214.75,-544.33"/>
<polygon fill="gray" stroke="gray" points="1214.3,-547.81 1224.79,-546.32 1215.66,-540.94 1214.3,-547.81"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" d="M1048.18,-499C1101.98,-499 1177.93,-499 1222.31,-499"/>
<polygon fill="gray" stroke="gray" points="1222.35,-502.5 1232.35,-499 1222.35,-495.5 1222.35,-502.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().</title>
<path fill="none" stroke="gray" d="M1048.18,-486.68C1090.58,-478.28 1146.75,-467.15 1190.37,-458.5"/>
<polygon fill="gray" stroke="gray" points="1191.19,-461.91 1200.32,-456.53 1189.83,-455.04 1191.19,-461.91"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().</title>
<path fill="none" stroke="gray" d="M1318.52,-2636.59C1340.3,-2633.16 1364.08,-2626.09 1382,-2612 1404.19,-2594.55 1390.99,-2575.87 1410,-2555 1422.89,-2540.85 1440.42,-2529.16 1456.33,-2520.4"/>
<polygon fill="gray" stroke="gray" points="1458.26,-2523.34 1465.47,-2515.58 1454.99,-2517.15 1458.26,-2523.34"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended().</title>
<path fill="none" stroke="gray" d="M1318.5,-2639.62C1341.33,-2636.78 1365.89,-2629.33 1382,-2612 1440.41,-2549.16 1354.28,-2486.24 1410,-2421 1416.81,-2413.02 1425.95,-2407.37 1435.73,-2403.37"/>
<polygon fill="gray" stroke="gray" points="1436.98,-2406.64 1445.25,-2400.02 1434.66,-2400.04 1436.98,-2406.64"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective().</title>
<path fill="none" stroke="gray" d="M1318.66,-2639.09C1341.23,-2636.12 1365.56,-2628.72 1382,-2612 1425.57,-2567.68 1368.33,-2521.11 1410,-2475 1416.58,-2467.72 1425.08,-2462.39 1434.18,-2458.48"/>
<polygon fill="gray" stroke="gray" points="1435.67,-2461.67 1443.83,-2454.91 1433.23,-2455.1 1435.67,-2461.67"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective().</title>
<g id="a_node38"><a xlink:title=" &#160;&#160;&#160;pub(crate) const fn as_projective(&amp;self) &#45;&gt; ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: self.X, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: self.Y, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: self.Z, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1551,-2657 1444,-2657 1444,-2621 1551,-2621 1551,-2657"/>
<text text-anchor="middle" x="1497.5" y="-2635.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_projective</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective().</title>
<path fill="none" stroke="gray" d="M1318.53,-2639C1353.44,-2639 1397.88,-2639 1433.62,-2639"/>
<polygon fill="gray" stroke="gray" points="1433.93,-2642.5 1443.93,-2639 1433.93,-2635.5 1433.93,-2642.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node37"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="white" stroke="black" points="1322.5,-2603 1196.5,-2603 1196.5,-2567 1322.5,-2567 1322.5,-2603"/>
<text text-anchor="middle" x="1259.5" y="-2581.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M1196.25,-2588.31C1175.71,-2591.99 1153.84,-2598.99 1137,-2612 1121.59,-2623.91 1133,-2639.89 1117,-2651 1022.89,-2716.32 965.69,-2634.5 861,-2681 816.61,-2700.72 776.42,-2741.19 753.09,-2767.96"/>
<polygon fill="gray" stroke="gray" points="750.24,-2765.91 746.41,-2775.79 755.56,-2770.45 750.24,-2765.91"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<g id="a_node39"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn is_zero(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let zero = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes = self.as_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes.ct_eq(&amp;zero) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1529.5,-1904 1465.5,-1904 1465.5,-1868 1529.5,-1868 1529.5,-1904"/>
<text text-anchor="middle" x="1497.5" y="-1882.3" font-family="Helvetica,sans-Serif" font-size="14.00">is_zero</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1529.63,-1900.6C1611.66,-1936.67 1836.33,-2019.62 1966,-1913 2023.73,-1865.53 1957.09,-1810.22 1998.5,-1748 2006.75,-1735.6 2018.99,-1725.36 2031.39,-1717.29"/>
<polygon fill="gray" stroke="gray" points="2033.25,-1720.26 2039.95,-1712.06 2029.6,-1714.29 2033.25,-1720.26"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().</title>
<g id="a_node40"><a xlink:title=" &#160;&#160;&#160;fn pow_p58(&amp;self) &#45;&gt; FieldElement { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// The bits of (p&#45;5)/8 are 101111.....11. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nonzero bits of exponent &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (t19, _) = self.pow...">
<polygon fill="white" stroke="black" points="1958,-1904 1879,-1904 1879,-1868 1958,-1868 1958,-1904"/>
<text text-anchor="middle" x="1918.5" y="-1882.3" font-family="Helvetica,sans-Serif" font-size="14.00">pow_p58</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<path fill="none" stroke="gray" d="M1957.03,-1867.68C1960.34,-1865.08 1963.41,-1862.19 1966,-1859 1995.15,-1823.02 1964.31,-1791.24 1998.5,-1760 2053.9,-1709.39 2090.06,-1739.62 2163,-1722 2185.14,-1716.65 2209.8,-1710.44 2229.86,-1705.33"/>
<polygon fill="gray" stroke="gray" points="2230.78,-1708.71 2239.6,-1702.84 2229.05,-1701.93 2230.78,-1708.71"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().</title>
<g id="a_node44"><a xlink:title=" &#160;&#160;&#160;fn pow22501(&amp;self) &#45;&gt; (FieldElement, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Instead of managing which temporary variables are used &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// for what, we define as many as we need and leave stack &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// ...">
<polygon fill="white" stroke="black" points="2123.5,-1805 2033.5,-1805 2033.5,-1769 2123.5,-1769 2123.5,-1805"/>
<text text-anchor="middle" x="2078.5" y="-1783.3" font-family="Helvetica,sans-Serif" font-size="14.00">pow22501</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().</title>
<path fill="none" stroke="gray" d="M1951.14,-1867.9C1956.13,-1864.96 1961.22,-1861.93 1966,-1859 1991.56,-1843.34 2019.93,-1825.01 2041.66,-1810.76"/>
<polygon fill="gray" stroke="gray" points="2043.8,-1813.54 2050.24,-1805.12 2039.96,-1807.69 2043.8,-1813.54"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<g id="a_node41"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn sqrt_ratio_i(u: &amp;FieldElement, v: &amp;FieldElement) &#45;&gt; (Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Using the same trick as in ed25519 decoding, we merge the &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// inversion, the square roo...">
<polygon fill="white" stroke="black" points="1774.5,-1839 1681.5,-1839 1681.5,-1803 1774.5,-1803 1774.5,-1839"/>
<text text-anchor="middle" x="1728" y="-1817.3" font-family="Helvetica,sans-Serif" font-size="14.00">sqrt_ratio_i</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<path fill="none" stroke="gray" d="M1747.66,-1802.88C1789.33,-1763.33 1894.49,-1668.46 1998.5,-1614 2001.77,-1612.29 2005.18,-1610.65 2008.66,-1609.08"/>
<polygon fill="gray" stroke="gray" points="2010.16,-1612.25 2018,-1605.12 2007.42,-1605.8 2010.16,-1612.25"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1764.73,-1802.98C1793.35,-1788.64 1834.6,-1768.21 1871,-1751 1912.9,-1731.2 1929.3,-1736.3 1966,-1708 1984.14,-1694.01 1979.71,-1681.1 1998.5,-1668 2009.87,-1660.07 2023.77,-1654.3 2036.72,-1650.18"/>
<polygon fill="gray" stroke="gray" points="2037.77,-1653.52 2046.38,-1647.34 2035.8,-1646.8 2037.77,-1653.52"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().</title>
<path fill="none" stroke="gray" d="M1774.63,-1836.73C1803.31,-1846.63 1840.27,-1859.37 1869.41,-1869.42"/>
<polygon fill="gray" stroke="gray" points="1868.37,-1872.76 1878.97,-1872.71 1870.65,-1866.14 1868.37,-1872.76"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<g id="a_node43"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;FieldElement) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.as_bytes().ct_eq(&amp;other.as_bytes()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1945.5,-1850 1891.5,-1850 1891.5,-1814 1945.5,-1814 1945.5,-1850"/>
<text text-anchor="middle" x="1918.5" y="-1828.3" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1774.63,-1823.66C1807.38,-1825.57 1850.91,-1828.11 1881.28,-1829.89"/>
<polygon fill="gray" stroke="gray" points="1881.25,-1833.39 1891.44,-1830.48 1881.66,-1826.4 1881.25,-1833.39"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<g id="a_node45"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn is_negative(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes = self.as_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(bytes[0] &amp; 1).into() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1966,-1796 1871,-1796 1871,-1760 1966,-1760 1966,-1796"/>
<text text-anchor="middle" x="1918.5" y="-1774.3" font-family="Helvetica,sans-Serif" font-size="14.00">is_negative</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1774.63,-1810.59C1800.64,-1804.66 1833.45,-1797.17 1861.06,-1790.87"/>
<polygon fill="gray" stroke="gray" points="1862.01,-1794.25 1870.98,-1788.61 1860.45,-1787.42 1862.01,-1794.25"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().</title>
<g id="a_node42"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn invsqrt(&amp;self) &#45;&gt; (Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FieldElement::sqrt_ratio_i(&amp;FieldElement::ONE, self) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1530,-1839 1465,-1839 1465,-1803 1530,-1803 1530,-1839"/>
<text text-anchor="middle" x="1497.5" y="-1817.3" font-family="Helvetica,sans-Serif" font-size="14.00">invsqrt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1530.27,-1821C1566.68,-1821 1627.01,-1821 1671.28,-1821"/>
<polygon fill="gray" stroke="gray" points="1671.31,-1824.5 1681.31,-1821 1671.31,-1817.5 1671.31,-1824.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1945.81,-1820.63C1953.07,-1816.53 1960.46,-1811.32 1966,-1805 1990.76,-1776.76 1971.81,-1753.42 1998.5,-1727 2007.29,-1718.3 2018.76,-1711.87 2030.23,-1707.15"/>
<polygon fill="gray" stroke="gray" points="2031.65,-1710.35 2039.8,-1703.58 2029.21,-1703.8 2031.65,-1710.35"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="edge157" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<path fill="none" stroke="gray" d="M2118.67,-1768.93C2132.69,-1762.41 2148.58,-1754.94 2163,-1748 2185.42,-1737.22 2210.33,-1724.9 2230.47,-1714.85"/>
<polygon fill="gray" stroke="gray" points="2232.27,-1717.86 2239.65,-1710.26 2229.14,-1711.6 2232.27,-1717.86"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge156" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M2033.49,-1776.38C2014.04,-1769.27 1993.25,-1757.66 1982.25,-1739 1968.26,-1715.26 1968.26,-1700.74 1982.25,-1677 1993.33,-1658.2 2015.8,-1649.14 2036.24,-1644.82"/>
<polygon fill="gray" stroke="gray" points="2037.14,-1648.21 2046.37,-1643 2035.91,-1641.32 2037.14,-1648.21"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge178" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1946.43,-1759.85C1965.03,-1747.45 1988.21,-1732.34 1998.5,-1727 2008.55,-1721.78 2019.66,-1716.82 2030.29,-1712.43"/>
<polygon fill="gray" stroke="gray" points="2031.91,-1715.55 2039.87,-1708.57 2029.29,-1709.06 2031.91,-1715.55"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch().</title>
<g id="a_node46"><a xlink:title=" &#160;&#160;&#160;pub fn double_and_compress_batch&lt;&#39;a, I&gt;(points: I) &#45;&gt; Vec&lt;CompressedRistretto&gt; &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator&lt;Item = &amp;&#39;a RistrettoPoint&gt;, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[derive(Copy, Clone, Debug)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str...">
<polygon fill="white" stroke="black" points="1093,-2041 877,-2041 877,-2005 1093,-2005 1093,-2041"/>
<text text-anchor="middle" x="985" y="-2019.3" font-family="Helvetica,sans-Serif" font-size="14.00">double_and_compress_batch</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().</title>
<g id="a_node47"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn elligator_ristretto_flavor(r_0: &amp;FieldElement) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let i = &amp;constants::SQRT_M1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let d = &amp;constants::EDWARDS_D; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one_minus_d_sq = &amp;constants...">
<polygon fill="white" stroke="black" points="1350,-2041 1169,-2041 1169,-2005 1350,-2005 1350,-2041"/>
<text text-anchor="middle" x="1259.5" y="-2019.3" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_ristretto_flavor</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended().</title>
<path fill="none" stroke="gray" d="M1350.02,-2029.15C1362.19,-2033.63 1373.42,-2040.28 1382,-2050 1425.73,-2099.53 1373.83,-2290.71 1410,-2346 1416.61,-2356.11 1426.11,-2364.28 1436.42,-2370.82"/>
<polygon fill="gray" stroke="gray" points="1434.82,-2373.94 1445.23,-2375.94 1438.34,-2367.89 1434.82,-2373.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<path fill="none" stroke="gray" d="M1350.27,-2017.06C1362.4,-2012.55 1373.56,-2005.84 1382,-1996 1443.9,-1923.81 1342.31,-1635.79 1410,-1569 1490.55,-1489.53 1836.39,-1541.73 1996.09,-1571"/>
<polygon fill="gray" stroke="gray" points="1995.87,-1574.51 2006.34,-1572.89 1997.14,-1567.63 1995.87,-1574.51"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1350.04,-2016.87C1362.21,-2012.39 1373.43,-2005.73 1382,-1996 1427.11,-1944.74 1364.79,-1741.17 1410,-1690 1575.57,-1502.62 1719.15,-1564.11 1966,-1604 1969.72,-1604.6 2006.4,-1616.87 2036.69,-1627.12"/>
<polygon fill="gray" stroke="gray" points="2035.65,-1630.46 2046.25,-1630.36 2037.9,-1623.83 2035.65,-1630.46"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1350.26,-2016.29C1362.24,-2011.86 1373.36,-2005.37 1382,-1996 1443.44,-1929.37 1341.65,-1853.53 1410,-1794 1485.68,-1728.08 1613.63,-1769.34 1681.52,-1798.84"/>
<polygon fill="gray" stroke="gray" points="1680.13,-1802.05 1690.69,-1802.91 1682.97,-1795.66 1680.13,-1802.05"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1350.14,-2016.57C1362.22,-2012.11 1373.39,-2005.55 1382,-1996 1418.11,-1955.96 1369.74,-1790.86 1410,-1755 1539.37,-1639.79 1768.97,-1714.91 1868.84,-1756.12"/>
<polygon fill="gray" stroke="gray" points="1867.52,-1759.36 1878.09,-1759.99 1870.22,-1752.9 1867.52,-1759.36"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;pub const fn as_bytes(&amp;self) &#45;&gt; &amp;[u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self.0 &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1536,-1987 1459,-1987 1459,-1951 1536,-1951 1536,-1987"/>
<text text-anchor="middle" x="1497.5" y="-1965.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<g id="a_node49"><a xlink:title=" &#160;&#160;&#160;pub(super) fn step_2(s: FieldElement) &#45;&gt; (Choice, Choice, Choice, RistrettoPoint) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Step 2. &#160;Compute (X:Y:Z:T). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one = FieldElement::ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let ss = s.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1290.5,-2095 1228.5,-2095 1228.5,-2059 1290.5,-2059 1290.5,-2095"/>
<text text-anchor="middle" x="1259.5" y="-2073.3" font-family="Helvetica,sans-Serif" font-size="14.00">step_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1290.63,-2079.43C1318.7,-2079.87 1359.5,-2075.53 1382,-2050 1426.56,-1999.43 1363.95,-1797.22 1410,-1748 1495.78,-1656.32 1904.43,-1643.15 2036.34,-1641.29"/>
<polygon fill="gray" stroke="gray" points="2036.48,-1644.79 2046.44,-1641.16 2036.39,-1637.79 2036.48,-1644.79"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<path fill="none" stroke="gray" d="M1290.57,-2078.61C1318,-2078.38 1357.83,-2073.49 1382,-2050 1418.48,-2014.54 1379.86,-1979.99 1410,-1939 1421.71,-1923.08 1439.77,-1910.93 1456.37,-1902.31"/>
<polygon fill="gray" stroke="gray" points="1457.96,-1905.43 1465.39,-1897.88 1454.87,-1899.14 1457.96,-1905.43"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().</title>
<path fill="none" stroke="gray" d="M1290.6,-2079.16C1318.44,-2079.37 1358.9,-2074.85 1382,-2050 1440.41,-1987.16 1357.99,-1927.24 1410,-1859 1420.95,-1844.63 1438.49,-1835.59 1454.92,-1829.96"/>
<polygon fill="gray" stroke="gray" points="1456.41,-1833.16 1464.94,-1826.87 1454.35,-1826.47 1456.41,-1833.16"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1290.53,-2079.34C1318.54,-2079.73 1359.29,-2075.35 1382,-2050 1420.19,-2007.38 1368,-1832.87 1410,-1794 1474.04,-1734.73 1742.56,-1757.57 1860.98,-1770.96"/>
<polygon fill="gray" stroke="gray" points="1860.61,-1774.44 1870.94,-1772.1 1861.41,-1767.49 1860.61,-1774.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<g id="a_node50"><a xlink:title=" &#160;&#160;&#160;pub fn decompress(&amp;self) &#45;&gt; Option&lt;RistrettoPoint&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (s_encoding_is_canonical, s_is_negative, s) = decompress::step_1(self); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!s_encoding_is_canonical | s_is_negative).into...">
<polygon fill="white" stroke="black" points="1035.5,-2203 934.5,-2203 934.5,-2167 1035.5,-2167 1035.5,-2203"/>
<text text-anchor="middle" x="985" y="-2181.3" font-family="Helvetica,sans-Serif" font-size="14.00">decompress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<path fill="none" stroke="gray" d="M1035.57,-2178.58C1060.52,-2174.41 1090.94,-2167.86 1117,-2158 1155.82,-2143.32 1196.59,-2118.88 1224.35,-2100.68"/>
<polygon fill="gray" stroke="gray" points="1226.49,-2103.46 1232.88,-2095.01 1222.61,-2097.63 1226.49,-2103.46"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<g id="a_node56"><a xlink:title=" &#160;&#160;&#160;pub(super) fn step_1(repr: &amp;CompressedRistretto) &#45;&gt; (Choice, Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Step 1. Check s for validity: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// 1.a) s must be 32 bytes (we get this from the type system) ...">
<polygon fill="white" stroke="black" points="1290.5,-1987 1228.5,-1987 1228.5,-1951 1290.5,-1951 1290.5,-1987"/>
<text text-anchor="middle" x="1259.5" y="-1965.3" font-family="Helvetica,sans-Serif" font-size="14.00">step_1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<path fill="none" stroke="gray" d="M1035.73,-2187.91C1063.58,-2186.7 1096.69,-2180.02 1117,-2158 1166.19,-2104.68 1088.22,-2049.7 1137,-1996 1157.14,-1973.83 1191.09,-1967.75 1217.99,-1966.84"/>
<polygon fill="gray" stroke="gray" points="1218.32,-1970.34 1228.28,-1966.72 1218.24,-1963.34 1218.32,-1970.34"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;pub fn from_uniform_bytes(bytes: &amp;[u8; 64]) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// This follows the one&#45;way map construction from the Ristretto RFC: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// https://datatracker.ietf.org/doc/html/draft&#45;...">
<polygon fill="white" stroke="black" points="1062.5,-1987 907.5,-1987 907.5,-1951 1062.5,-1951 1062.5,-1987"/>
<text text-anchor="middle" x="985" y="-1965.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_uniform_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes().</title>
<path fill="none" stroke="gray" d="M1001.2,-1950.89C1030.11,-1915.21 1092.33,-1832.1 1117,-1750 1131.34,-1702.28 1102.16,-1337.62 1137,-1302 1192.99,-1244.76 1416.43,-1278 1496.5,-1278 1496.5,-1278 1496.5,-1278 1729,-1278 1834.87,-1278 1888.95,-1229.39 1966,-1302 2031.86,-1364.06 1941.31,-1432.87 1998.5,-1503 2004.69,-1510.59 2013.03,-1516.27 2021.98,-1520.51"/>
<polygon fill="gray" stroke="gray" points="2020.87,-1523.84 2031.45,-1524.42 2023.55,-1517.37 2020.87,-1523.84"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().</title>
<path fill="none" stroke="gray" d="M1062.63,-1984.19C1092.46,-1990.1 1127.04,-1996.95 1158.77,-2003.24"/>
<polygon fill="gray" stroke="gray" points="1158.47,-2006.75 1168.96,-2005.26 1159.83,-1999.88 1158.47,-2006.75"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node52"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; RistrettoPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;RistrettoPoin...">
<polygon fill="white" stroke="black" points="1048,-2257 922,-2257 922,-2221 1048,-2221 1048,-2257"/>
<text text-anchor="middle" x="985" y="-2235.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M1048.24,-2238.19C1072.52,-2241.05 1098.82,-2248.56 1117,-2266 1143.45,-2291.37 1124.17,-2311.67 1137,-2346 1166.98,-2426.23 1216.63,-2514.59 1242.19,-2557.96"/>
<polygon fill="gray" stroke="gray" points="1239.29,-2559.94 1247.41,-2566.75 1245.31,-2556.37 1239.29,-2559.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;pub const fn to_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0 &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1022.5,-2311 947.5,-2311 947.5,-2275 1022.5,-2275 1022.5,-2311"/>
<text text-anchor="middle" x="985" y="-2289.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<g id="a_node54"><a xlink:title=" &#160;&#160;&#160;pub fn compress(&amp;self) &#45;&gt; CompressedRistretto { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut X = self.0.X; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut Y = self.0.Y; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Z = &amp;self.0.Z; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let T = &amp;self.0.T; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let u1 = &amp;(Z + &amp;Y) * &amp;(Z ...">
<polygon fill="white" stroke="black" points="1026.5,-2149 943.5,-2149 943.5,-2113 1026.5,-2113 1026.5,-2149"/>
<text text-anchor="middle" x="985" y="-2127.3" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<path fill="none" stroke="gray" d="M1026.64,-2134.73C1056.49,-2135 1095.45,-2129.72 1117,-2104 1168.62,-2042.41 1084.63,-1441.96 1137,-1381 1242.81,-1257.84 1334.13,-1316 1496.5,-1316 1496.5,-1316 1496.5,-1316 1729,-1316 1850.67,-1316 1890.37,-1357.69 1966,-1453 1996.89,-1491.93 1963.97,-1524.26 1998.5,-1560 1999.41,-1560.94 2000.35,-1561.84 2001.32,-1562.72"/>
<polygon fill="gray" stroke="gray" points="1999.23,-1565.53 2009.3,-1568.82 2003.48,-1559.97 1999.23,-1565.53"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge154" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1026.56,-2134.66C1056.36,-2134.9 1095.3,-2129.59 1117,-2104 1153.89,-2060.49 1097.43,-1632.09 1137,-1591 1352.26,-1367.44 1526.09,-1541.16 1835,-1571 1894,-1576.7 1919.46,-1559.3 1966,-1596 1993.57,-1617.74 1972.53,-1644.38 1998.5,-1668 2007.29,-1676 2018.55,-1681.64 2029.8,-1685.62"/>
<polygon fill="gray" stroke="gray" points="2029.03,-1689.04 2039.62,-1688.7 2031.13,-1682.37 2029.03,-1689.04"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge153" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1026.61,-2134.71C1056.44,-2134.96 1095.39,-2129.67 1117,-2104 1162.03,-2050.5 1092.61,-1529.02 1137,-1475 1241.11,-1348.31 1332.52,-1392 1496.5,-1392 1496.5,-1392 1496.5,-1392 1729,-1392 1860.2,-1392 1874.33,-1474.14 1966,-1568 1983.49,-1585.91 1978.46,-1599 1998.5,-1614 2009.69,-1622.37 2023.66,-1628.27 2036.72,-1632.37"/>
<polygon fill="gray" stroke="gray" points="2035.9,-1635.77 2046.48,-1635.16 2037.83,-1629.04 2035.9,-1635.77"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt(). -->
<g id="edge151" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().</title>
<path fill="none" stroke="gray" d="M1026.57,-2134.13C1055.98,-2134.01 1094.4,-2128.49 1117,-2104 1166.19,-2050.68 1091.13,-1998.21 1137,-1942 1216.73,-1844.3 1378.33,-1825.06 1454.71,-1821.57"/>
<polygon fill="gray" stroke="gray" points="1455.05,-1825.06 1464.91,-1821.17 1454.78,-1818.06 1455.05,-1825.06"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge152" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1026.63,-2134.46C1056.27,-2134.55 1094.96,-2129.15 1117,-2104 1157.83,-2057.42 1109.63,-1881.56 1137,-1826 1208.77,-1680.28 1258.19,-1640.78 1410,-1583 1451.68,-1567.14 1813.46,-1573.56 1835,-1588 1889.8,-1624.74 1908.42,-1706.39 1914.58,-1749.72"/>
<polygon fill="gray" stroke="gray" points="1911.14,-1750.39 1915.89,-1759.86 1918.08,-1749.5 1911.14,-1750.39"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base().</title>
<g id="a_node55"><a xlink:title=" &#160;&#160;&#160;pub fn mul_base(scalar: &amp;Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(not(feature = &#39; precomputed&#45;tables&#39; ))] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar * constants::RISTRETTO_BASEPOINT_POINT &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(featur...">
<polygon fill="white" stroke="black" points="1026.5,-2095 943.5,-2095 943.5,-2059 1026.5,-2059 1026.5,-2095"/>
<text text-anchor="middle" x="985" y="-2073.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_base</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge182" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1260.89,-1950.99C1263.38,-1887.2 1281.35,-1671.14 1410,-1583 1431.03,-1568.6 1783.95,-1575.64 1835,-1588 1913.63,-1607.04 1923.74,-1637.08 1998.5,-1668 2008.65,-1672.2 2019.72,-1676.28 2030.27,-1679.94"/>
<polygon fill="gray" stroke="gray" points="2029.17,-1683.27 2039.77,-1683.18 2031.43,-1676.64 2029.17,-1683.27"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes(). -->
<g id="edge181" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes().</title>
<path fill="none" stroke="gray" d="M1261.03,-1950.73C1263.97,-1883.67 1283.28,-1648.53 1410,-1524 1592.22,-1344.92 1763.89,-1221.72 1966,-1378 2011.41,-1413.11 1960.17,-1460.27 1998.5,-1503 2004.9,-1510.13 2013.17,-1515.58 2021.95,-1519.73"/>
<polygon fill="gray" stroke="gray" points="2020.65,-1522.98 2031.22,-1523.61 2023.35,-1516.53 2020.65,-1522.98"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge180" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1262.31,-1950.61C1269.09,-1892.96 1298.61,-1715.37 1410,-1644 1569.68,-1541.69 1669.11,-1590.11 1835,-1682 1864.06,-1698.1 1887.57,-1728.66 1901.95,-1750.99"/>
<polygon fill="gray" stroke="gray" points="1899.11,-1753.05 1907.36,-1759.69 1905.05,-1749.35 1899.11,-1753.05"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="edge183" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<path fill="none" stroke="gray" d="M1290.87,-1969C1330.8,-1969 1401.4,-1969 1448.57,-1969"/>
<polygon fill="gray" stroke="gray" points="1448.85,-1972.5 1458.85,-1969 1448.85,-1965.5 1448.85,-1972.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().</title>
<g id="a_node57"><a xlink:title=" &#160;&#160;&#160;fn is_canonical(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.ct_eq(&amp;self.reduce()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1547.5,-1223 1447.5,-1223 1447.5,-1187 1547.5,-1187 1547.5,-1223"/>
<text text-anchor="middle" x="1497.5" y="-1201.3" font-family="Helvetica,sans-Serif" font-size="14.00">is_canonical</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq().</title>
<g id="a_node60"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;Self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.bytes.ct_eq(&amp;other.bytes) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1755,-1223 1701,-1223 1701,-1187 1755,-1187 1755,-1223"/>
<text text-anchor="middle" x="1728" y="-1201.3" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1547.52,-1205C1590.43,-1205 1651.81,-1205 1690.51,-1205"/>
<polygon fill="gray" stroke="gray" points="1690.8,-1208.5 1700.8,-1205 1690.8,-1201.5 1690.8,-1208.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<g id="a_node65"><a xlink:title=" &#160;&#160;&#160;fn reduce(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x = self.unpack(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let xR = UnpackedScalar::mul_internal(&amp;x, &amp;constants::R); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x_mod_l = UnpackedScalar::montgomery_reduce(&amp;xR); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1760,-1115 1696,-1115 1696,-1079 1760,-1079 1760,-1115"/>
<text text-anchor="middle" x="1728" y="-1093.3" font-family="Helvetica,sans-Serif" font-size="14.00">reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<path fill="none" stroke="gray" d="M1521.08,-1186.68C1544.69,-1168.37 1583.47,-1140.62 1621,-1124 1641.65,-1114.86 1665.98,-1108.38 1686.13,-1104.07"/>
<polygon fill="gray" stroke="gray" points="1686.84,-1107.5 1695.94,-1102.07 1685.44,-1100.64 1686.84,-1107.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().</title>
<g id="a_node58"><a xlink:title=" &#160;&#160;&#160;pub fn montgomery_invert(&amp;self) &#45;&gt; UnpackedScalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Uses the addition chain from &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// https://briansmith.org/ecc&#45;inversion&#45;addition&#45;chains&#45;01#curve25519_scalar_inversion &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l...">
<polygon fill="white" stroke="black" points="2155,-1223 2002,-1223 2002,-1187 2155,-1187 2155,-1223"/>
<text text-anchor="middle" x="2078.5" y="-1201.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().</title>
<path fill="none" stroke="gray" d="M2120.92,-1223.08C2136.18,-1231.63 2152.33,-1243.25 2163,-1258 2192.82,-1299.23 2156.53,-1331.57 2191,-1369 2191.88,-1369.96 2192.8,-1370.88 2193.75,-1371.78"/>
<polygon fill="gray" stroke="gray" points="2191.6,-1374.53 2201.61,-1378 2195.94,-1369.05 2191.6,-1374.53"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<path fill="none" stroke="gray" d="M2117.27,-1223.09C2132.89,-1231.96 2150.28,-1243.81 2163,-1258 2181.84,-1279.02 2169.81,-1296.35 2191,-1315 2192.31,-1316.15 2193.67,-1317.26 2195.07,-1318.31"/>
<polygon fill="gray" stroke="gray" points="2193.26,-1321.31 2203.54,-1323.87 2197.1,-1315.46 2193.26,-1321.31"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<g id="a_node59"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_mod_order_wide(input: &amp;[u8; 64]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UnpackedScalar::from_bytes_wide(input).pack() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1835,-1169 1621,-1169 1621,-1133 1835,-1133 1835,-1169"/>
<text text-anchor="middle" x="1728" y="-1147.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_mod_order_wide</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().</title>
<path fill="none" stroke="gray" d="M1817.83,-1169.06C1823.82,-1171.65 1829.62,-1174.61 1835,-1178 1856.1,-1191.27 1851.15,-1205.93 1871,-1221 1907.91,-1249.03 1937.09,-1227.78 1966,-1264 2011,-1320.37 1950.86,-1368.85 1998.5,-1423 2000.06,-1424.77 2001.73,-1426.42 2003.51,-1427.97"/>
<polygon fill="gray" stroke="gray" points="2001.72,-1431 2011.86,-1434.07 2005.85,-1425.34 2001.72,-1431"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;fn pack(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes: self.as_bytes(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1945.5,-1212 1891.5,-1212 1891.5,-1176 1945.5,-1176 1945.5,-1212"/>
<text text-anchor="middle" x="1918.5" y="-1190.3" font-family="Helvetica,sans-Serif" font-size="14.00">pack</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" d="M1808.12,-1169.05C1833.63,-1174.87 1860.66,-1181.03 1881.47,-1185.78"/>
<polygon fill="gray" stroke="gray" points="1880.92,-1189.25 1891.45,-1188.06 1882.48,-1182.42 1880.92,-1189.25"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<g id="a_node61"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_mod_order(bytes: [u8; 32]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Temporarily allow s_unreduced.bytes &gt; 2^255 ... &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let s_unreduced = Scalar { bytes }; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Then reduce mod the grou...">
<polygon fill="white" stroke="black" points="1585,-1096 1410,-1096 1410,-1060 1585,-1060 1585,-1096"/>
<text text-anchor="middle" x="1497.5" y="-1074.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_mod_order</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<path fill="none" stroke="gray" d="M1585.21,-1085.21C1619.69,-1088.08 1657.73,-1091.24 1685.72,-1093.57"/>
<polygon fill="gray" stroke="gray" points="1685.67,-1097.08 1695.93,-1094.42 1686.25,-1090.1 1685.67,-1097.08"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<g id="a_node62"><a xlink:title=" &#160;&#160;&#160;pub fn invert(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.unpack().invert().pack() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1756.5,-1061 1699.5,-1061 1699.5,-1025 1756.5,-1025 1756.5,-1061"/>
<text text-anchor="middle" x="1728" y="-1039.3" font-family="Helvetica,sans-Serif" font-size="14.00">invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn unpack(&amp;self) &#45;&gt; UnpackedScalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UnpackedScalar::from_bytes(&amp;self.bytes) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1952.5,-1158 1884.5,-1158 1884.5,-1122 1952.5,-1122 1952.5,-1158"/>
<text text-anchor="middle" x="1918.5" y="-1136.3" font-family="Helvetica,sans-Serif" font-size="14.00">unpack</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().</title>
<path fill="none" stroke="gray" d="M1756.52,-1045.31C1779.07,-1048.26 1811.05,-1054.93 1835,-1070 1856.1,-1083.27 1851.94,-1096.94 1871,-1113 1872.5,-1114.26 1874.07,-1115.5 1875.68,-1116.71"/>
<polygon fill="gray" stroke="gray" points="1873.81,-1119.67 1884.02,-1122.48 1877.79,-1113.91 1873.81,-1119.67"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().</title>
<g id="a_node64"><a xlink:title=" &#160;&#160;&#160;pub fn invert(&amp;self) &#45;&gt; UnpackedScalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.as_montgomery().montgomery_invert().from_montgomery() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1947,-1104 1890,-1104 1890,-1068 1947,-1068 1947,-1104"/>
<text text-anchor="middle" x="1918.5" y="-1082.3" font-family="Helvetica,sans-Serif" font-size="14.00">invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().</title>
<path fill="none" stroke="gray" d="M1756.81,-1049.34C1789.34,-1056.77 1843.36,-1069.09 1879.68,-1077.37"/>
<polygon fill="gray" stroke="gray" points="1879.35,-1080.89 1889.88,-1079.7 1880.91,-1074.06 1879.35,-1080.89"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" d="M1756.64,-1043.19C1780.19,-1044.8 1813.54,-1050.7 1835,-1070 1869.19,-1100.75 1841.37,-1131.83 1871,-1167 1874.21,-1170.82 1878.11,-1174.21 1882.27,-1177.2"/>
<polygon fill="gray" stroke="gray" points="1880.71,-1180.36 1891.03,-1182.77 1884.47,-1174.45 1880.71,-1180.36"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes().</title>
<path fill="none" stroke="gray" d="M1952.79,-1154.64C1957.81,-1158.07 1962.48,-1162.17 1966,-1167 2005.7,-1221.4 1953.65,-1264.76 1998.5,-1315 2004.88,-1322.14 2013.22,-1327.4 2022.1,-1331.26"/>
<polygon fill="gray" stroke="gray" points="2020.88,-1334.54 2031.47,-1334.81 2023.36,-1328 2020.88,-1334.54"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().</title>
<path fill="none" stroke="gray" d="M1947.02,-1097.06C1954.13,-1101.11 1961.14,-1106.37 1966,-1113 2005.05,-1166.26 1955.24,-1208.1 1998.5,-1258 2000.71,-1260.55 2003.16,-1262.88 2005.79,-1265.02"/>
<polygon fill="gray" stroke="gray" points="2003.95,-1268.01 2014.16,-1270.85 2007.96,-1262.26 2003.95,-1268.01"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().</title>
<path fill="none" stroke="gray" d="M1947.25,-1092.26C1994.45,-1103.79 2092.13,-1131.55 2163,-1178 2197.88,-1200.86 2230.11,-1236.9 2249.89,-1261.44"/>
<polygon fill="gray" stroke="gray" points="2247.4,-1263.94 2256.35,-1269.61 2252.89,-1259.59 2247.4,-1263.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().</title>
<path fill="none" stroke="gray" d="M1947.01,-1100.98C1953.37,-1104.71 1960.02,-1108.84 1966,-1113 1995.9,-1133.81 2027.75,-1160.6 2049.72,-1179.9"/>
<polygon fill="gray" stroke="gray" points="2047.53,-1182.64 2057.34,-1186.65 2052.17,-1177.4 2047.53,-1182.64"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M1760.18,-1089.47C1781.35,-1084.25 1809.95,-1077.01 1835,-1070 1851.11,-1065.49 1854.45,-1061.47 1871,-1059 2000.8,-1039.61 2045.36,-1044.81 2163,-1103 2260.83,-1151.39 2278.22,-1179.66 2351,-1261 2370.23,-1282.5 2364.14,-1297.4 2387,-1315 2388.77,-1316.36 2390.62,-1317.66 2392.52,-1318.9"/>
<polygon fill="gray" stroke="gray" points="2390.79,-1321.94 2401.2,-1323.92 2394.3,-1315.88 2390.79,-1321.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().</title>
<path fill="none" stroke="gray" d="M1760.28,-1094.26C1782.55,-1091.12 1812.42,-1084.39 1835,-1070 1856.31,-1056.42 1848.17,-1036.82 1871,-1026 2063.78,-934.64 2172.39,-909.34 2351,-1026 2432.27,-1079.08 2456.47,-1203.78 2463.38,-1259.84"/>
<polygon fill="gray" stroke="gray" points="2459.9,-1260.24 2464.51,-1269.78 2466.86,-1259.45 2459.9,-1260.24"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().</title>
<path fill="none" stroke="gray" d="M1760.13,-1104.1C1791.34,-1111.22 1839.66,-1122.24 1874.52,-1130.2"/>
<polygon fill="gray" stroke="gray" points="1873.9,-1133.64 1884.42,-1132.45 1875.45,-1126.82 1873.9,-1133.64"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" d="M1760.23,-1099.82C1782.48,-1103 1812.34,-1109.74 1835,-1124 1856.1,-1137.27 1851.94,-1150.94 1871,-1167 1874.65,-1170.07 1878.69,-1172.99 1882.82,-1175.7"/>
<polygon fill="gray" stroke="gray" points="1880.99,-1178.68 1891.34,-1180.94 1884.66,-1172.72 1880.99,-1178.68"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes().</title>
<g id="a_node66"><a xlink:title=" &#160;&#160;&#160;pub const fn as_bytes(&amp;self) &#45;&gt; &amp;[u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self.bytes &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1298,-1169 1221,-1169 1221,-1133 1298,-1133 1298,-1169"/>
<text text-anchor="middle" x="1259.5" y="-1147.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<g id="a_node67"><a xlink:title=" &#160;&#160;&#160;pub fn from_canonical_bytes(bytes: [u8; 32]) &#45;&gt; CtOption&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let high_bit_unset = (bytes[31] &gt;&gt; 7).ct_eq(&amp;0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let candidate = Scalar { bytes }; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CtOption::new(candidat...">
<polygon fill="white" stroke="black" points="1342.5,-1223 1176.5,-1223 1176.5,-1187 1342.5,-1187 1342.5,-1223"/>
<text text-anchor="middle" x="1259.5" y="-1201.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_canonical_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical(). -->
<g id="edge155" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().</title>
<path fill="none" stroke="gray" d="M1342.71,-1205C1373.75,-1205 1408.44,-1205 1437.01,-1205"/>
<polygon fill="gray" stroke="gray" points="1437.24,-1208.5 1447.24,-1205 1437.24,-1201.5 1437.24,-1208.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes(). -->
<g id="edge160" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes().</title>
<path fill="none" stroke="gray" d="M1945.59,-1207.06C1953.19,-1212.04 1960.83,-1218.38 1966,-1226 2002.57,-1279.95 1954.92,-1320.54 1998.5,-1369 2006.75,-1378.18 2018.26,-1384.24 2029.94,-1388.24"/>
<polygon fill="gray" stroke="gray" points="2029.14,-1391.65 2039.72,-1391.14 2031.13,-1384.94 2029.14,-1391.65"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;pub const fn to_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.bytes &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1297,-1115 1222,-1115 1222,-1079 1297,-1079 1297,-1115"/>
<text text-anchor="middle" x="1259.5" y="-1093.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;fn optional_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; Option&lt;Self::Point&gt; &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator&lt;Item = Option&lt;Self::Poin...">
<polygon fill="white" stroke="black" points="825,-52 637,-52 637,-16 825,-16 825,-52"/>
<text text-anchor="middle" x="731" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">optional_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;fn vartime_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; Self::Point &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;Self::Po...">
<polygon fill="white" stroke="black" points="589.5,-52 403.5,-52 403.5,-16 589.5,-16 589.5,-52"/>
<text text-anchor="middle" x="496.5" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul(). -->
<g id="edge179" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M589.72,-34C601.81,-34 614.25,-34 626.51,-34"/>
<polygon fill="gray" stroke="gray" points="626.75,-37.5 636.75,-34 626.75,-30.5 626.75,-37.5"/>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8().</title>
<g id="a_node72"><a xlink:title=" &#160;&#160;&#160;pub fn unwrap_u8(&amp;self) &#45;&gt; u8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0 &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="778,-434 684,-434 684,-398 778,-398 778,-434"/>
<text text-anchor="middle" x="731" y="-412.3" font-family="Helvetica,sans-Serif" font-size="14.00">unwrap_u8</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().</title>
<g id="a_node73"><a xlink:title=" &#160;&#160;&#160;fn from(input: u8) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!((input == 0u8) | (input == 1u8)); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Our goal is to prevent the compiler from inferring that the value held inside the &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// resu...">
<polygon fill="white" stroke="black" points="758,-380 704,-380 704,-344 758,-344 758,-380"/>
<text text-anchor="middle" x="731" y="-358.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 black_box(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 black_box().</title>
<g id="a_node74"><a xlink:title="fn black_box&lt;T: Copy&gt;(input: T) &#45;&gt; T { &#160;&#160;&#160;&#160;unsafe { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Optimization barrier &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// SAFETY: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#45; &amp;input is not NULL because we own input; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#45; input is Copy a...">
<polygon fill="white" stroke="black" points="1028,-380 942,-380 942,-344 1028,-344 1028,-380"/>
<text text-anchor="middle" x="985" y="-358.3" font-family="Helvetica,sans-Serif" font-size="14.00">black_box</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 black_box(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 black_box().</title>
<path fill="none" stroke="gray" d="M758.02,-362C798.81,-362 878.62,-362 931.63,-362"/>
<polygon fill="gray" stroke="gray" points="931.86,-365.5 941.86,-362 931.86,-358.5 931.86,-365.5"/>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().</title>
<g id="a_node75"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, _rhs: &amp;[T]) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let len = self.len(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Short&#45;circuit on the *lengths* of the slices, not their &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// contents. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len != _rhs.len() { &#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="523.5,-434 469.5,-434 469.5,-398 523.5,-398 523.5,-434"/>
<text text-anchor="middle" x="496.5" y="-412.3" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8().</title>
<path fill="none" stroke="gray" d="M523.72,-416C559.9,-416 626.06,-416 673.71,-416"/>
<polygon fill="gray" stroke="gray" points="673.88,-419.5 683.88,-416 673.88,-412.5 673.88,-419.5"/>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().</title>
<path fill="none" stroke="gray" d="M523.72,-409.91C565.43,-400.22 646.99,-381.28 694.09,-370.34"/>
<polygon fill="gray" stroke="gray" points="694.93,-373.74 703.88,-368.07 693.34,-366.92 694.93,-373.74"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new().</title>
<g id="a_node76"><a xlink:title=" &#160;&#160;&#160;pub fn new() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self(HashMap::new()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-297 469.5,-297 469.5,-261 523.5,-261 523.5,-297"/>
<text text-anchor="middle" x="496.5" y="-275.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new().</title>
<g id="a_node77"><a xlink:title=" &#160;&#160;&#160;pub fn new() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self(HashMap::new()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-189 469.5,-189 469.5,-153 523.5,-153 523.5,-189"/>
<text text-anchor="middle" x="496.5" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add().</title>
<g id="a_node78"><a xlink:title=" &#160;&#160;&#160;pub fn add(&amp;mut self, s: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, val: RistrettoPoint) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0.insert(s.into(), val); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-135 469.5,-135 469.5,-99 523.5,-99 523.5,-135"/>
<text text-anchor="middle" x="496.5" y="-113.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;pub fn add(&amp;mut self, s: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, val: Scalar) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0.insert(s.into(), val); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-243 469.5,-243 469.5,-207 523.5,-207 523.5,-243"/>
<text text-anchor="middle" x="496.5" y="-221.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;pub fn to_bytes(&amp;self) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&amp;self.challenge] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.into_iter() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.chain(&amp;self.response) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.flat_map(|scalar| *scalar.as_bytes()) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.collect() ...">
<polygon fill="white" stroke="black" points="1022.5,-1661 947.5,-1661 947.5,-1625 1022.5,-1625 1022.5,-1661"/>
<text text-anchor="middle" x="985" y="-1639.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes().</title>
<path fill="none" stroke="gray" d="M1022.62,-1633.66C1053.53,-1623.67 1095.99,-1604.54 1117,-1571 1140.21,-1533.94 1108.78,-1211.4 1137,-1178 1154.79,-1156.94 1185.02,-1150.17 1210.87,-1148.67"/>
<polygon fill="gray" stroke="gray" points="1211.02,-1152.17 1220.9,-1148.33 1210.79,-1145.17 1211.02,-1152.17"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().</title>
<g id="a_node81"><a xlink:title=" &#160;&#160;&#160;pub fn from_slice(bytes: &amp;[u8]) &#45;&gt; Option&lt;Self&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// TODO use Iterator::array_chunks once that&#39;s stabilized. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// See https://github.com/rust&#45;lang/rust/issues/100450. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let chu...">
<polygon fill="white" stroke="black" points="1028,-1715 942,-1715 942,-1679 1028,-1679 1028,-1715"/>
<text text-anchor="middle" x="985" y="-1693.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_slice</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<path fill="none" stroke="gray" d="M1028.03,-1700.6C1057.59,-1700.61 1095.55,-1695.04 1117,-1670 1146.39,-1635.7 1112.1,-1301.68 1137,-1264 1147.68,-1247.84 1164.12,-1235.97 1181.48,-1227.3"/>
<polygon fill="gray" stroke="gray" points="1183.03,-1230.44 1190.63,-1223.05 1180.08,-1224.09 1183.03,-1230.44"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<g id="a_node82"><a xlink:title=" &#160;&#160;&#160;fn absorb_and_ratchet(&amp;mut self, input: &amp;[u8]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.absorb(input); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.ratchet(); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1336.5,-720 1182.5,-720 1182.5,-684 1336.5,-684 1336.5,-720"/>
<text text-anchor="middle" x="1259.5" y="-698.3" font-family="Helvetica,sans-Serif" font-size="14.00">absorb_and_ratchet</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet().</title>
<g id="a_node83"><a xlink:title=" &#160;&#160;&#160;fn squeeze_and_ratchet(&amp;mut self, outlen: usize) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut out = vec![0; outlen]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut out); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;out &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1341.5,-666 1177.5,-666 1177.5,-630 1341.5,-630 1341.5,-666"/>
<text text-anchor="middle" x="1259.5" y="-644.3" font-family="Helvetica,sans-Serif" font-size="14.00">squeeze_and_ratchet</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array().</title>
<g id="a_node84"><a xlink:title=" &#160;&#160;&#160;fn squeeze_and_ratchet_as_array&lt;const N: usize&gt;(&amp;mut self) &#45;&gt; [u8; N] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut out = [0; N]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut out); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;out &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1374,-774 1145,-774 1145,-738 1374,-738 1374,-774"/>
<text text-anchor="middle" x="1259.5" y="-752.3" font-family="Helvetica,sans-Serif" font-size="14.00">squeeze_and_ratchet_as_array</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<g id="a_node85"><a xlink:title=" &#160;&#160;&#160;fn ratchet(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let Mode::RATCHETED = self.mode { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.hasher.update(&amp;[0x00]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.cv &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.copy_from_slice(&amp;self.hasher.cl...">
<polygon fill="white" stroke="black" points="1018,-1011 952,-1011 952,-975 1018,-975 1018,-1011"/>
<text text-anchor="middle" x="985" y="-989.3" font-family="Helvetica,sans-Serif" font-size="14.00">ratchet</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<g id="a_node86"><a xlink:title=" &#160;&#160;&#160;fn absorb(&amp;mut self, input: &amp;[u8]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let Mode::RATCHETED = self.mode { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.hasher = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Hmac::&lt;Sha256&gt;::new_from_slice(&amp;self.cv).expect(&#39; HMAC accepts 256&#45;bit k...">
<polygon fill="white" stroke="black" points="1017.5,-957 952.5,-957 952.5,-921 1017.5,-921 1017.5,-957"/>
<text text-anchor="middle" x="985" y="-935.3" font-family="Helvetica,sans-Serif" font-size="14.00">absorb</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<g id="a_node87"><a xlink:title=" &#160;&#160;&#160;fn new(label: &amp;[u8]) &#45;&gt; ShoHmacSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = ShoHmacSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hasher: Hmac::&lt;Sha256&gt;::new_from_slice(&amp;[0; HASH_LEN]) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; HMAC accepts 256&#45;bit keys...">
<polygon fill="white" stroke="black" points="1012,-903 958,-903 958,-867 1012,-867 1012,-903"/>
<text text-anchor="middle" x="985" y="-881.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge184" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M1012.04,-886.95C1041.9,-887.63 1090.16,-883.72 1117,-855 1155.71,-813.57 1098.15,-770.3 1137,-729 1146.59,-718.8 1159.11,-712.04 1172.45,-707.62"/>
<polygon fill="gray" stroke="gray" points="1173.64,-710.92 1182.29,-704.8 1171.71,-704.19 1173.64,-710.92"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().</title>
<g id="a_node88"><a xlink:title=" &#160;&#160;&#160;fn new(label: &amp;[u8]) &#45;&gt; ShoSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = ShoSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hasher: Sha256::new(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cv: [0; HASH_LEN], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mode: Mode::RATCHETED, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho.ab...">
<polygon fill="white" stroke="black" points="1012,-820 958,-820 958,-784 1012,-784 1012,-820"/>
<text text-anchor="middle" x="985" y="-798.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M1012.2,-787.01C1041.71,-770.7 1091.48,-744.82 1137,-729 1148.24,-725.09 1160.27,-721.62 1172.23,-718.57"/>
<polygon fill="gray" stroke="gray" points="1173.36,-721.89 1182.23,-716.11 1171.69,-715.1 1173.36,-721.89"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().</title>
<g id="a_node89"><a xlink:title=" &#160;&#160;&#160;pub fn add(&amp;mut self, lhs_str: &amp;str, rhs_pairs: &amp;[(&amp;str, &amp;str)]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (lhs_str.is_empty()) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| (rhs_pairs.is_empty()) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| (rhs_pairs.len() &gt; 255) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| (self...">
<polygon fill="white" stroke="black" points="523.5,-2502 469.5,-2502 469.5,-2466 523.5,-2466 523.5,-2502"/>
<text text-anchor="middle" x="496.5" y="-2480.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point().</title>
<g id="a_node91"><a xlink:title=" &#160;&#160;&#160;fn add_point( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_name: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;PointIndex, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let point_name = point_name.into(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match self.point_m...">
<polygon fill="white" stroke="black" points="773.5,-2616 688.5,-2616 688.5,-2580 773.5,-2580 773.5,-2616"/>
<text text-anchor="middle" x="731" y="-2594.3" font-family="Helvetica,sans-Serif" font-size="14.00">add_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point().</title>
<path fill="none" stroke="gray" d="M521.62,-2502.3C548.17,-2521.7 592.71,-2552.09 635,-2571 648.73,-2577.14 664.22,-2582.25 678.63,-2586.3"/>
<polygon fill="gray" stroke="gray" points="677.84,-2589.71 688.41,-2588.94 679.67,-2582.96 677.84,-2589.71"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar(). -->
<g id="node93" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar().</title>
<g id="a_node93"><a xlink:title=" &#160;&#160;&#160;fn add_scalar( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_name: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ScalarIndex, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_name = scalar_name.into(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match self.sc...">
<polygon fill="white" stroke="black" points="776.5,-2562 685.5,-2562 685.5,-2526 776.5,-2526 776.5,-2562"/>
<text text-anchor="middle" x="731" y="-2540.3" font-family="Helvetica,sans-Serif" font-size="14.00">add_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar().</title>
<path fill="none" stroke="gray" d="M523.72,-2490.77C560.31,-2500.21 627.55,-2517.56 675.31,-2529.89"/>
<polygon fill="gray" stroke="gray" points="674.63,-2533.33 685.19,-2532.44 676.38,-2526.55 674.63,-2533.33"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<g id="a_node90"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof_bytes: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let proof = Proof::from_slice(pro...">
<polygon fill="white" stroke="black" points="780,-2448 682,-2448 682,-2412 780,-2412 780,-2448"/>
<text text-anchor="middle" x="731" y="-2426.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes().</title>
<path fill="none" stroke="gray" d="M780.08,-2425.63C798.26,-2421.94 818.13,-2415.21 833,-2403 854.81,-2385.08 840.55,-2365.46 861,-2346 882.27,-2325.77 912.47,-2312.6 937.62,-2304.45"/>
<polygon fill="gray" stroke="gray" points="938.81,-2307.75 947.34,-2301.47 936.75,-2301.06 938.81,-2307.75"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M780.1,-2428.47C799.29,-2425.29 819.9,-2418.19 833,-2403 904.58,-2320.01 787.57,-2239.36 861,-2158 878.96,-2138.1 907.93,-2131.07 933.24,-2129.14"/>
<polygon fill="gray" stroke="gray" points="933.65,-2132.63 943.46,-2128.62 933.3,-2125.64 933.65,-2132.63"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" d="M780.16,-2429.04C799.61,-2425.99 820.39,-2418.83 833,-2403 887.72,-2334.29 827.25,-1694.09 861,-1613 924.91,-1459.43 1050.15,-1492.31 1117,-1340 1141.18,-1284.91 1094.36,-1112.45 1137,-1070 1207.62,-999.7 1500.38,-998.38 1585,-1051 1615.72,-1070.1 1592.89,-1101.22 1621,-1124 1622.55,-1125.26 1624.15,-1126.45 1625.79,-1127.6"/>
<polygon fill="gray" stroke="gray" points="1624.01,-1130.61 1634.36,-1132.86 1627.67,-1124.64 1624.01,-1130.61"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().</title>
<path fill="none" stroke="gray" d="M780.23,-2428.84C799.57,-2425.75 820.25,-2418.6 833,-2403 865.67,-2363 847.46,-1988.84 861,-1939 883.78,-1855.14 937.55,-1766.54 965.86,-1723.53"/>
<polygon fill="gray" stroke="gray" points="968.86,-1725.33 971.49,-1715.06 963.04,-1721.45 968.86,-1725.33"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M780.24,-2429.1C799.7,-2426.06 820.47,-2418.89 833,-2403 870.88,-2354.95 836.87,-1358.23 861,-1302 924.46,-1154.14 1050.77,-1192.64 1117,-1046 1146.05,-981.67 1091.12,-782.64 1137,-729 1146.27,-718.16 1158.83,-711.12 1172.37,-706.63"/>
<polygon fill="gray" stroke="gray" points="1173.71,-709.89 1182.37,-703.8 1171.8,-703.16 1173.71,-709.89"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array().</title>
<path fill="none" stroke="gray" d="M780.23,-2429.09C799.69,-2426.06 820.46,-2418.89 833,-2403 905.5,-2311.12 785.06,-1439.06 861,-1350 936.11,-1261.91 1040.18,-1388.59 1117,-1302 1139.39,-1276.76 1128.17,-1031.56 1137,-999 1159.76,-915.06 1212.76,-825.98 1240.64,-782.7"/>
<polygon fill="gray" stroke="gray" points="1243.66,-784.47 1246.18,-774.18 1237.8,-780.65 1243.66,-784.47"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<path fill="none" stroke="gray" d="M780.24,-2429.1C799.7,-2426.07 820.48,-2418.9 833,-2403 871.82,-2353.71 847.39,-1335.25 861,-1274 882.93,-1175.35 939.93,-1068.54 967.96,-1019.88"/>
<polygon fill="gray" stroke="gray" points="971,-1021.62 973.01,-1011.22 964.95,-1018.1 971,-1021.62"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<path fill="none" stroke="gray" d="M780.02,-2429.17C799.56,-2426.17 820.46,-2419 833,-2403 882.24,-2340.14 810.35,-1027.73 861,-966 880.18,-942.62 914.55,-936.62 942.09,-936.05"/>
<polygon fill="gray" stroke="gray" points="942.25,-939.55 952.26,-936.07 942.27,-932.55 942.25,-939.55"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M780.03,-2429.18C799.57,-2426.18 820.47,-2419.01 833,-2403 884.07,-2337.76 808.47,-976.07 861,-912 881.46,-887.04 919.23,-881.89 947.54,-882"/>
<polygon fill="gray" stroke="gray" points="947.78,-885.51 957.87,-882.27 947.97,-878.51 947.78,-885.51"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes(). -->
<g id="node95" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes().</title>
<g id="a_node95"><a xlink:title=" &#160;&#160;&#160;fn to_bytes(&amp;self) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let equation_count = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;u8::try_from(self.equations.len()).expect(&#39; number of equations fits in a byte&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_count = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;u...">
<polygon fill="white" stroke="black" points="1022.5,-2471 947.5,-2471 947.5,-2435 1022.5,-2435 1022.5,-2471"/>
<text text-anchor="middle" x="985" y="-2449.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes().</title>
<path fill="none" stroke="gray" d="M780.29,-2434.41C825.5,-2438.53 892.62,-2444.66 937.3,-2448.74"/>
<polygon fill="gray" stroke="gray" points="937.04,-2452.23 947.32,-2449.65 937.68,-2445.26 937.04,-2452.23"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points(). -->
<g id="node96" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points().</title>
<g id="a_node96"><a xlink:title=" &#160;&#160;&#160;fn sort_points(&amp;self, point_args: &amp;PointArgs) &#45;&gt; Result&lt;Vec&lt;RistrettoPoint&gt;, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if point_args.0.len() != self.point_vec.len() &#45; 1 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(BadArgsWrongNumberOfP...">
<polygon fill="white" stroke="black" points="1031.5,-2417 938.5,-2417 938.5,-2381 1031.5,-2381 1031.5,-2417"/>
<text text-anchor="middle" x="985" y="-2395.3" font-family="Helvetica,sans-Serif" font-size="14.00">sort_points</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points().</title>
<path fill="none" stroke="gray" d="M780.29,-2424.06C822.59,-2418.86 884.05,-2411.3 928.39,-2405.84"/>
<polygon fill="gray" stroke="gray" points="928.92,-2409.3 938.42,-2404.61 928.07,-2402.35 928.92,-2409.3"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="node98" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<g id="a_node98"><a xlink:title=" &#160;&#160;&#160;fn homomorphism_with_subtraction( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;g1: &amp;[Scalar], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all_points: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;challenge: Option&lt;Scalar&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; G2 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.equations &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="1109,-2525 861,-2525 861,-2489 1109,-2489 1109,-2525"/>
<text text-anchor="middle" x="985" y="-2503.3" font-family="Helvetica,sans-Serif" font-size="14.00">homomorphism_with_subtraction</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="gray" d="M773.84,-2448.1C798.81,-2458.43 831.34,-2471.05 861,-2480 868.59,-2482.29 876.5,-2484.47 884.48,-2486.53"/>
<polygon fill="gray" stroke="gray" points="883.68,-2489.94 894.24,-2488.98 885.39,-2483.15 883.68,-2489.94"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<g id="a_node92"><a xlink:title=" &#160;&#160;&#160;pub fn prove( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_args: &amp;ScalarArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: &amp;[u8], // must be 32 bytes &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Vec&lt;u8&gt;, Poksh...">
<polygon fill="white" stroke="black" points="524.5,-2448 468.5,-2448 468.5,-2412 524.5,-2412 524.5,-2448"/>
<text text-anchor="middle" x="496.5" y="-2426.3" font-family="Helvetica,sans-Serif" font-size="14.00">prove</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.66,-2429.77C549.18,-2428.21 584.99,-2422.41 609,-2403 629.72,-2386.25 613.64,-2364.92 635,-2349 725.15,-2281.8 865.05,-2282.11 937.29,-2287.71"/>
<polygon fill="gray" stroke="gray" points="937.19,-2291.22 947.45,-2288.57 937.78,-2284.24 937.19,-2291.22"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M524.82,-2431.04C550.15,-2430.45 587.14,-2425.36 609,-2403 646.85,-2364.29 602.73,-2327.47 635,-2284 703.55,-2191.67 753.47,-2198.76 861,-2158 884.05,-2149.26 910.65,-2142.99 933.2,-2138.7"/>
<polygon fill="gray" stroke="gray" points="934.05,-2142.1 943.26,-2136.86 932.79,-2135.21 934.05,-2142.1"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" d="M524.8,-2431.9C550.87,-2432.06 589.05,-2427.6 609,-2403 670.75,-2326.85 571.44,-1595.65 635,-1521 693.09,-1452.77 769.68,-1546.41 833,-1483 880,-1435.94 822.97,-1390.56 861,-1336 936.93,-1227.07 1045.03,-1293.58 1117,-1182 1137.74,-1149.85 1108.42,-1036.43 1137,-1011 1211.37,-944.82 1504.63,-952.25 1585,-1011 1627.55,-1042.1 1582.65,-1087.84 1621,-1124 1622.12,-1125.06 1623.28,-1126.08 1624.47,-1127.06"/>
<polygon fill="gray" stroke="gray" points="1622.59,-1130.01 1632.76,-1132.98 1626.66,-1124.32 1622.59,-1130.01"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.76,-2431.87C550.81,-2432 588.97,-2427.53 609,-2403 658.94,-2341.86 600.94,-1764.22 635,-1693 685.29,-1587.84 745.78,-1598.33 833,-1521 960.37,-1408.06 1037.1,-1414.31 1117,-1264 1146.5,-1208.5 1094.29,-1170.12 1137,-1124 1155.71,-1103.79 1185.9,-1097.02 1211.51,-1095.3"/>
<polygon fill="gray" stroke="gray" points="1211.95,-1098.79 1221.79,-1094.86 1211.65,-1091.79 1211.95,-1098.79"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.88,-2431.55C550.62,-2431.38 588.23,-2426.64 609,-2403 644.12,-2363.04 620.88,-2216.3 635,-2165 699.17,-1931.82 672.84,-1821.94 861,-1670 882.38,-1652.74 912.41,-1645.92 937.45,-1643.45"/>
<polygon fill="gray" stroke="gray" points="937.78,-1646.93 947.48,-1642.66 937.23,-1639.95 937.78,-1646.93"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M524.83,-2431.93C550.92,-2432.1 589.12,-2427.65 609,-2403 646.4,-2356.63 596.5,-1376.46 635,-1331 692.91,-1262.62 774.21,-1360.62 833,-1293 873.66,-1246.24 817.96,-780.58 861,-736 902.44,-693.08 1068.1,-692.53 1172.04,-696.76"/>
<polygon fill="gray" stroke="gray" points="1172.07,-700.26 1182.21,-697.19 1172.37,-693.27 1172.07,-700.26"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet().</title>
<path fill="none" stroke="gray" d="M524.83,-2431.93C550.93,-2432.1 589.13,-2427.66 609,-2403 647.71,-2354.97 622.73,-1353.45 635,-1293 682.54,-1058.76 756.97,-1019.6 833,-793 847.82,-748.84 825.53,-722.2 861,-692 945.25,-620.27 1078.64,-620.79 1167.34,-631.41"/>
<polygon fill="gray" stroke="gray" points="1167.04,-634.9 1177.4,-632.68 1167.91,-627.96 1167.04,-634.9"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array().</title>
<path fill="none" stroke="gray" d="M524.83,-2431.92C550.91,-2432.09 589.11,-2427.64 609,-2403 681.19,-2313.58 560.69,-1456.67 635,-1369 692.94,-1300.65 774.21,-1398.62 833,-1331 873.8,-1284.07 816.81,-815.76 861,-772 898.46,-734.9 1032.61,-736.36 1134.8,-743.58"/>
<polygon fill="gray" stroke="gray" points="1134.67,-747.08 1144.9,-744.32 1135.18,-740.1 1134.67,-747.08"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<path fill="none" stroke="gray" d="M524.81,-2431.91C550.88,-2432.06 589.07,-2427.61 609,-2403 672.67,-2324.4 571.34,-1571.6 635,-1493 691.99,-1422.64 773.09,-1512.9 833,-1445 869.55,-1403.58 843.27,-1250.32 861,-1198 884.61,-1128.31 934.51,-1056.83 962.96,-1019.46"/>
<polygon fill="gray" stroke="gray" points="966.04,-1021.2 969.37,-1011.15 960.49,-1016.93 966.04,-1021.2"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<path fill="none" stroke="gray" d="M524.81,-2431.91C550.89,-2432.07 589.08,-2427.62 609,-2403 675.97,-2320.21 566.06,-1526.16 635,-1445 693.01,-1376.71 773.76,-1474.23 833,-1407 897.92,-1333.32 797.06,-1040.53 861,-966 880.63,-943.12 914.8,-937.05 942.15,-936.33"/>
<polygon fill="gray" stroke="gray" points="942.26,-939.83 952.25,-936.29 942.23,-932.83 942.26,-939.83"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M524.82,-2431.92C550.9,-2432.08 589.1,-2427.63 609,-2403 678.58,-2316.9 563.37,-1491.41 635,-1407 692.97,-1338.68 773.84,-1436.3 833,-1369 900.18,-1292.59 794.84,-989.3 861,-912 881.93,-887.55 919.45,-882.29 947.57,-882.24"/>
<polygon fill="gray" stroke="gray" points="947.76,-885.74 957.83,-882.44 947.9,-878.74 947.76,-885.74"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="gray" d="M524.63,-2430C560.45,-2430 624.49,-2430 671.56,-2430"/>
<polygon fill="gray" stroke="gray" points="671.64,-2433.5 681.64,-2430 671.63,-2426.5 671.64,-2433.5"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.75,-2434.35C547.75,-2438.54 581.26,-2445.91 609,-2457 621.39,-2461.95 622.11,-2468.55 635,-2472 740.23,-2500.18 869.51,-2479.49 937.36,-2464.62"/>
<polygon fill="gray" stroke="gray" points="938.32,-2467.99 947.31,-2462.38 936.78,-2461.16 938.32,-2467.99"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points().</title>
<path fill="none" stroke="gray" d="M524.66,-2436.95C552.23,-2443.63 596.26,-2453.23 635,-2457 678.79,-2461.26 792.79,-2474.87 833,-2457 849.97,-2449.46 844.95,-2435.32 861,-2426 881.33,-2414.19 906.28,-2407.54 928.39,-2403.8"/>
<polygon fill="gray" stroke="gray" points="928.96,-2407.25 938.32,-2402.27 927.9,-2400.33 928.96,-2407.25"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars(). -->
<g id="node97" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars().</title>
<g id="a_node97"><a xlink:title=" &#160;&#160;&#160;fn sort_scalars(&amp;self, scalar_args: &amp;ScalarArgs) &#45;&gt; Result&lt;G1, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if scalar_args.0.len() != self.scalar_vec.len() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(BadArgsWrongNumberOfScalarArgs); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="780.5,-2394 681.5,-2394 681.5,-2358 780.5,-2358 780.5,-2394"/>
<text text-anchor="middle" x="731" y="-2372.3" font-family="Helvetica,sans-Serif" font-size="14.00">sort_scalars</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars().</title>
<path fill="none" stroke="gray" d="M524.63,-2423.7C560.41,-2415.39 624.36,-2400.54 671.42,-2389.61"/>
<polygon fill="gray" stroke="gray" points="672.24,-2393.01 681.19,-2387.34 670.66,-2386.19 672.24,-2393.01"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="gray" d="M524.75,-2432.29C548.36,-2435.24 582.74,-2441.93 609,-2457 623.45,-2465.29 619.89,-2476.98 635,-2484 672.47,-2501.41 768.71,-2506.81 850.66,-2508.05"/>
<polygon fill="gray" stroke="gray" points="850.78,-2511.55 860.83,-2508.18 850.88,-2504.55 850.78,-2511.55"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new(). -->
<g id="node94" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new().</title>
<g id="a_node94"><a xlink:title=" &#160;&#160;&#160;pub fn new() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut point_map = HashMap::new(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_map.insert(&#39; G&#39; .into(), 0); // G is base point &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let point_vec = vec![&#39; G&#39; .into()]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Statement { &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="523.5,-2394 469.5,-2394 469.5,-2358 523.5,-2358 523.5,-2394"/>
<text text-anchor="middle" x="496.5" y="-2372.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge177" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M862.2,-2488.97C856.11,-2484.09 850.92,-2478.17 847,-2471 836.56,-2451.89 836.56,-2294.11 847,-2275 859.68,-2251.78 885.81,-2241.67 911.96,-2237.77"/>
<polygon fill="gray" stroke="gray" points="912.45,-2241.24 921.96,-2236.57 911.61,-2234.29 912.45,-2241.24"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="node99" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<g id="a_node99"><a xlink:title="fn endorsement_flow(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut group = c.benchmark_group(&#39; endorsements&#39; ); &#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;let inputs: Vec&lt;RistrettoPoint&gt; = (0.....">
<polygon fill="lightblue" stroke="black" points="160,-1268 16,-1268 16,-1232 160,-1232 160,-1268"/>
<text text-anchor="middle" x="88" y="-1246.3" font-family="Helvetica,sans-Serif" font-size="14.00">endorsement_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge171" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="gray" d="M94.45,-1231.95C106.21,-1195.57 137.1,-1112.51 188,-1061 260.4,-987.73 292.13,-976.21 392,-951 582.04,-903.03 676.03,-833.62 833,-951 868.25,-977.36 825.75,-1019.64 861,-1046 906.56,-1080.07 1074.87,-1084.22 1117,-1046 1150.9,-1015.25 1103.1,-871.75 1137,-841 1173.87,-807.55 1540.94,-821.83 1585,-845 1654.96,-881.79 1698.45,-970.37 1716.83,-1015.53"/>
<polygon fill="gray" stroke="gray" points="1713.64,-1016.98 1720.57,-1024.99 1720.15,-1014.4 1713.64,-1016.98"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge173" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M89.83,-1231.91C93.96,-1150.21 115.12,-816.61 188,-749 491.49,-467.42 704.13,-650.53 1117,-681 1134.97,-682.33 1154.12,-684.59 1172.34,-687.15"/>
<polygon fill="gray" stroke="gray" points="1171.96,-690.63 1182.36,-688.6 1172.96,-683.7 1171.96,-690.63"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge166" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M91.08,-1231.6C99.19,-1163.67 131.03,-928.58 188,-885 308.48,-792.84 807.69,-858.74 947.48,-879.39"/>
<polygon fill="gray" stroke="gray" points="947.25,-882.89 957.66,-880.91 948.28,-875.97 947.25,-882.89"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new(). -->
<g id="edge164" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M90.52,-1231.86C97.03,-1158.97 125.15,-888.84 188,-837 418.16,-647.15 825.53,-752.36 948.12,-790.21"/>
<polygon fill="gray" stroke="gray" points="947.19,-793.58 957.77,-793.23 949.28,-786.9 947.19,-793.58"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="node100" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<g id="a_node100"><a xlink:title=" &#160;&#160;&#160;pub fn from_blinding_scalar(scalar: Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a_inv: scalar.invert(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="356,-1268 196,-1268 196,-1232 356,-1232 356,-1268"/>
<text text-anchor="middle" x="276" y="-1246.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_blinding_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge163" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="gray" d="M160.11,-1250C168.52,-1250 177.17,-1250 185.79,-1250"/>
<polygon fill="gray" stroke="gray" points="185.86,-1253.5 195.86,-1250 185.86,-1246.5 185.86,-1253.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify(). -->
<g id="node101" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().</title>
<g id="a_node101"><a xlink:title=" &#160;&#160;&#160;pub fn verify(&amp;self, point: &amp;RistrettoPoint, token: &amp;[u8]) &#45;&gt; Result&lt;(), VerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = self.sk_prime * point; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let expected = Endorsement::to_token_raw(P); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="304,-1592 248,-1592 248,-1556 304,-1556 304,-1592"/>
<text text-anchor="middle" x="276" y="-1570.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify(). -->
<g id="edge165" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().</title>
<path fill="none" stroke="gray" d="M89.58,-1268.32C92.22,-1319.86 106.84,-1467.52 188,-1547 201.19,-1559.92 220.45,-1566.67 237.5,-1570.19"/>
<polygon fill="gray" stroke="gray" points="237.29,-1573.71 247.75,-1572 238.51,-1566.82 237.29,-1573.71"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="node103" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<g id="a_node103"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: [u8; RANDOMNESS_LEN]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = poksho::ShoHmacSha256::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKCredential_Endorsements_ServerRootKeyPair_generate_20240207&#39; ,...">
<polygon fill="white" stroke="black" points="315.5,-1322 236.5,-1322 236.5,-1286 315.5,-1286 315.5,-1322"/>
<text text-anchor="middle" x="276" y="-1300.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge168" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="gray" d="M151.19,-1268.06C175.76,-1275.19 203.55,-1283.26 226.57,-1289.94"/>
<polygon fill="gray" stroke="gray" points="225.87,-1293.38 236.45,-1292.81 227.83,-1286.66 225.87,-1293.38"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="node104" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<g id="a_node104"><a xlink:title=" &#160;&#160;&#160;pub fn derive_key(&amp;self, mut tag_info: impl ShoApi) &#45;&gt; ServerDerivedKeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let t = tag_info.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ServerDerivedKeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sk_prime: (self.sk + t).invert(), &#160;&#160;...">
<polygon fill="white" stroke="black" points="321.5,-1484 230.5,-1484 230.5,-1448 321.5,-1448 321.5,-1484"/>
<text text-anchor="middle" x="276" y="-1462.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge174" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="gray" d="M93.42,-1268.05C103.53,-1305.55 131.94,-1392.29 188,-1439 197.3,-1446.75 208.82,-1452.28 220.4,-1456.22"/>
<polygon fill="gray" stroke="gray" points="219.51,-1459.61 230.09,-1459.18 221.55,-1452.91 219.51,-1459.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node105" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node105"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="303,-1430 249,-1430 249,-1394 303,-1394 303,-1430"/>
<text text-anchor="middle" x="276" y="-1408.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge162" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="gray" d="M97.52,-1268.19C112.02,-1297.18 144.22,-1353.78 188,-1385 202.93,-1395.65 222.18,-1402.19 238.77,-1406.16"/>
<polygon fill="gray" stroke="gray" points="238.19,-1409.61 248.7,-1408.31 239.67,-1402.77 238.19,-1409.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="node108" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<g id="a_node108"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ReceivedEndorsements, V...">
<polygon fill="white" stroke="black" points="309,-1376 243,-1376 243,-1340 309,-1340 309,-1376"/>
<text text-anchor="middle" x="276" y="-1354.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge175" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="gray" d="M106.77,-1268.19C125.47,-1286.4 156.51,-1314.07 188,-1331 201.92,-1338.48 218.23,-1344.24 232.94,-1348.48"/>
<polygon fill="gray" stroke="gray" points="232.26,-1351.92 242.83,-1351.17 234.1,-1345.16 232.26,-1351.92"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="node110" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<g id="a_node110"><a xlink:title=" &#160;&#160;&#160;pub fn derive_key(&amp;self, mut tag_info: impl ShoApi) &#45;&gt; ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let t = tag_info.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.derive_key_from_tag_scalar(&amp;t) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="321.5,-1538 230.5,-1538 230.5,-1502 321.5,-1502 321.5,-1538"/>
<text text-anchor="middle" x="276" y="-1516.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge172" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="gray" d="M91.12,-1268.23C97.32,-1313.17 119.53,-1430.17 188,-1493 197.1,-1501.35 208.75,-1507.12 220.55,-1511.11"/>
<polygon fill="gray" stroke="gray" points="219.85,-1514.55 230.44,-1514.05 221.85,-1507.84 219.85,-1514.55"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token(). -->
<g id="node111" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().</title>
<g id="a_node111"><a xlink:title=" &#160;&#160;&#160;pub fn to_token(&amp;self, client_key: &amp;ClientDecryptionKey) &#45;&gt; Box&lt;[u8]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = self.R * client_key.a_inv; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::to_token_raw(P) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="313.5,-1646 238.5,-1646 238.5,-1610 313.5,-1610 313.5,-1646"/>
<text text-anchor="middle" x="276" y="-1624.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_token</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token(). -->
<g id="edge167" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().</title>
<path fill="none" stroke="gray" d="M88.48,-1268.21C87.85,-1325.56 93.89,-1504.41 188,-1601 198.67,-1611.95 213.69,-1618.48 228.25,-1622.37"/>
<polygon fill="gray" stroke="gray" points="227.67,-1625.83 238.2,-1624.66 229.24,-1619.01 227.67,-1625.83"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key(). -->
<g id="node112" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key().</title>
<g id="a_node112"><a xlink:title=" &#160;&#160;&#160;pub fn public_key(&amp;self) &#45;&gt; &amp;ServerRootPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self.public &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="320.5,-1214 231.5,-1214 231.5,-1178 320.5,-1178 320.5,-1214"/>
<text text-anchor="middle" x="276" y="-1192.3" font-family="Helvetica,sans-Serif" font-size="14.00">public_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key(). -->
<g id="edge169" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key().</title>
<path fill="none" stroke="gray" d="M151.19,-1231.94C174,-1225.32 199.59,-1217.89 221.56,-1211.52"/>
<polygon fill="gray" stroke="gray" points="222.75,-1214.81 231.37,-1208.67 220.79,-1208.09 222.75,-1214.81"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point(). -->
<g id="node114" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().</title>
<g id="a_node114"><a xlink:title=" &#160;&#160;&#160;fn get_point(&amp;mut self) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut point_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut point_bytes); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RistrettoPoint::from_uniform_bytes(&amp;point_byte...">
<polygon fill="white" stroke="black" points="537,-1077 456,-1077 456,-1041 537,-1041 537,-1077"/>
<text text-anchor="middle" x="496.5" y="-1055.3" font-family="Helvetica,sans-Serif" font-size="14.00">get_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point(). -->
<g id="edge170" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().</title>
<path fill="none" stroke="gray" d="M97.25,-1231.65C111.37,-1202.51 143.06,-1146.08 188,-1118 268.13,-1067.93 381.22,-1058.66 445.56,-1057.86"/>
<polygon fill="gray" stroke="gray" points="445.86,-1061.36 455.84,-1057.8 445.82,-1054.36 445.86,-1061.36"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="node115" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<g id="a_node115"><a xlink:title=" &#160;&#160;&#160;fn get_scalar(&amp;mut self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut scalar_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut scalar_bytes); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar::from_bytes_mod_order_wide(&amp;scalar_bytes) &#160;&#160;...">
<polygon fill="white" stroke="black" points="540,-1131 453,-1131 453,-1095 540,-1095 540,-1131"/>
<text text-anchor="middle" x="496.5" y="-1109.3" font-family="Helvetica,sans-Serif" font-size="14.00">get_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge176" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M104.86,-1231.67C122.92,-1212.09 154.31,-1181.75 188,-1166 271.33,-1127.06 379.4,-1116.46 442.73,-1113.73"/>
<polygon fill="gray" stroke="gray" points="443.02,-1117.23 452.88,-1113.35 442.75,-1110.23 443.02,-1117.23"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="gray" d="M346.45,-1231.8C349.97,-1229.24 353.2,-1226.32 356,-1223 420.99,-1145.91 315.25,-1064.4 392,-999 466.59,-935.44 752.49,-943.12 833,-999 862.23,-1019.29 831.77,-1053.71 861,-1074 907.73,-1106.44 1074.71,-1112.05 1117,-1074 1148.4,-1045.75 1105.6,-913.25 1137,-885 1211.01,-818.41 1494.07,-844.47 1585,-885 1645.24,-911.86 1690.62,-978.3 1712.5,-1015.91"/>
<polygon fill="gray" stroke="gray" points="1709.57,-1017.84 1717.55,-1024.81 1715.65,-1014.39 1709.57,-1017.84"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M304.11,-1572.19C321.8,-1569.46 343.81,-1562.86 356,-1547 391.16,-1501.26 385.19,-1086.29 392,-1029 419,-801.88 472.22,-530.73 489.75,-444.07"/>
<polygon fill="gray" stroke="gray" points="493.19,-444.71 491.75,-434.21 486.33,-443.31 493.19,-444.71"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="node113" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<g id="a_node113"><a xlink:title=" &#160;&#160;&#160;fn to_token_raw(unblinded_endorsement: RistrettoPoint) &#45;&gt; Box&lt;[u8]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Skip the Sho for this, we&#39;re hashing a single point into a single bitstring. We don&#39;t &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// need domain separa...">
<polygon fill="white" stroke="black" points="550,-1646 443,-1646 443,-1610 550,-1610 550,-1646"/>
<text text-anchor="middle" x="496.5" y="-1624.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_token_raw</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<path fill="none" stroke="gray" d="M304.23,-1580.73C336.28,-1588.65 390.53,-1602.06 433.09,-1612.57"/>
<polygon fill="gray" stroke="gray" points="432.25,-1615.97 442.8,-1614.98 433.93,-1609.18 432.25,-1615.97"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar(). -->
<g id="node102" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().</title>
<g id="a_node102"><a xlink:title=" &#160;&#160;&#160;fn derive_key_from_tag_scalar(&amp;self, t: &amp;Scalar) &#45;&gt; ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PK_prime: self.PK + RistrettoPoint::mul_base(t), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="600,-1538 393,-1538 393,-1502 600,-1502 600,-1538"/>
<text text-anchor="middle" x="496.5" y="-1516.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key_from_tag_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base().</title>
<path fill="none" stroke="gray" d="M537.35,-1538.11C562.34,-1551.68 592.8,-1572.78 609,-1601 666.81,-1701.72 576.2,-1760.85 635,-1861 689.31,-1953.5 761.3,-1919.22 833,-1999 850.28,-2018.23 840.3,-2034.51 861,-2050 881.68,-2065.47 909.46,-2072.41 933.39,-2075.4"/>
<polygon fill="gray" stroke="gray" points="933.07,-2078.89 943.38,-2076.46 933.8,-2071.93 933.07,-2078.89"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M315.52,-1299.76C330.4,-1296.11 346.18,-1289.38 356,-1277 455.41,-1151.74 300.15,-1049.9 392,-919 568.38,-667.64 990.29,-675.3 1172.4,-691.66"/>
<polygon fill="gray" stroke="gray" points="1172.18,-695.16 1182.47,-692.6 1172.83,-688.19 1172.18,-695.16"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M315.75,-1299.52C330.49,-1295.82 346.09,-1289.12 356,-1277 434.84,-1180.53 306.65,-1089.76 392,-999 468.74,-917.39 831.09,-892.55 947.73,-886.6"/>
<polygon fill="gray" stroke="gray" points="948.1,-890.09 957.92,-886.1 947.76,-883.1 948.1,-890.09"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw(). -->
<g id="node107" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().</title>
<g id="a_node107"><a xlink:title=" &#160;&#160;&#160;pub fn from_raw(sk: Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sk, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public: ServerRootPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PK: RistrettoPoint::mul_base(&amp;sk), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="537,-1376 456,-1376 456,-1340 537,-1340 537,-1376"/>
<text text-anchor="middle" x="496.5" y="-1354.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_raw</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().</title>
<path fill="none" stroke="gray" d="M315.56,-1313.53C351.85,-1322.5 406.38,-1335.97 445.89,-1345.74"/>
<polygon fill="gray" stroke="gray" points="445.3,-1349.2 455.85,-1348.2 446.98,-1342.4 445.3,-1349.2"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M315.89,-1298.22C330.11,-1294.34 345.32,-1287.85 356,-1277 392.38,-1240.04 358.37,-1205.48 392,-1166 405.61,-1150.03 425.23,-1138.29 443.73,-1129.98"/>
<polygon fill="gray" stroke="gray" points="445.14,-1133.18 452.98,-1126.05 442.41,-1126.74 445.14,-1133.18"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="gray" d="M321.77,-1460.13C334.71,-1456.21 347.6,-1449.73 356,-1439 412.4,-1367 324.56,-1090.78 392,-1029 463.12,-963.85 513.51,-1015.45 609,-1029 724.45,-1045.38 745.55,-1085.62 861,-1102 973.65,-1117.99 1031.95,-1177.58 1117,-1102 1173.54,-1051.76 1080.46,-983.24 1137,-933 1218.39,-860.67 1273.11,-932.73 1382,-933 1472.22,-933.22 1499.64,-904.78 1585,-934 1633.17,-950.49 1677.84,-990.51 1703.77,-1017.2"/>
<polygon fill="gray" stroke="gray" points="1701.45,-1019.84 1710.88,-1024.67 1706.52,-1015.02 1701.45,-1019.84"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().</title>
<path fill="none" stroke="gray" d="M321.74,-1477.06C347.88,-1483.52 381.69,-1491.87 412.53,-1499.5"/>
<polygon fill="gray" stroke="gray" points="411.88,-1502.94 422.43,-1501.94 413.56,-1496.14 411.88,-1502.94"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M321.91,-1459.78C334.7,-1455.84 347.46,-1449.43 356,-1439 433.55,-1344.32 321.46,-1266.01 392,-1166 404.34,-1148.5 424.23,-1136.4 443.29,-1128.24"/>
<polygon fill="gray" stroke="gray" points="444.84,-1131.38 452.83,-1124.43 442.25,-1124.88 444.84,-1131.38"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M303.26,-1413.76C321.05,-1416.44 343.5,-1423.01 356,-1439 413.56,-1512.62 352.66,-1773.23 392,-1858 501.94,-2094.89 614.32,-2126.26 861,-2212 877.23,-2217.64 895.08,-2222.36 912.03,-2226.2"/>
<polygon fill="gray" stroke="gray" points="911.38,-2229.64 921.89,-2228.35 912.87,-2222.8 911.38,-2229.64"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M303.26,-1414.14C320.8,-1416.99 342.97,-1423.63 356,-1439 418.94,-1513.23 357.97,-1563.82 392,-1655 464.33,-1848.82 467.09,-1931.15 635,-2052 725.35,-2117.03 860.2,-2129.73 933,-2131.49"/>
<polygon fill="gray" stroke="gray" points="933.21,-2135 943.27,-2131.68 933.34,-2128 933.21,-2135"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new().</title>
<path fill="none" stroke="gray" d="M303.14,-1410.49C321.1,-1407.94 343.83,-1401.42 356,-1385 425.71,-1290.95 329.24,-430.82 392,-332 406.96,-308.44 435.95,-294.87 459.45,-287.37"/>
<polygon fill="gray" stroke="gray" points="460.53,-290.7 469.13,-284.52 458.55,-283.99 460.53,-290.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new().</title>
<path fill="none" stroke="gray" d="M303.16,-1410.5C321.13,-1407.96 343.86,-1401.44 356,-1385 434.36,-1278.84 309.75,-301.18 392,-198 407.76,-178.23 436.03,-171.85 459.05,-170.21"/>
<polygon fill="gray" stroke="gray" points="459.35,-173.7 469.19,-169.76 459.04,-166.71 459.35,-173.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add().</title>
<path fill="none" stroke="gray" d="M303.16,-1410.51C321.14,-1407.97 343.87,-1401.45 356,-1385 437.85,-1273.96 306.09,-251.93 392,-144 407.75,-124.22 436.02,-117.84 459.04,-116.21"/>
<polygon fill="gray" stroke="gray" points="459.35,-119.7 469.18,-115.76 459.04,-112.7 459.35,-119.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add().</title>
<path fill="none" stroke="gray" d="M303.15,-1410.5C321.12,-1407.96 343.85,-1401.43 356,-1385 430.88,-1283.72 313.42,-350.44 392,-252 407.77,-232.24 436.04,-225.86 459.06,-224.22"/>
<polygon fill="gray" stroke="gray" points="459.36,-227.71 469.2,-223.77 459.05,-220.72 459.36,-227.71"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="gray" d="M303.12,-1413.52C321.08,-1416.08 343.81,-1422.6 356,-1439 419.96,-1525.01 324.9,-2319.42 392,-2403 407.63,-2422.46 435.38,-2428.93 458.21,-2430.69"/>
<polygon fill="gray" stroke="gray" points="458.13,-2434.19 468.3,-2431.19 458.48,-2427.19 458.13,-2434.19"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement(). -->
<g id="node106" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().</title>
<g id="a_node106"><a xlink:title=" &#160;&#160;&#160;fn proof_statement() &#45;&gt; poksho::Statement { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut statement = poksho::Statement::new(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We use a weighted sum where the weights are generated by hashing the inputs (a &#39; random...">
<polygon fill="white" stroke="black" points="561.5,-1457 431.5,-1457 431.5,-1421 561.5,-1421 561.5,-1457"/>
<text text-anchor="middle" x="496.5" y="-1435.3" font-family="Helvetica,sans-Serif" font-size="14.00">proof_statement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().</title>
<path fill="none" stroke="gray" d="M303.36,-1415.26C332.34,-1418.84 380.21,-1424.75 420.91,-1429.78"/>
<polygon fill="gray" stroke="gray" points="420.74,-1433.29 431.09,-1431.04 421.6,-1426.34 420.74,-1433.29"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="node109" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<g id="a_node109"><a xlink:title=" &#160;&#160;&#160;fn generate_weights_for_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;E: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: &amp;[CompressedRistretto], &#160;&#160;&#160;&#160;) &#45;&gt; Vec&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(E.len()...">
<polygon fill="white" stroke="black" points="601,-1277 392,-1277 392,-1241 601,-1241 601,-1277"/>
<text text-anchor="middle" x="496.5" y="-1255.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate_weights_for_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="gray" d="M303.24,-1407.52C319.69,-1403.69 340.61,-1396.85 356,-1385 378.86,-1367.4 371.81,-1351.6 392,-1331 410.42,-1312.21 434.36,-1295.19 454.58,-1282.42"/>
<polygon fill="gray" stroke="gray" points="456.62,-1285.28 463.28,-1277.04 452.94,-1279.33 456.62,-1285.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().</title>
<path fill="none" stroke="gray" d="M431.28,-1457.08C409.17,-1466.67 386.83,-1480.97 374,-1502 360.31,-1524.43 360.18,-2425.65 374,-2448 391.33,-2476.05 429.88,-2483.65 459.13,-2485.11"/>
<polygon fill="gray" stroke="gray" points="459.34,-2488.61 469.43,-2485.39 459.53,-2481.62 459.34,-2488.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new().</title>
<path fill="none" stroke="gray" d="M431.28,-1457.08C409.17,-1466.67 386.83,-1480.97 374,-1502 354.32,-1534.25 370.75,-1634.36 374,-1672 396.94,-1937.69 467.73,-2253.57 489.84,-2348.01"/>
<polygon fill="gray" stroke="gray" points="486.47,-2349 492.17,-2357.93 493.29,-2347.39 486.47,-2349"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base().</title>
<path fill="none" stroke="gray" d="M537,-1366.38C562.02,-1373.89 592.63,-1387.63 609,-1412 660.03,-1487.97 574.51,-1754.33 635,-1823 694.23,-1890.24 771,-1796.31 833,-1861 891.75,-1922.31 803.06,-1987.92 861,-2050 879.22,-2069.53 908.07,-2076.57 933.24,-2078.59"/>
<polygon fill="gray" stroke="gray" points="933.22,-2082.09 943.4,-2079.16 933.61,-2075.1 933.22,-2082.09"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M309.26,-1361.05C325.71,-1364.34 344.6,-1371.1 356,-1385 432.78,-1478.6 351.52,-1540.9 392,-1655 461.17,-1849.97 475.4,-1920.38 635,-2052 707.48,-2111.77 755.72,-2072.58 833,-2126 848.55,-2136.75 844.73,-2148.38 861,-2158 880,-2169.24 903.15,-2175.81 924.22,-2179.65"/>
<polygon fill="gray" stroke="gray" points="923.93,-2183.15 934.37,-2181.32 925.07,-2176.24 923.93,-2183.15"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M309.04,-1355.56C325.86,-1352.47 345.16,-1345.7 356,-1331 438.05,-1219.69 318.17,-203.92 392,-87 400.13,-74.12 412.47,-64.23 425.82,-56.68"/>
<polygon fill="gray" stroke="gray" points="427.45,-59.77 434.7,-52.05 424.22,-53.57 427.45,-59.77"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new().</title>
<path fill="none" stroke="gray" d="M309.03,-1355.54C325.84,-1352.46 345.14,-1345.69 356,-1331 430.88,-1229.72 313.42,-296.44 392,-198 407.77,-178.24 436.04,-171.86 459.06,-170.22"/>
<polygon fill="gray" stroke="gray" points="459.36,-173.71 469.2,-169.77 459.05,-166.72 459.36,-173.71"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add().</title>
<path fill="none" stroke="gray" d="M309.03,-1355.55C325.85,-1352.46 345.15,-1345.69 356,-1331 434.36,-1224.84 309.75,-247.18 392,-144 407.76,-124.23 436.03,-117.85 459.05,-116.21"/>
<polygon fill="gray" stroke="gray" points="459.35,-119.7 469.19,-115.76 459.04,-112.71 459.35,-119.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="gray" d="M309.03,-1360.46C325.83,-1363.55 345.14,-1370.32 356,-1385 430.42,-1485.65 302.08,-2423.91 392,-2511 461.28,-2578.1 516.72,-2539.04 609,-2511 645.13,-2500.02 680.3,-2474.27 703.32,-2454.73"/>
<polygon fill="gray" stroke="gray" points="705.69,-2457.31 710.94,-2448.11 701.1,-2452.03 705.69,-2457.31"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().</title>
<path fill="none" stroke="gray" d="M309.01,-1368.61C323.42,-1373.48 340.61,-1379.39 356,-1385 384.02,-1395.21 414.97,-1407.12 440.59,-1417.16"/>
<polygon fill="gray" stroke="gray" points="439.54,-1420.51 450.12,-1420.91 442.1,-1413.99 439.54,-1420.51"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="gray" d="M309.31,-1348.15C323.78,-1343.43 340.93,-1337.42 356,-1331 390.13,-1316.45 427.4,-1297.02 454.83,-1282.01"/>
<polygon fill="gray" stroke="gray" points="456.66,-1285 463.73,-1277.1 453.28,-1278.87 456.66,-1285"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch().</title>
<path fill="none" stroke="gray" d="M544.68,-1277.13C568.23,-1288.79 594.68,-1306.41 609,-1331 659.85,-1418.33 568.43,-1708.97 635,-1785 694.03,-1852.41 770.57,-1758.72 833,-1823 887.27,-1878.87 807.48,-1939.41 861,-1996 863.33,-1998.46 865.83,-2000.72 868.46,-2002.8"/>
<polygon fill="gray" stroke="gray" points="866.54,-2005.73 876.77,-2008.5 870.5,-1999.96 866.54,-2005.73"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<path fill="none" stroke="gray" d="M534.18,-1277.07C557.53,-1289.85 587.36,-1308.66 609,-1331 760.19,-1487.09 690.64,-1615.1 861,-1750 1051.63,-1900.95 1167.23,-1802.97 1382,-1917 1395.98,-1924.42 1396.11,-1931.41 1410,-1939 1422.12,-1945.62 1435.97,-1951.2 1448.98,-1955.68"/>
<polygon fill="gray" stroke="gray" points="1448.14,-1959.09 1458.73,-1958.9 1450.33,-1952.44 1448.14,-1959.09"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M544.72,-1277.11C568.28,-1288.76 594.73,-1306.38 609,-1331 663.36,-1424.76 589.2,-1719.78 635,-1818 685.9,-1927.15 770.58,-1900.01 833,-2003 857.14,-2042.84 827.18,-2071.97 861,-2104 880.1,-2122.09 908.41,-2129.14 933.06,-2131.53"/>
<polygon fill="gray" stroke="gray" points="933.13,-2135.04 943.36,-2132.29 933.65,-2128.06 933.13,-2135.04"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="gray" d="M601.07,-1261.58C757.87,-1263.18 1044.9,-1256.32 1117,-1188 1155.61,-1151.41 1096.37,-1104.33 1137,-1070 1222.29,-997.95 1363.88,-1030.48 1441.47,-1056.63"/>
<polygon fill="gray" stroke="gray" points="1440.47,-1059.98 1451.06,-1059.94 1442.75,-1053.37 1440.47,-1059.98"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet().</title>
<path fill="none" stroke="gray" d="M530.53,-1240.98C556.5,-1224.93 591.16,-1198.91 609,-1166 655.72,-1079.84 602.2,-1039.36 635,-947 697.85,-770.04 696.49,-680.56 861,-590 960.67,-535.13 1009.64,-552.34 1117,-590 1127.74,-593.77 1127.03,-600.5 1137,-606 1151.41,-613.94 1167.59,-620.79 1183.33,-626.52"/>
<polygon fill="gray" stroke="gray" points="1182.46,-629.92 1193.05,-629.94 1184.78,-623.32 1182.46,-629.92"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<path fill="none" stroke="gray" d="M543.41,-1240.99C609.38,-1214.38 733.93,-1161.37 833,-1103 877.19,-1076.97 924.4,-1041.12 954.04,-1017.52"/>
<polygon fill="gray" stroke="gray" points="956.31,-1020.19 961.92,-1011.21 951.93,-1014.73 956.31,-1020.19"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<path fill="none" stroke="gray" d="M526.52,-1240.71C551.26,-1223.88 586.32,-1196.88 609,-1166 626.93,-1141.59 611.53,-1122.15 635,-1103 704.42,-1046.34 766.97,-1125.58 833,-1065 866.69,-1034.09 827.72,-997.36 861,-966 882.56,-945.68 915.76,-939.31 942.24,-937.81"/>
<polygon fill="gray" stroke="gray" points="942.51,-941.3 952.38,-937.45 942.26,-934.31 942.51,-941.3"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M528.37,-1240.97C553.75,-1224.57 588.73,-1198.07 609,-1166 633.77,-1126.82 606.94,-1101.9 635,-1065 696.47,-984.17 757.69,-1019.11 833,-951 848.83,-936.69 843.18,-923.73 861,-912 886.84,-894.99 921.7,-888.54 947.7,-886.16"/>
<polygon fill="gray" stroke="gray" points="948.19,-889.64 957.9,-885.4 947.67,-882.66 948.19,-889.64"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().</title>
<path fill="none" stroke="gray" d="M321.74,-1520C339.53,-1520 360.87,-1520 382.4,-1520"/>
<polygon fill="gray" stroke="gray" points="382.64,-1523.5 392.64,-1520 382.64,-1516.5 382.64,-1523.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M321.63,-1514.02C334.57,-1510.1 347.48,-1503.63 356,-1493 447.43,-1378.9 309.01,-1286.38 392,-1166 404.26,-1148.22 424.35,-1136.04 443.58,-1127.89"/>
<polygon fill="gray" stroke="gray" points="444.9,-1131.13 452.92,-1124.21 442.33,-1124.62 444.9,-1131.13"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<path fill="none" stroke="gray" d="M313.57,-1628C346.02,-1628 394.14,-1628 432.73,-1628"/>
<polygon fill="gray" stroke="gray" points="432.83,-1631.5 442.83,-1628 432.83,-1624.5 432.83,-1631.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="edge159" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<path fill="none" stroke="gray" d="M550.02,-1626.82C570.98,-1629.11 593.72,-1635.54 609,-1651 651.64,-1694.15 592.44,-1741.77 635,-1785 873.02,-2026.74 1050.88,-1868.17 1382,-1942 1404.1,-1946.93 1428.53,-1952.65 1449.13,-1957.56"/>
<polygon fill="gray" stroke="gray" points="1448.37,-1960.97 1458.91,-1959.89 1449.99,-1954.16 1448.37,-1960.97"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge158" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M498.81,-1646.14C504.09,-1705.9 528.98,-1898.68 635,-2003 701.42,-2068.36 755.75,-2019.87 833,-2072 848.66,-2082.57 844.73,-2094.38 861,-2104 882.8,-2116.89 910.06,-2123.65 933.38,-2127.18"/>
<polygon fill="gray" stroke="gray" points="933.06,-2130.66 943.44,-2128.54 934,-2123.73 933.06,-2130.66"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().</title>
<path fill="none" stroke="gray" d="M537.03,-1059.65C560.48,-1062.02 589.36,-1068.67 609,-1086 845.72,-1294.8 727.34,-1464.04 861,-1750 894.47,-1821.62 942.22,-1901.63 967.24,-1942.23"/>
<polygon fill="gray" stroke="gray" points="964.27,-1944.08 972.51,-1950.74 970.22,-1940.4 964.27,-1944.08"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge186" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" d="M540.2,-1118.77C608.02,-1127.6 744.59,-1144.09 861,-1150 974.63,-1155.77 1032.42,-1226.1 1117,-1150 1148.4,-1121.75 1105.6,-989.25 1137,-961 1174,-927.71 1546.19,-929.83 1585,-961 1642.84,-1007.46 1569.39,-1070.71 1621,-1124 1621.79,-1124.82 1622.61,-1125.61 1623.44,-1126.39"/>
<polygon fill="gray" stroke="gray" points="1621.43,-1129.26 1631.43,-1132.73 1625.78,-1123.77 1621.43,-1129.26"/>
</g>
</g>
</svg>
