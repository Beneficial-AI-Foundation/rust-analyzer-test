<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="2661pt" height="2945pt"
 viewBox="0.00 0.00 2661.00 2945.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2941)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2941 2657,-2941 2657,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" points="635,-2800 635,-2929 1294.5,-2929 1294.5,-2800 635,-2800"/>
<text text-anchor="middle" x="964.75" y="-2913.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1436,-2400 1436,-2583 1559,-2583 1559,-2400 1436,-2400"/>
<text text-anchor="middle" x="1497.5" y="-2567.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" points="914,-2717 914,-2792 1056,-2792 1056,-2717 914,-2717"/>
<text text-anchor="middle" x="985" y="-2776.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1998.5,-1539 1998.5,-1776 2311,-1776 2311,-1539 1998.5,-1539"/>
<text text-anchor="middle" x="2154.75" y="-1760.8" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightgrey" stroke="lightgrey" points="2004,-1294 2004,-1531 2645,-1531 2645,-1294 2004,-1294"/>
<text text-anchor="middle" x="2324.5" y="-1515.8" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1192.5,-222 1192.5,-405 1537.5,-405 1537.5,-222 1192.5,-222"/>
<text text-anchor="middle" x="1365" y="-389.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightgrey" stroke="lightgrey" points="914,-276 914,-351 1056,-351 1056,-276 914,-276"/>
<text text-anchor="middle" x="985" y="-335.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1188.5,-2591 1188.5,-2774 1559,-2774 1559,-2591 1188.5,-2591"/>
<text text-anchor="middle" x="1373.75" y="-2758.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1457,-1784 1457,-1967 2131.5,-1967 2131.5,-1784 1457,-1784"/>
<text text-anchor="middle" x="1794.25" y="-1951.8" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightgrey" stroke="lightgrey" points="869,-1975 869,-2374 1544,-2374 1544,-1975 869,-1975"/>
<text text-anchor="middle" x="1206.5" y="-2358.8" font-family="Helvetica,sans-Serif" font-size="14.00">ristretto.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1168.5,-1049 1168.5,-1286 2163,-1286 2163,-1049 1168.5,-1049"/>
<text text-anchor="middle" x="1665.75" y="-1270.8" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightgrey" stroke="lightgrey" points="395.5,-145 395.5,-220 833,-220 833,-145 395.5,-145"/>
<text text-anchor="middle" x="614.25" y="-204.8" font-family="Helvetica,sans-Serif" font-size="14.00">traits.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightgrey" stroke="lightgrey" points="461.5,-8 461.5,-137 1036,-137 1036,-8 461.5,-8"/>
<text text-anchor="middle" x="748.75" y="-121.8" font-family="Helvetica,sans-Serif" font-size="14.00">lib.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightgrey" stroke="lightgrey" points="461.5,-228 461.5,-465 531.5,-465 531.5,-228 461.5,-228"/>
<text text-anchor="middle" x="496.5" y="-449.8" font-family="Helvetica,sans-Serif" font-size="14.00">args.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightgrey" stroke="lightgrey" points="934,-1225 934,-1354 1036,-1354 1036,-1225 934,-1225"/>
<text text-anchor="middle" x="985" y="-1338.8" font-family="Helvetica,sans-Serif" font-size="14.00">proof.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightgrey" stroke="lightgrey" points="1137,-433 1137,-616 1382,-616 1382,-433 1137,-433"/>
<text text-anchor="middle" x="1259.5" y="-600.8" font-family="Helvetica,sans-Serif" font-size="14.00">shoapi.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightgrey" stroke="lightgrey" points="911,-662 911,-845 1060,-845 1060,-662 911,-662"/>
<text text-anchor="middle" x="985.5" y="-829.8" font-family="Helvetica,sans-Serif" font-size="14.00">shohmacsha256.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightgrey" stroke="lightgrey" points="930,-579 930,-654 1041,-654 1041,-579 930,-579"/>
<text text-anchor="middle" x="985.5" y="-638.8" font-family="Helvetica,sans-Serif" font-size="14.00">shosha256.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightgrey" stroke="lightgrey" points="460.5,-2382 460.5,-2679 1117,-2679 1117,-2382 460.5,-2382"/>
<text text-anchor="middle" x="788.75" y="-2663.8" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightgrey" stroke="lightgrey" points="8,-1188 8,-1263 168,-1263 168,-1188 8,-1188"/>
<text text-anchor="middle" x="88" y="-1247.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightgrey" stroke="lightgrey" points="188,-1134 188,-1641 609,-1641 609,-1134 188,-1134"/>
<text text-anchor="middle" x="398.5" y="-1625.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightgrey" stroke="lightgrey" points="445,-997 445,-1126 548,-1126 548,-997 445,-997"/>
<text text-anchor="middle" x="496.5" y="-1110.8" font-family="Helvetica,sans-Serif" font-size="14.00">sho.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<g id="a_node1"><a xlink:title="pub fn straus_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint where &#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;I::Item: core::borrow::Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;J::Item: core::borrow::Borrow&lt;...">
<polygon fill="white" stroke="black" points="819,-2844 643,-2844 643,-2808 819,-2808 819,-2844"/>
<text text-anchor="middle" x="731" y="-2822.3" font-family="Helvetica,sans-Serif" font-size="14.00">straus_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().</title>
<g id="a_node4"><a xlink:title="fn get_selected_backend() &#45;&gt; BackendKind { &#160;&#160;&#160;&#160;#[cfg(all(curve25519_dalek_backend = &#39; simd&#39; , nightly))] &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cpufeatures::new!(cpuid_avx512, &#39; avx512ifma&#39; , &#39; avx512vl&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let token_...">
<polygon fill="white" stroke="black" points="1069.5,-2844 900.5,-2844 900.5,-2808 1069.5,-2808 1069.5,-2844"/>
<text text-anchor="middle" x="985" y="-2822.3" font-family="Helvetica,sans-Serif" font-size="14.00">get_selected_backend</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().</title>
<path fill="none" stroke="gray" d="M819.08,-2826C842,-2826 866.84,-2826 890.1,-2826"/>
<polygon fill="gray" stroke="gray" points="890.32,-2829.5 900.32,-2826 890.32,-2822.5 890.32,-2829.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node8"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="white" stroke="black" points="1048,-2761 922,-2761 922,-2725 1048,-2725 1048,-2761"/>
<text text-anchor="middle" x="985" y="-2739.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M786.68,-2807.99C825.68,-2795.15 878.27,-2777.82 919.35,-2764.29"/>
<polygon fill="gray" stroke="gray" points="920.59,-2767.57 928.99,-2761.12 918.4,-2760.92 920.59,-2767.57"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node34"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item...">
<polygon fill="white" stroke="black" points="1048,-320 922,-320 922,-284 1048,-284 1048,-320"/>
<text text-anchor="middle" x="985" y="-298.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M750.58,-2807.74C774.93,-2782.39 816.47,-2733.88 833,-2683 869.19,-2571.61 835.64,-689.34 861,-575 882.21,-479.37 938.84,-376.61 967.25,-329.03"/>
<polygon fill="gray" stroke="gray" points="970.37,-330.63 972.54,-320.26 964.38,-327.02 970.37,-330.63"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init().</title>
<polygon fill="white" stroke="black" points="1286.5,-2844 1232.5,-2844 1232.5,-2808 1286.5,-2808 1286.5,-2844"/>
<text text-anchor="middle" x="1259.5" y="-2822.3" font-family="Helvetica,sans-Serif" font-size="14.00">init</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get().</title>
<polygon fill="white" stroke="black" points="1286.5,-2898 1232.5,-2898 1232.5,-2862 1286.5,-2862 1286.5,-2898"/>
<text text-anchor="middle" x="1259.5" y="-2876.3" font-family="Helvetica,sans-Serif" font-size="14.00">get</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/init().</title>
<path fill="none" stroke="gray" d="M1069.61,-2826C1120.66,-2826 1183.37,-2826 1222.13,-2826"/>
<polygon fill="gray" stroke="gray" points="1222.4,-2829.5 1232.4,-2826 1222.4,-2822.5 1222.4,-2829.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/get_selected_backend().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/cpuid_avx2/impl#[InitToken]get().</title>
<path fill="none" stroke="gray" d="M1069.61,-2842.57C1120.66,-2852.69 1183.37,-2865.11 1222.13,-2872.79"/>
<polygon fill="gray" stroke="gray" points="1221.91,-2876.32 1232.4,-2874.83 1223.28,-2869.45 1221.91,-2876.32"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;pub fn double(&amp;self) &#45;&gt; CompletedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Double() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let XX = self.X.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let YY = self.Y.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let ZZ2 = self.Z.square2(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let X_plus_Y = &amp;self.X ...">
<polygon fill="white" stroke="black" points="1529.5,-2552 1465.5,-2552 1465.5,-2516 1529.5,-2516 1529.5,-2552"/>
<text text-anchor="middle" x="1497.5" y="-2530.3" font-family="Helvetica,sans-Serif" font-size="14.00">double</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<g id="a_node11"><a xlink:title=" &#160;&#160;&#160;pub fn square(&amp;self) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.pow2k(1) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2110.5,-1745 2046.5,-1745 2046.5,-1709 2110.5,-1709 2110.5,-1745"/>
<text text-anchor="middle" x="2078.5" y="-1723.3" font-family="Helvetica,sans-Serif" font-size="14.00">square</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1529.53,-2529.37C1547.08,-2525.58 1568.7,-2518.83 1585,-2507 1821.56,-2335.35 1854,-2240.96 1966,-1971 1999,-1891.46 1951.73,-1852.3 1998.5,-1780 2007.93,-1765.42 2022.95,-1753.87 2037.37,-1745.33"/>
<polygon fill="gray" stroke="gray" points="2039.19,-1748.32 2046.22,-1740.39 2035.78,-1742.21 2039.19,-1748.32"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;pub fn as_extended(&amp;self) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: &amp;self.X * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: &amp;self.Y * &amp;self.Z, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: &amp;self.Z * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: &amp;self.X * &amp;s...">
<polygon fill="white" stroke="black" points="1549.5,-2444 1445.5,-2444 1445.5,-2408 1549.5,-2408 1549.5,-2444"/>
<text text-anchor="middle" x="1497.5" y="-2422.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_extended</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;pub fn as_projective(&amp;self) &#45;&gt; ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: &amp;self.X * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: &amp;self.Y * &amp;self.Z, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: &amp;self.Z * &amp;self.T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1551,-2498 1444,-2498 1444,-2462 1551,-2462 1551,-2498"/>
<text text-anchor="middle" x="1497.5" y="-2476.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_projective</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().</title>
<g id="a_node36"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn mul_by_pow_2(&amp;self, k: u32) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!(k &gt; 0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut r: CompletedPoint; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s = self.as_projective(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..(k &#45; 1) {...">
<polygon fill="white" stroke="black" points="1318.5,-2743 1200.5,-2743 1200.5,-2707 1318.5,-2707 1318.5,-2743"/>
<text text-anchor="middle" x="1259.5" y="-2721.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_by_pow_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2(). -->
<g id="edge161" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().</title>
<path fill="none" stroke="gray" d="M1048.18,-2738.89C1090.49,-2736.1 1146.51,-2732.4 1190.09,-2729.52"/>
<polygon fill="gray" stroke="gray" points="1190.57,-2732.99 1200.32,-2728.84 1190.11,-2726.01 1190.57,-2732.99"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<g id="a_node38"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: FieldElement::ZERO, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: FieldElement::ZERO, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1294,-2689 1225,-2689 1225,-2653 1294,-2653 1294,-2689"/>
<text text-anchor="middle" x="1259.5" y="-2667.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="edge162" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<path fill="none" stroke="gray" d="M1048.05,-2732.33C1070.33,-2727.34 1095.29,-2720.38 1117,-2711 1126.73,-2706.79 1127.23,-2702.1 1137,-2698 1161.73,-2687.62 1191.05,-2680.95 1214.68,-2676.85"/>
<polygon fill="gray" stroke="gray" points="1215.47,-2680.26 1224.77,-2675.19 1214.34,-2673.36 1215.47,-2680.26"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes().</title>
<g id="a_node9"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes(bytes: &amp;[u8; 32]) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let load8 = |input: &amp;[u8]| &#45;&gt; u64 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(input[0] as u64) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| ((input[1] as u64) &lt;&lt; 8) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| ((input[2]...">
<polygon fill="white" stroke="black" points="2125.5,-1583 2031.5,-1583 2031.5,-1547 2125.5,-1547 2125.5,-1583"/>
<text text-anchor="middle" x="2078.5" y="-1561.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<g id="a_node10"><a xlink:title=" &#160;&#160;&#160;pub fn pow2k(&amp;self, mut k: u32) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!( k &gt; 0 ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/// Multiply two 64&#45;bit integers with 128 bits of output. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[inline(always)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fn m(x: u6...">
<polygon fill="white" stroke="black" points="2302,-1745 2240,-1745 2240,-1709 2302,-1709 2302,-1745"/>
<text text-anchor="middle" x="2271" y="-1723.3" font-family="Helvetica,sans-Serif" font-size="14.00">pow2k</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<path fill="none" stroke="gray" d="M2110.53,-1727C2143.06,-1727 2194.3,-1727 2229.88,-1727"/>
<polygon fill="gray" stroke="gray" points="2229.93,-1730.5 2239.93,-1727 2229.93,-1723.5 2229.93,-1730.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<g id="a_node12"><a xlink:title=" &#160;&#160;&#160;pub fn as_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Let h = limbs[0] + limbs[1]*2^51 + ... + limbs[4]*2^204. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Write h = pq + r with 0 &lt;= r &lt; p. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We want to co...">
<polygon fill="white" stroke="black" points="2117,-1691 2040,-1691 2040,-1655 2117,-1655 2117,-1691"/>
<text text-anchor="middle" x="2078.5" y="-1669.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<g id="a_node13"><a xlink:title=" &#160;&#160;&#160;fn reduce(mut limbs: [u64; 5]) &#45;&gt; FieldElement51 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const LOW_51_BIT_MASK: u64 = (1u64 &lt;&lt; 51) &#45; 1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Since the input limbs are bounded by 2^64, the biggest &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// carry&#45;out is...">
<polygon fill="white" stroke="black" points="2303,-1691 2239,-1691 2239,-1655 2303,-1655 2303,-1691"/>
<text text-anchor="middle" x="2271" y="-1669.3" font-family="Helvetica,sans-Serif" font-size="14.00">reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]reduce().</title>
<path fill="none" stroke="gray" d="M2117.14,-1673C2149.23,-1673 2195.3,-1673 2228.46,-1673"/>
<polygon fill="gray" stroke="gray" points="2228.74,-1676.5 2238.74,-1673 2228.74,-1669.5 2228.74,-1676.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<g id="a_node14"><a xlink:title=" &#160;&#160;&#160;fn conditional_assign(&amp;mut self, other: &amp;FieldElement51, choice: Choice) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0[0].conditional_assign(&amp;other.0[0], choice); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0[1].conditional_assign(&amp;other.0[1], choice); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2150.5,-1637 2006.5,-1637 2006.5,-1601 2150.5,-1601 2150.5,-1637"/>
<text text-anchor="middle" x="2078.5" y="-1615.3" font-family="Helvetica,sans-Serif" font-size="14.00">conditional_assign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes().</title>
<g id="a_node15"><a xlink:title=" &#160;&#160;&#160;pub fn as_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s[ 0] = &#160;(self.0[ 0] &gt;&gt; &#160;0) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as u8; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s[ 1] = &#160;(self.0[ 0] &gt;&gt; &#160;8) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as u8;...">
<polygon fill="white" stroke="black" points="2117,-1446 2040,-1446 2040,-1410 2117,-1410 2117,-1446"/>
<text text-anchor="middle" x="2078.5" y="-1424.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub().</title>
<g id="a_node16"><a xlink:title=" &#160;&#160;&#160;pub fn sub(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Optimization barrier to prevent compiler from inserting branch instructions &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// TODO(tarcieri): find a better home (or abstra...">
<polygon fill="white" stroke="black" points="2494,-1500 2440,-1500 2440,-1464 2494,-1464 2494,-1500"/>
<text text-anchor="middle" x="2467" y="-1478.3" font-family="Helvetica,sans-Serif" font-size="14.00">sub</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m().</title>
<g id="a_node17"><a xlink:title="fn m(x: u64, y: u64) &#45;&gt; u128 { &#160;&#160;&#160;&#160;(x as u128) * (y as u128) }">
<polygon fill="white" stroke="black" points="2637,-1392 2583,-1392 2583,-1356 2637,-1356 2637,-1392"/>
<text text-anchor="middle" x="2610" y="-1370.3" font-family="Helvetica,sans-Serif" font-size="14.00">m</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().</title>
<g id="a_node18"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_wide(bytes: &amp;[u8; 64]) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut words = [0u64; 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;words[i] |= (bytes[(i * 8) + j] as u64...">
<polygon fill="white" stroke="black" points="2145,-1500 2012,-1500 2012,-1464 2145,-1464 2145,-1500"/>
<text text-anchor="middle" x="2078.5" y="-1478.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_wide</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<g id="a_node24"><a xlink:title=" &#160;&#160;&#160;pub fn montgomery_mul(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_reduce(&amp;Scalar52::mul_internal(a, b)) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2340.5,-1392 2201.5,-1392 2201.5,-1356 2340.5,-1356 2340.5,-1392"/>
<text text-anchor="middle" x="2271" y="-1370.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<path fill="none" stroke="gray" d="M2145.08,-1466.44C2151.53,-1463.3 2157.65,-1459.53 2163,-1455 2183.63,-1437.53 2170.51,-1418.64 2191,-1401 2192.36,-1399.83 2193.77,-1398.71 2195.23,-1397.64"/>
<polygon fill="gray" stroke="gray" points="2197.48,-1400.35 2204.01,-1392 2193.7,-1394.46 2197.48,-1400.35"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().</title>
<g id="a_node26"><a xlink:title=" &#160;&#160;&#160;pub fn add(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sum = Scalar52::ZERO; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mask = (1u64 &lt;&lt; 52) &#45; 1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// a + b &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut carry: u64 = 0; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0...">
<polygon fill="white" stroke="black" points="2298,-1500 2244,-1500 2244,-1464 2298,-1464 2298,-1500"/>
<text text-anchor="middle" x="2271" y="-1478.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().</title>
<path fill="none" stroke="gray" d="M2145.06,-1482C2174.63,-1482 2208.44,-1482 2233.43,-1482"/>
<polygon fill="gray" stroke="gray" points="2233.56,-1485.5 2243.56,-1482 2233.56,-1478.5 2233.56,-1485.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().</title>
<g id="a_node19"><a xlink:title=" &#160;&#160;&#160;pub fn from_montgomery(&amp;self) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut limbs = [0u128; 9]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..5 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;limbs[i] = self[i] as u128; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_reduce(&amp;limbs...">
<polygon fill="white" stroke="black" points="2343.5,-1338 2198.5,-1338 2198.5,-1302 2343.5,-1302 2343.5,-1338"/>
<text text-anchor="middle" x="2271" y="-1316.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<g id="a_node27"><a xlink:title=" &#160;&#160;&#160;pub (crate) fn montgomery_reduce(limbs: &amp;[u128; 9]) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[inline(always)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fn part1(sum: u128) &#45;&gt; (u128, u64) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let p = (sum as u64).wrapping_mul(constants::L...">
<polygon fill="white" stroke="black" points="2547,-1392 2387,-1392 2387,-1356 2547,-1356 2547,-1392"/>
<text text-anchor="middle" x="2467" y="-1370.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M2336.87,-1338.06C2354.34,-1342.92 2373.38,-1348.22 2391.34,-1353.22"/>
<polygon fill="gray" stroke="gray" points="2390.62,-1356.65 2401.19,-1355.96 2392.5,-1349.91 2390.62,-1356.65"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().</title>
<g id="a_node20"><a xlink:title=" &#160;&#160;&#160;pub fn as_montgomery(&amp;self) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_mul(self, &amp;constants::RR) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2142.5,-1338 2014.5,-1338 2014.5,-1302 2142.5,-1302 2142.5,-1338"/>
<text text-anchor="middle" x="2078.5" y="-1316.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<path fill="none" stroke="gray" d="M2142.67,-1337.91C2159.94,-1342.8 2178.81,-1348.15 2196.6,-1353.19"/>
<polygon fill="gray" stroke="gray" points="2195.78,-1356.6 2206.35,-1355.96 2197.69,-1349.86 2195.78,-1356.6"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes().</title>
<g id="a_node21"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes(bytes: &amp;[u8; 32]) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut words = [0u64; 4]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..4 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for j in 0..8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;words[i] |= (bytes[(i * 8) + j] as u64) &lt;&lt; ...">
<polygon fill="white" stroke="black" points="2125.5,-1392 2031.5,-1392 2031.5,-1356 2125.5,-1356 2125.5,-1392"/>
<text text-anchor="middle" x="2078.5" y="-1370.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().</title>
<g id="a_node22"><a xlink:title=" &#160;&#160;&#160;pub fn montgomery_square(&amp;self) &#45;&gt; Scalar52 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar52::montgomery_reduce(&amp;Scalar52::square_internal(self)) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2351,-1446 2191,-1446 2191,-1410 2351,-1410 2351,-1446"/>
<text text-anchor="middle" x="2271" y="-1424.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_square</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().</title>
<g id="a_node23"><a xlink:title=" &#160;&#160;&#160;fn square_internal(a: &amp;Scalar52) &#45;&gt; [u128; 9] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aa = [ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[0] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[1] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[2] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a[3] * 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;m( a[0]...">
<polygon fill="white" stroke="black" points="2528.5,-1446 2405.5,-1446 2405.5,-1410 2528.5,-1410 2528.5,-1446"/>
<text text-anchor="middle" x="2467" y="-1424.3" font-family="Helvetica,sans-Serif" font-size="14.00">square_internal</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().</title>
<path fill="none" stroke="gray" d="M2351.19,-1428C2365.77,-1428 2380.91,-1428 2395.23,-1428"/>
<polygon fill="gray" stroke="gray" points="2395.49,-1431.5 2405.49,-1428 2395.49,-1424.5 2395.49,-1431.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M2336.87,-1409.94C2354.34,-1405.08 2373.38,-1399.78 2391.34,-1394.78"/>
<polygon fill="gray" stroke="gray" points="2392.5,-1398.09 2401.19,-1392.04 2390.62,-1391.35 2392.5,-1398.09"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]square_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m().</title>
<path fill="none" stroke="gray" d="M2522.61,-1409.99C2530.82,-1407.09 2539.16,-1404.04 2547,-1401 2555.67,-1397.64 2564.91,-1393.77 2573.53,-1390.04"/>
<polygon fill="gray" stroke="gray" points="2575.2,-1393.13 2582.95,-1385.91 2572.39,-1386.72 2575.2,-1393.13"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().</title>
<g id="a_node25"><a xlink:title=" &#160;&#160;&#160;pub (crate) fn mul_internal(a: &amp;Scalar52, b: &amp;Scalar52) &#45;&gt; [u128; 9] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut z = [0u128; 9]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;z[0] = m(a[0], b[0]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;z[1] = m(a[0], b[1]) + m(a[1], b[0]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;z[2] = m...">
<polygon fill="white" stroke="black" points="2518,-1338 2416,-1338 2416,-1302 2518,-1302 2518,-1338"/>
<text text-anchor="middle" x="2467" y="-1316.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_internal</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal(). -->
<g id="edge151" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().</title>
<path fill="none" stroke="gray" d="M2336.87,-1355.94C2359.22,-1349.72 2384.14,-1342.79 2406.08,-1336.68"/>
<polygon fill="gray" stroke="gray" points="2407.23,-1339.99 2415.93,-1333.94 2405.36,-1333.25 2407.23,-1339.99"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge152" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M2340.67,-1374C2352.34,-1374 2364.6,-1374 2376.71,-1374"/>
<polygon fill="gray" stroke="gray" points="2376.82,-1377.5 2386.82,-1374 2376.82,-1370.5 2376.82,-1377.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m(). -->
<g id="edge160" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/m().</title>
<path fill="none" stroke="gray" d="M2518.37,-1336.53C2527.93,-1339.86 2537.81,-1343.44 2547,-1347 2555.67,-1350.36 2564.91,-1354.23 2573.53,-1357.96"/>
<polygon fill="gray" stroke="gray" points="2572.39,-1361.28 2582.95,-1362.09 2575.2,-1354.87 2572.39,-1361.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub(). -->
<g id="edge167" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]add().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]sub().</title>
<path fill="none" stroke="gray" d="M2298.16,-1482C2332.1,-1482 2391.48,-1482 2429.75,-1482"/>
<polygon fill="gray" stroke="gray" points="2429.94,-1485.5 2439.94,-1482 2429.94,-1478.5 2429.94,-1485.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().</title>
<g id="a_node28"><a xlink:title=" &#160;&#160;&#160;pub fn mul_by_pow_2(&amp;self, k: u32) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut tmp: ExtendedPoint = *self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..k { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp = tmp.double(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;tmp &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1318.5,-374 1200.5,-374 1200.5,-338 1318.5,-338 1318.5,-374"/>
<text text-anchor="middle" x="1259.5" y="-352.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_by_pow_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<g id="a_node29"><a xlink:title=" &#160;&#160;&#160;pub fn double(&amp;self) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Want to compute (X1 Y1 Z1 X1+Y1). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Not sure how to do this less expensively than computing &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// (X1 Y1 Z1 T1) &#45;&#45;(256bit shuffle)&#45;...">
<polygon fill="white" stroke="black" points="1529.5,-374 1465.5,-374 1465.5,-338 1529.5,-338 1529.5,-374"/>
<text text-anchor="middle" x="1497.5" y="-352.3" font-family="Helvetica,sans-Serif" font-size="14.00">double</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<path fill="none" stroke="gray" d="M1318.53,-356C1360.95,-356 1417.44,-356 1455.3,-356"/>
<polygon fill="gray" stroke="gray" points="1455.45,-359.5 1465.45,-356 1455.45,-352.5 1455.45,-359.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().</title>
<g id="a_node30"><a xlink:title=" &#160;&#160;&#160;fn from(P: ExtendedPoint) &#45;&gt; CachedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut x = P.0; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x = x.blend(x.diff_sum(), Lanes::AB); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// x = (Y2 &#45; X2, Y2 + X2, Z2, T2) = (S2 S3 Z2 T2) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x = x * (12166...">
<polygon fill="white" stroke="black" points="1524.5,-320 1470.5,-320 1470.5,-284 1524.5,-284 1524.5,-320"/>
<text text-anchor="middle" x="1497.5" y="-298.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node31"><a xlink:title=" &#160;&#160;&#160;fn from(P: edwards::EdwardsPoint) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ExtendedPoint(FieldElement2625x4::new(&amp;P.X, &amp;P.Y, &amp;P.Z, &amp;P.T)) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1524.5,-266 1470.5,-266 1470.5,-230 1524.5,-230 1524.5,-266"/>
<text text-anchor="middle" x="1497.5" y="-244.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity().</title>
<g id="a_node32"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;constants::EXTENDEDPOINT_IDENTITY &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1294,-320 1225,-320 1225,-284 1294,-284 1294,-320"/>
<text text-anchor="middle" x="1259.5" y="-298.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node33"><a xlink:title=" &#160;&#160;&#160;fn from(point: &amp;edwards::EdwardsPoint) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = ExtendedPoint::from(*point); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut points = [CachedPoint::from(P); 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..7 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;points[i + 1] ...">
<polygon fill="white" stroke="black" points="1286.5,-266 1232.5,-266 1232.5,-230 1286.5,-230 1286.5,-266"/>
<text text-anchor="middle" x="1259.5" y="-244.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from(). -->
<g id="edge163" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().</title>
<path fill="none" stroke="gray" d="M1286.59,-253.7C1311.21,-259.1 1349.14,-267.48 1382,-275 1408.24,-281.01 1437.82,-287.99 1460.33,-293.35"/>
<polygon fill="gray" stroke="gray" points="1459.61,-296.77 1470.15,-295.68 1461.23,-289.96 1459.61,-296.77"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge164" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" d="M1286.66,-248C1328.83,-248 1411.97,-248 1459.97,-248"/>
<polygon fill="gray" stroke="gray" points="1460.23,-251.5 1470.23,-248 1460.22,-244.5 1460.23,-251.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]mul_by_pow_2().</title>
<path fill="none" stroke="gray" d="M1048.18,-314.32C1090.58,-322.72 1146.75,-333.85 1190.37,-342.5"/>
<polygon fill="gray" stroke="gray" points="1189.83,-345.96 1200.32,-344.47 1191.19,-339.09 1189.83,-345.96"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][Identity]identity().</title>
<path fill="none" stroke="gray" d="M1048.18,-302C1099.04,-302 1169.68,-302 1214.75,-302"/>
<polygon fill="gray" stroke="gray" points="1214.79,-305.5 1224.79,-302 1214.79,-298.5 1214.79,-305.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/straus/spec_avx2/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`LookupTable&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" d="M1048.18,-289.68C1101.98,-279.02 1177.93,-263.97 1222.31,-255.17"/>
<polygon fill="gray" stroke="gray" points="1223.22,-258.56 1232.35,-253.18 1221.86,-251.69 1223.22,-258.56"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective().</title>
<g id="a_node35"><a xlink:title=" &#160;&#160;&#160;pub(crate) const fn as_projective(&amp;self) &#45;&gt; ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ProjectivePoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: self.X, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: self.Y, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: self.Z, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1551,-2743 1444,-2743 1444,-2707 1551,-2707 1551,-2743"/>
<text text-anchor="middle" x="1497.5" y="-2721.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_projective</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[ProjectivePoint]double().</title>
<path fill="none" stroke="gray" d="M1318.59,-2724.67C1341.03,-2721.61 1365.27,-2714.27 1382,-2698 1418.48,-2662.54 1379.86,-2627.99 1410,-2587 1421.71,-2571.08 1439.77,-2558.93 1456.37,-2550.31"/>
<polygon fill="gray" stroke="gray" points="1457.96,-2553.43 1465.39,-2545.88 1454.87,-2547.14 1457.96,-2553.43"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended().</title>
<path fill="none" stroke="gray" d="M1318.78,-2725.87C1341.65,-2723.07 1366.17,-2715.58 1382,-2698 1455.33,-2616.55 1340.15,-2537.46 1410,-2453 1416.76,-2444.82 1425.97,-2439.08 1435.85,-2435.06"/>
<polygon fill="gray" stroke="gray" points="1437.19,-2438.3 1445.49,-2431.7 1434.89,-2431.69 1437.19,-2438.3"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_projective().</title>
<path fill="none" stroke="gray" d="M1318.5,-2725.62C1341.33,-2722.78 1365.89,-2715.33 1382,-2698 1440.41,-2635.16 1354.28,-2572.24 1410,-2507 1416.51,-2499.37 1425.15,-2493.87 1434.44,-2489.91"/>
<polygon fill="gray" stroke="gray" points="1435.72,-2493.17 1443.9,-2486.44 1433.31,-2486.6 1435.72,-2493.17"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]mul_by_pow_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]as_projective().</title>
<path fill="none" stroke="gray" d="M1318.53,-2725C1353.44,-2725 1397.88,-2725 1433.62,-2725"/>
<polygon fill="gray" stroke="gray" points="1433.93,-2728.5 1443.93,-2725 1433.93,-2721.5 1433.93,-2728.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node37"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="white" stroke="black" points="1322.5,-2635 1196.5,-2635 1196.5,-2599 1322.5,-2599 1322.5,-2635"/>
<text text-anchor="middle" x="1259.5" y="-2613.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M1196.25,-2620.31C1175.71,-2623.99 1153.84,-2630.99 1137,-2644 1121.59,-2655.91 1133,-2671.89 1117,-2683 1022.89,-2748.32 965.69,-2666.5 861,-2713 816.61,-2732.72 776.42,-2773.19 753.09,-2799.96"/>
<polygon fill="gray" stroke="gray" points="750.24,-2797.91 746.41,-2807.79 755.56,-2802.45 750.24,-2797.91"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<g id="a_node39"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn is_negative(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes = self.as_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(bytes[0] &amp; 1).into() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1966,-1828 1871,-1828 1871,-1792 1966,-1792 1966,-1828"/>
<text text-anchor="middle" x="1918.5" y="-1806.3" font-family="Helvetica,sans-Serif" font-size="14.00">is_negative</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1931.7,-1791.76C1951.59,-1762.23 1989.67,-1706.55 1998.5,-1700 2007.86,-1693.05 2019.14,-1687.8 2030.2,-1683.87"/>
<polygon fill="gray" stroke="gray" points="2031.39,-1687.17 2039.82,-1680.75 2029.23,-1680.51 2031.39,-1687.17"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<g id="a_node40"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn is_zero(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let zero = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bytes = self.as_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes.ct_eq(&amp;zero) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1529.5,-1936 1465.5,-1936 1465.5,-1900 1529.5,-1900 1529.5,-1936"/>
<text text-anchor="middle" x="1497.5" y="-1914.3" font-family="Helvetica,sans-Serif" font-size="14.00">is_zero</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1529.77,-1909.63C1546.41,-1904.83 1567.08,-1898.31 1585,-1891 1651.07,-1864.05 1805.43,-1773.16 1871,-1745 1926.22,-1721.29 1941.73,-1719.72 1998.5,-1700 2008.67,-1696.47 2019.59,-1692.71 2029.96,-1689.16"/>
<polygon fill="gray" stroke="gray" points="2031.37,-1692.38 2039.7,-1685.83 2029.11,-1685.76 2031.37,-1692.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<g id="a_node41"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;FieldElement) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.as_bytes().ct_eq(&amp;other.as_bytes()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1945.5,-1882 1891.5,-1882 1891.5,-1846 1945.5,-1846 1945.5,-1882"/>
<text text-anchor="middle" x="1918.5" y="-1860.3" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1945.51,-1853.71C1953.11,-1849.56 1960.77,-1844.04 1966,-1837 2003.31,-1786.76 1956.43,-1746.33 1998.5,-1700 2006.8,-1690.86 2018.32,-1684.82 2029.99,-1680.82"/>
<polygon fill="gray" stroke="gray" points="2031.18,-1684.11 2039.77,-1677.91 2029.19,-1677.4 2031.18,-1684.11"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().</title>
<g id="a_node42"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn invsqrt(&amp;self) &#45;&gt; (Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FieldElement::sqrt_ratio_i(&amp;FieldElement::ONE, self) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1530,-1882 1465,-1882 1465,-1846 1530,-1846 1530,-1882"/>
<text text-anchor="middle" x="1497.5" y="-1860.3" font-family="Helvetica,sans-Serif" font-size="14.00">invsqrt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<g id="a_node44"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn sqrt_ratio_i(u: &amp;FieldElement, v: &amp;FieldElement) &#45;&gt; (Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Using the same trick as in ed25519 decoding, we merge the &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// inversion, the square roo...">
<polygon fill="white" stroke="black" points="1774.5,-1920 1681.5,-1920 1681.5,-1884 1774.5,-1884 1774.5,-1920"/>
<text text-anchor="middle" x="1728" y="-1898.3" font-family="Helvetica,sans-Serif" font-size="14.00">sqrt_ratio_i</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1530.27,-1869.28C1566.68,-1875.34 1627.01,-1885.37 1671.28,-1892.73"/>
<polygon fill="gray" stroke="gray" points="1670.87,-1896.21 1681.31,-1894.4 1672.02,-1889.31 1670.87,-1896.21"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().</title>
<g id="a_node43"><a xlink:title=" &#160;&#160;&#160;fn pow_p58(&amp;self) &#45;&gt; FieldElement { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// The bits of (p&#45;5)/8 are 101111.....11. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nonzero bits of exponent &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (t19, _) = self.pow...">
<polygon fill="white" stroke="black" points="1958,-1936 1879,-1936 1879,-1900 1958,-1900 1958,-1936"/>
<text text-anchor="middle" x="1918.5" y="-1914.3" font-family="Helvetica,sans-Serif" font-size="14.00">pow_p58</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<path fill="none" stroke="gray" d="M1957.03,-1899.68C1960.34,-1897.08 1963.41,-1894.19 1966,-1891 1995.15,-1855.02 1964.31,-1823.24 1998.5,-1792 2053.9,-1741.39 2090.06,-1771.62 2163,-1754 2185.14,-1748.65 2209.8,-1742.44 2229.86,-1737.33"/>
<polygon fill="gray" stroke="gray" points="2230.78,-1740.71 2239.6,-1734.84 2229.05,-1733.93 2230.78,-1740.71"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().</title>
<g id="a_node45"><a xlink:title=" &#160;&#160;&#160;fn pow22501(&amp;self) &#45;&gt; (FieldElement, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Instead of managing which temporary variables are used &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// for what, we define as many as we need and leave stack &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// ...">
<polygon fill="white" stroke="black" points="2123.5,-1837 2033.5,-1837 2033.5,-1801 2123.5,-1801 2123.5,-1837"/>
<text text-anchor="middle" x="2078.5" y="-1815.3" font-family="Helvetica,sans-Serif" font-size="14.00">pow22501</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().</title>
<path fill="none" stroke="gray" d="M1951.14,-1899.9C1956.13,-1896.96 1961.22,-1893.93 1966,-1891 1991.56,-1875.34 2019.93,-1857.01 2041.66,-1842.76"/>
<polygon fill="gray" stroke="gray" points="2043.8,-1845.54 2050.24,-1837.12 2039.96,-1839.69 2043.8,-1845.54"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge155" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1774.6,-1897.19C1795.16,-1892.94 1818.47,-1884.97 1835,-1870 1866.02,-1841.91 1839.58,-1810.64 1871,-1783 1895.44,-1761.49 1983.25,-1743.18 2036.17,-1733.77"/>
<polygon fill="gray" stroke="gray" points="2037.02,-1737.18 2046.26,-1732.01 2035.81,-1730.28 2037.02,-1737.18"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="edge157" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<path fill="none" stroke="gray" d="M1742.44,-1883.74C1778.29,-1836.42 1881.51,-1709.12 1998.5,-1646 2001.59,-1644.33 2004.81,-1642.74 2008.09,-1641.22"/>
<polygon fill="gray" stroke="gray" points="2009.72,-1644.33 2017.5,-1637.14 2006.93,-1637.91 2009.72,-1644.33"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge156" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1774.65,-1892.99C1794.07,-1887.98 1816.46,-1880.56 1835,-1870 1853.86,-1859.26 1853.51,-1849.86 1871,-1837 1872.58,-1835.84 1874.21,-1834.69 1875.88,-1833.55"/>
<polygon fill="gray" stroke="gray" points="1877.93,-1836.39 1884.41,-1828.02 1874.12,-1830.52 1877.93,-1836.39"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq(). -->
<g id="edge158" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1774.63,-1892.8C1807.38,-1886.2 1850.91,-1877.42 1881.28,-1871.3"/>
<polygon fill="gray" stroke="gray" points="1882.33,-1874.66 1891.44,-1869.25 1880.94,-1867.8 1882.33,-1874.66"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58(). -->
<g id="edge154" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow_p58().</title>
<path fill="none" stroke="gray" d="M1774.63,-1905.87C1803.06,-1908.29 1839.63,-1911.39 1868.65,-1913.85"/>
<polygon fill="gray" stroke="gray" points="1868.71,-1917.37 1878.97,-1914.73 1869.3,-1910.4 1868.71,-1917.37"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k(). -->
<g id="edge168" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]pow2k().</title>
<path fill="none" stroke="gray" d="M2118.67,-1800.93C2132.69,-1794.41 2148.58,-1786.94 2163,-1780 2185.42,-1769.22 2210.33,-1756.9 2230.47,-1746.85"/>
<polygon fill="gray" stroke="gray" points="2232.27,-1749.86 2239.65,-1742.26 2229.14,-1743.6 2232.27,-1749.86"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge169" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]pow22501().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M2078.5,-1800.87C2078.5,-1785.83 2078.5,-1770.78 2078.5,-1755.74"/>
<polygon fill="gray" stroke="gray" points="2082,-1755.33 2078.5,-1745.33 2075,-1755.33 2082,-1755.33"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().</title>
<g id="a_node46"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn elligator_ristretto_flavor(r_0: &amp;FieldElement) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let i = &amp;constants::SQRT_M1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let d = &amp;constants::EDWARDS_D; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one_minus_d_sq = &amp;constants...">
<polygon fill="white" stroke="black" points="1350,-2073 1169,-2073 1169,-2037 1350,-2037 1350,-2073"/>
<text text-anchor="middle" x="1259.5" y="-2051.3" font-family="Helvetica,sans-Serif" font-size="14.00">elligator_ristretto_flavor</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/curve_models/impl#[CompletedPoint]as_extended().</title>
<path fill="none" stroke="gray" d="M1350.02,-2061.15C1362.19,-2065.63 1373.42,-2072.28 1382,-2082 1425.73,-2131.53 1373.83,-2322.71 1410,-2378 1416.61,-2388.11 1426.11,-2396.28 1436.42,-2402.82"/>
<polygon fill="gray" stroke="gray" points="1434.82,-2405.94 1445.23,-2407.94 1438.34,-2399.89 1434.82,-2405.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1350.12,-2048.93C1362.27,-2044.44 1373.48,-2037.77 1382,-2028 1431.55,-1971.21 1355.44,-1742 1410,-1690 1499.47,-1604.72 1849.36,-1633.09 1966,-1674 1983.46,-1680.12 1982.28,-1691.1 1998.5,-1700 2010.33,-1706.49 2024.01,-1711.84 2036.62,-1716"/>
<polygon fill="gray" stroke="gray" points="2035.86,-1719.44 2046.45,-1719.1 2037.96,-1712.76 2035.86,-1719.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<path fill="none" stroke="gray" d="M1350.22,-2049.02C1362.36,-2044.52 1373.53,-2037.82 1382,-2028 1439.32,-1961.52 1346.45,-1694.54 1410,-1634 1491.87,-1556.01 1836.61,-1588.18 1996.03,-1607.9"/>
<polygon fill="gray" stroke="gray" points="1995.9,-1611.41 2006.25,-1609.18 1996.77,-1604.46 1995.9,-1611.41"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1350.07,-2048.51C1362.15,-2044.06 1373.35,-2037.51 1382,-2028 1449.52,-1953.79 1334.78,-1870.4 1410,-1804 1475.31,-1746.35 1742.51,-1781.34 1860.75,-1800.25"/>
<polygon fill="gray" stroke="gray" points="1860.27,-1803.72 1870.7,-1801.86 1861.39,-1796.81 1860.27,-1803.72"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]sqrt_ratio_i().</title>
<path fill="none" stroke="gray" d="M1350.21,-2062.43C1417.49,-2064.54 1510.42,-2059.92 1585,-2028 1636.24,-2006.07 1681.74,-1958.14 1706.73,-1928.12"/>
<polygon fill="gray" stroke="gray" points="1709.61,-1930.12 1713.23,-1920.16 1704.19,-1925.7 1709.61,-1930.12"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch().</title>
<g id="a_node47"><a xlink:title=" &#160;&#160;&#160;pub fn double_and_compress_batch&lt;&#39;a, I&gt;(points: I) &#45;&gt; Vec&lt;CompressedRistretto&gt; &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator&lt;Item = &amp;&#39;a RistrettoPoint&gt;, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[derive(Copy, Clone, Debug)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;str...">
<polygon fill="white" stroke="black" points="1093,-2073 877,-2073 877,-2037 1093,-2037 1093,-2073"/>
<text text-anchor="middle" x="985" y="-2051.3" font-family="Helvetica,sans-Serif" font-size="14.00">double_and_compress_batch</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; RistrettoPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;RistrettoPoin...">
<polygon fill="white" stroke="black" points="1048,-2289 922,-2289 922,-2253 1048,-2253 1048,-2289"/>
<text text-anchor="middle" x="985" y="-2267.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M1048.24,-2270.19C1072.52,-2273.05 1098.82,-2280.56 1117,-2298 1143.45,-2323.37 1124.17,-2343.67 1137,-2378 1166.98,-2458.23 1216.63,-2546.59 1242.19,-2589.96"/>
<polygon fill="gray" stroke="gray" points="1239.29,-2591.94 1247.41,-2598.75 1245.31,-2588.37 1239.29,-2591.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().</title>
<g id="a_node49"><a xlink:title=" &#160;&#160;&#160;pub fn from_uniform_bytes(bytes: &amp;[u8; 64]) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// This follows the one&#45;way map construction from the Ristretto RFC: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// https://datatracker.ietf.org/doc/html/draft&#45;...">
<polygon fill="white" stroke="black" points="1062.5,-2019 907.5,-2019 907.5,-1983 1062.5,-1983 1062.5,-2019"/>
<text text-anchor="middle" x="985" y="-1997.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_uniform_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes().</title>
<path fill="none" stroke="gray" d="M988.06,-1982.88C998.59,-1893.64 1049.35,-1501.9 1137,-1424 1413.68,-1178.1 1646.83,-1316.53 1966,-1504 1983.21,-1514.11 1981.61,-1524.36 1998.5,-1535 2005.73,-1539.55 2013.75,-1543.59 2021.84,-1547.1"/>
<polygon fill="gray" stroke="gray" points="2020.74,-1550.43 2031.32,-1550.99 2023.39,-1543.96 2020.74,-1550.43"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]elligator_ristretto_flavor().</title>
<path fill="none" stroke="gray" d="M1062.63,-2016.19C1092.46,-2022.1 1127.04,-2028.95 1158.77,-2035.24"/>
<polygon fill="gray" stroke="gray" points="1158.47,-2038.75 1168.96,-2037.26 1159.83,-2031.88 1158.47,-2038.75"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes().</title>
<g id="a_node50"><a xlink:title=" &#160;&#160;&#160;pub const fn to_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0 &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1022.5,-2343 947.5,-2343 947.5,-2307 1022.5,-2307 1022.5,-2343"/>
<text text-anchor="middle" x="985" y="-2321.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;pub fn mul_base(scalar: &amp;Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(not(feature = &#39; precomputed&#45;tables&#39; ))] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar * constants::RISTRETTO_BASEPOINT_POINT &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(featur...">
<polygon fill="white" stroke="black" points="1026.5,-2127 943.5,-2127 943.5,-2091 1026.5,-2091 1026.5,-2127"/>
<text text-anchor="middle" x="985" y="-2105.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul_base</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<g id="a_node52"><a xlink:title=" &#160;&#160;&#160;pub const fn as_bytes(&amp;self) &#45;&gt; &amp;[u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self.0 &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1536,-2019 1459,-2019 1459,-1983 1536,-1983 1536,-2019"/>
<text text-anchor="middle" x="1497.5" y="-1997.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;pub fn compress(&amp;self) &#45;&gt; CompressedRistretto { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut X = self.0.X; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut Y = self.0.Y; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Z = &amp;self.0.Z; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let T = &amp;self.0.T; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let u1 = &amp;(Z + &amp;Y) * &amp;(Z ...">
<polygon fill="white" stroke="black" points="1026.5,-2181 943.5,-2181 943.5,-2145 1026.5,-2145 1026.5,-2181"/>
<text text-anchor="middle" x="985" y="-2159.3" font-family="Helvetica,sans-Serif" font-size="14.00">compress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1026.61,-2166.71C1056.44,-2166.97 1095.4,-2161.67 1117,-2136 1162.52,-2081.9 1086.23,-1549.2 1137,-1500 1208.49,-1430.72 1487.15,-1481.66 1585,-1500 1763.55,-1533.46 1826.05,-1532.18 1966,-1648 1987,-1665.38 1977.15,-1683.06 1998.5,-1700 2009.45,-1708.69 2023.36,-1714.66 2036.44,-1718.73"/>
<polygon fill="gray" stroke="gray" points="2035.65,-1722.15 2046.22,-1721.49 2037.55,-1715.41 2035.65,-1722.15"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1026.8,-2166.61C1056.54,-2166.78 1095.27,-2161.41 1117,-2136 1147.51,-2100.32 1112.21,-1753.86 1137,-1714 1210.24,-1596.26 1275.74,-1597.66 1410,-1563 1592.89,-1515.79 1650.58,-1522.17 1835,-1563 1897.71,-1576.88 1910.12,-1592.34 1966,-1624 1981.18,-1632.6 1982.89,-1638.22 1998.5,-1646 2008.43,-1650.95 2019.49,-1655.35 2030.11,-1659.09"/>
<polygon fill="gray" stroke="gray" points="2029.1,-1662.45 2039.7,-1662.34 2031.35,-1655.82 2029.1,-1662.45"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51][ConditionallySelectable]conditional_assign().</title>
<path fill="none" stroke="gray" d="M1026.62,-2166.72C1056.46,-2166.98 1095.42,-2161.69 1117,-2136 1165.26,-2078.54 1083.16,-1513.26 1137,-1461 1248.49,-1352.76 1687.34,-1454.59 1835,-1503 1913.62,-1528.78 1922.75,-1558.72 1998.5,-1592 2002.64,-1593.82 2006.95,-1595.6 2011.32,-1597.32"/>
<polygon fill="gray" stroke="gray" points="2010.36,-1600.69 2020.95,-1600.98 2012.84,-1594.15 2010.36,-1600.69"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1026.61,-2166.45C1056.24,-2166.53 1094.94,-2161.13 1117,-2136 1156.84,-2090.63 1104.72,-1916.03 1137,-1865 1211.59,-1747.09 1275.1,-1745.63 1410,-1710 1449.43,-1699.59 1810.36,-1700.41 1835,-1712 1866.09,-1726.62 1889.7,-1759.29 1903.54,-1782.89"/>
<polygon fill="gray" stroke="gray" points="1900.57,-1784.75 1908.53,-1791.75 1906.67,-1781.32 1900.57,-1784.75"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().</title>
<path fill="none" stroke="gray" d="M1026.57,-2166.13C1055.98,-2166.01 1094.4,-2160.49 1117,-2136 1166.19,-2082.68 1090.36,-2029.56 1137,-1974 1217.36,-1878.27 1378.65,-1864.21 1454.83,-1863.2"/>
<polygon fill="gray" stroke="gray" points="1455.02,-1866.7 1465,-1863.14 1454.98,-1859.7 1455.02,-1866.7"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<g id="a_node54"><a xlink:title=" &#160;&#160;&#160;pub(super) fn step_2(s: FieldElement) &#45;&gt; (Choice, Choice, Choice, RistrettoPoint) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Step 2. &#160;Compute (X:Y:Z:T). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let one = FieldElement::ONE; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let ss = s.square(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1290.5,-2127 1228.5,-2127 1228.5,-2091 1290.5,-2091 1290.5,-2127"/>
<text text-anchor="middle" x="1259.5" y="-2105.3" font-family="Helvetica,sans-Serif" font-size="14.00">step_2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]square().</title>
<path fill="none" stroke="gray" d="M1290.63,-2111.43C1318.7,-2111.87 1359.5,-2107.53 1382,-2082 1426.56,-2031.43 1362.03,-1827.34 1410,-1780 1583.29,-1608.99 1919.78,-1682.31 2036.47,-1714.65"/>
<polygon fill="gray" stroke="gray" points="2035.85,-1718.11 2046.43,-1717.45 2037.75,-1711.37 2035.85,-1718.11"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1290.51,-2111.32C1318.49,-2111.68 1359.23,-2107.29 1382,-2082 1455.33,-2000.55 1330.19,-1912.11 1410,-1837 1442.19,-1806.71 1734.88,-1807.29 1860.58,-1808.98"/>
<polygon fill="gray" stroke="gray" points="1860.72,-1812.48 1870.77,-1809.12 1860.82,-1805.48 1860.72,-1812.48"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_zero().</title>
<path fill="none" stroke="gray" d="M1290.57,-2110.61C1318,-2110.38 1357.83,-2105.49 1382,-2082 1418.48,-2046.54 1379.86,-2011.99 1410,-1971 1421.71,-1955.08 1439.77,-1942.93 1456.37,-1934.31"/>
<polygon fill="gray" stroke="gray" points="1457.96,-1937.43 1465.39,-1929.88 1454.87,-1931.14 1457.96,-1937.43"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]invsqrt().</title>
<path fill="none" stroke="gray" d="M1290.6,-2111.16C1318.44,-2111.37 1358.9,-2106.85 1382,-2082 1440.41,-2019.16 1354.28,-1956.24 1410,-1891 1421.17,-1877.92 1438.57,-1871.09 1454.85,-1867.56"/>
<polygon fill="gray" stroke="gray" points="1455.56,-1870.98 1464.77,-1865.75 1454.31,-1864.1 1455.56,-1870.98"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<g id="a_node55"><a xlink:title=" &#160;&#160;&#160;pub fn decompress(&amp;self) &#45;&gt; Option&lt;RistrettoPoint&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (s_encoding_is_canonical, s_is_negative, s) = decompress::step_1(self); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!s_encoding_is_canonical | s_is_negative).into...">
<polygon fill="white" stroke="black" points="1035.5,-2235 934.5,-2235 934.5,-2199 1035.5,-2199 1035.5,-2235"/>
<text text-anchor="middle" x="985" y="-2213.3" font-family="Helvetica,sans-Serif" font-size="14.00">decompress</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2(). -->
<g id="edge166" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_2().</title>
<path fill="none" stroke="gray" d="M1035.57,-2210.58C1060.52,-2206.41 1090.94,-2199.86 1117,-2190 1155.82,-2175.32 1196.59,-2150.88 1224.35,-2132.68"/>
<polygon fill="gray" stroke="gray" points="1226.49,-2135.46 1232.88,-2127.01 1222.61,-2129.63 1226.49,-2135.46"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<g id="a_node56"><a xlink:title=" &#160;&#160;&#160;pub(super) fn step_1(repr: &amp;CompressedRistretto) &#45;&gt; (Choice, Choice, FieldElement) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Step 1. Check s for validity: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// 1.a) s must be 32 bytes (we get this from the type system) ...">
<polygon fill="white" stroke="black" points="1290.5,-2019 1228.5,-2019 1228.5,-1983 1290.5,-1983 1290.5,-2019"/>
<text text-anchor="middle" x="1259.5" y="-1997.3" font-family="Helvetica,sans-Serif" font-size="14.00">step_1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1(). -->
<g id="edge165" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().</title>
<path fill="none" stroke="gray" d="M1035.73,-2219.91C1063.58,-2218.7 1096.69,-2212.02 1117,-2190 1166.19,-2136.68 1088.22,-2081.7 1137,-2028 1157.14,-2005.83 1191.09,-1999.75 1217.99,-1998.84"/>
<polygon fill="gray" stroke="gray" points="1218.32,-2002.34 1228.28,-1998.72 1218.24,-1995.34 1218.32,-2002.34"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes(). -->
<g id="edge170" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]from_bytes().</title>
<path fill="none" stroke="gray" d="M1260,-1982.61C1259.22,-1913.13 1266.88,-1665.38 1410,-1563 1597.9,-1428.59 1897.93,-1504.73 2021.51,-1545.01"/>
<polygon fill="gray" stroke="gray" points="2020.57,-1548.38 2031.16,-1548.19 2022.76,-1541.73 2020.57,-1548.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes(). -->
<g id="edge172" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/field/impl#[FieldElement51]as_bytes().</title>
<path fill="none" stroke="gray" d="M1261.35,-1982.63C1265.32,-1920.52 1287.56,-1717.6 1410,-1634 1614.14,-1494.61 1722.58,-1605.01 1966,-1648 1987.13,-1651.73 2010.3,-1656.77 2030.03,-1661.35"/>
<polygon fill="gray" stroke="gray" points="2029.46,-1664.81 2040,-1663.69 2031.06,-1658 2029.46,-1664.81"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative(). -->
<g id="edge173" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 field/impl#[`crate::lizard::lizard_constants::FieldElement51`]is_negative().</title>
<path fill="none" stroke="gray" d="M1265.49,-1982.76C1279.3,-1936.3 1322.9,-1813.82 1410,-1766 1575.57,-1675.09 1651.75,-1720.19 1835,-1766 1851.54,-1770.13 1868.39,-1778.28 1882.51,-1786.45"/>
<polygon fill="gray" stroke="gray" points="1881,-1789.62 1891.37,-1791.78 1884.6,-1783.62 1881,-1789.62"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="edge171" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/decompress/step_1().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<path fill="none" stroke="gray" d="M1290.87,-2001C1330.8,-2001 1401.4,-2001 1448.57,-2001"/>
<polygon fill="gray" stroke="gray" points="1448.85,-2004.5 1458.85,-2001 1448.85,-1997.5 1448.85,-2004.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes().</title>
<g id="a_node57"><a xlink:title=" &#160;&#160;&#160;pub const fn to_bytes(&amp;self) &#45;&gt; [u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.bytes &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1297,-1147 1222,-1147 1222,-1111 1297,-1111 1297,-1147"/>
<text text-anchor="middle" x="1259.5" y="-1125.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<g id="a_node58"><a xlink:title=" &#160;&#160;&#160;fn pack(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes: self.as_bytes(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1945.5,-1255 1891.5,-1255 1891.5,-1219 1945.5,-1219 1945.5,-1255"/>
<text text-anchor="middle" x="1918.5" y="-1233.3" font-family="Helvetica,sans-Serif" font-size="14.00">pack</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_bytes().</title>
<path fill="none" stroke="gray" d="M1943.42,-1255.05C1951.62,-1262.31 1960.18,-1271.27 1966,-1281 1994.35,-1328.43 1960.72,-1360.68 1998.5,-1401 2006.94,-1410.01 2018.51,-1416.01 2030.19,-1420.01"/>
<polygon fill="gray" stroke="gray" points="2029.37,-1423.42 2039.96,-1422.92 2031.37,-1416.71 2029.37,-1423.42"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<g id="a_node59"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_mod_order_wide(input: &amp;[u8; 64]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UnpackedScalar::from_bytes_wide(input).pack() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1835,-1201 1621,-1201 1621,-1165 1835,-1165 1835,-1201"/>
<text text-anchor="middle" x="1728" y="-1179.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_mod_order_wide</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes_wide().</title>
<path fill="none" stroke="gray" d="M1819.58,-1201.02C1825,-1203.62 1830.2,-1206.6 1835,-1210 1858.54,-1226.67 1850.95,-1243.27 1871,-1264 1907.1,-1301.32 1936.51,-1289.26 1966,-1332 1998.11,-1378.54 1959.96,-1413.62 1998.5,-1455 2000.07,-1456.68 2001.74,-1458.26 2003.5,-1459.73"/>
<polygon fill="gray" stroke="gray" points="2001.57,-1462.66 2011.75,-1465.61 2005.63,-1456.95 2001.57,-1462.66"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" d="M1802.45,-1201.03C1813.39,-1203.91 1824.51,-1206.95 1835,-1210 1850.4,-1214.48 1867.26,-1219.9 1881.7,-1224.71"/>
<polygon fill="gray" stroke="gray" points="1880.67,-1228.05 1891.26,-1227.92 1882.89,-1221.41 1880.67,-1228.05"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes().</title>
<g id="a_node60"><a xlink:title=" &#160;&#160;&#160;pub const fn as_bytes(&amp;self) &#45;&gt; &amp;[u8; 32] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self.bytes &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1298,-1201 1221,-1201 1221,-1165 1298,-1165 1298,-1201"/>
<text text-anchor="middle" x="1259.5" y="-1179.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().</title>
<g id="a_node61"><a xlink:title=" &#160;&#160;&#160;pub fn invert(&amp;self) &#45;&gt; UnpackedScalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.as_montgomery().montgomery_invert().from_montgomery() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1947,-1147 1890,-1147 1890,-1111 1947,-1111 1947,-1147"/>
<text text-anchor="middle" x="1918.5" y="-1125.3" font-family="Helvetica,sans-Serif" font-size="14.00">invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_montgomery().</title>
<path fill="none" stroke="gray" d="M1947.27,-1133.76C1994.5,-1142.8 2092.23,-1165.61 2163,-1210 2198.69,-1232.38 2231.11,-1269.08 2250.69,-1293.87"/>
<polygon fill="gray" stroke="gray" points="2247.93,-1296.03 2256.82,-1301.79 2253.46,-1291.74 2247.93,-1296.03"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]as_montgomery().</title>
<path fill="none" stroke="gray" d="M1947.43,-1140.4C1954.37,-1144.41 1961.2,-1149.57 1966,-1156 2002.66,-1205.11 1957.96,-1244.05 1998.5,-1290 2000.73,-1292.53 2003.2,-1294.85 2005.85,-1296.97"/>
<polygon fill="gray" stroke="gray" points="2004.03,-1299.97 2014.25,-1302.77 2008.01,-1294.21 2004.03,-1299.97"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().</title>
<g id="a_node62"><a xlink:title=" &#160;&#160;&#160;pub fn montgomery_invert(&amp;self) &#45;&gt; UnpackedScalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Uses the addition chain from &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// https://briansmith.org/ecc&#45;inversion&#45;addition&#45;chains&#45;01#curve25519_scalar_inversion &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l...">
<polygon fill="white" stroke="black" points="2155,-1255 2002,-1255 2002,-1219 2155,-1219 2155,-1255"/>
<text text-anchor="middle" x="2078.5" y="-1233.3" font-family="Helvetica,sans-Serif" font-size="14.00">montgomery_invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().</title>
<path fill="none" stroke="gray" d="M1947.32,-1144.53C1953.54,-1148.18 1960.05,-1152.13 1966,-1156 1993.74,-1174.06 2024.05,-1196.25 2046.06,-1212.84"/>
<polygon fill="gray" stroke="gray" points="2043.98,-1215.65 2054.07,-1218.9 2048.21,-1210.07 2043.98,-1215.65"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_square().</title>
<path fill="none" stroke="gray" d="M2120.92,-1255.08C2136.18,-1263.63 2152.33,-1275.25 2163,-1290 2192.82,-1331.23 2156.53,-1363.57 2191,-1401 2191.88,-1401.96 2192.8,-1402.88 2193.75,-1403.78"/>
<polygon fill="gray" stroke="gray" points="2191.6,-1406.53 2201.61,-1410 2195.94,-1401.05 2191.6,-1406.53"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]montgomery_invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_mul().</title>
<path fill="none" stroke="gray" d="M2117.27,-1255.09C2132.89,-1263.96 2150.28,-1275.81 2163,-1290 2181.84,-1311.02 2169.81,-1328.35 2191,-1347 2192.31,-1348.15 2193.67,-1349.26 2195.07,-1350.31"/>
<polygon fill="gray" stroke="gray" points="2193.26,-1353.31 2203.54,-1355.87 2197.1,-1347.46 2193.26,-1353.31"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, other: &amp;Self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.bytes.ct_eq(&amp;other.bytes) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1755,-1255 1701,-1255 1701,-1219 1755,-1219 1755,-1255"/>
<text text-anchor="middle" x="1728" y="-1233.3" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().</title>
<g id="a_node64"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn unpack(&amp;self) &#45;&gt; UnpackedScalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UnpackedScalar::from_bytes(&amp;self.bytes) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1952.5,-1201 1884.5,-1201 1884.5,-1165 1952.5,-1165 1952.5,-1201"/>
<text text-anchor="middle" x="1918.5" y="-1179.3" font-family="Helvetica,sans-Serif" font-size="14.00">unpack</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]from_bytes().</title>
<path fill="none" stroke="gray" d="M1952.72,-1197.69C1957.75,-1201.12 1962.44,-1205.2 1966,-1210 2003.31,-1260.24 1956.43,-1300.67 1998.5,-1347 2004.8,-1353.93 2012.95,-1359.09 2021.62,-1362.92"/>
<polygon fill="gray" stroke="gray" points="2020.57,-1366.27 2031.16,-1366.58 2023.08,-1359.73 2020.57,-1366.27"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<g id="a_node65"><a xlink:title=" &#160;&#160;&#160;fn reduce(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x = self.unpack(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let xR = UnpackedScalar::mul_internal(&amp;x, &amp;constants::R); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x_mod_l = UnpackedScalar::montgomery_reduce(&amp;xR); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1760,-1147 1696,-1147 1696,-1111 1760,-1111 1760,-1147"/>
<text text-anchor="middle" x="1728" y="-1125.3" font-family="Helvetica,sans-Serif" font-size="14.00">reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]mul_internal().</title>
<path fill="none" stroke="gray" d="M1760.16,-1125.18C1782.1,-1121.53 1811.61,-1114.65 1835,-1102 1854.09,-1091.68 1850.77,-1076.87 1871,-1069 2069.82,-991.66 2171.46,-953.77 2351,-1069 2429.28,-1119.24 2454.96,-1237.55 2462.81,-1291.85"/>
<polygon fill="gray" stroke="gray" points="2459.35,-1292.38 2464.15,-1301.82 2466.29,-1291.45 2459.35,-1292.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/u64/scalar/impl#[Scalar52]montgomery_reduce().</title>
<path fill="none" stroke="gray" d="M1760.06,-1121.35C1788.67,-1114.72 1832.4,-1105.64 1871,-1102 2001.41,-1089.71 2044.4,-1086.38 2163,-1142 2260.03,-1187.5 2278.65,-1213.93 2351,-1293 2370.47,-1314.28 2364.14,-1329.4 2387,-1347 2388.77,-1348.36 2390.62,-1349.66 2392.52,-1350.9"/>
<polygon fill="gray" stroke="gray" points="2390.79,-1353.94 2401.2,-1355.92 2394.3,-1347.88 2390.79,-1353.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" d="M1760.25,-1131.02C1782.79,-1133.81 1812.99,-1140.42 1835,-1156 1858.54,-1172.67 1849.98,-1190.25 1871,-1210 1874.55,-1213.34 1878.59,-1216.44 1882.77,-1219.26"/>
<polygon fill="gray" stroke="gray" points="1881.1,-1222.34 1891.44,-1224.65 1884.79,-1216.4 1881.1,-1222.34"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().</title>
<path fill="none" stroke="gray" d="M1760.22,-1136.37C1781.42,-1141.52 1810.02,-1148.74 1835,-1156 1847.9,-1159.75 1861.83,-1164.16 1874.49,-1168.32"/>
<polygon fill="gray" stroke="gray" points="1873.75,-1171.76 1884.34,-1171.59 1875.95,-1165.12 1873.75,-1171.76"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<g id="a_node66"><a xlink:title=" &#160;&#160;&#160;pub fn from_canonical_bytes(bytes: [u8; 32]) &#45;&gt; CtOption&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let high_bit_unset = (bytes[31] &gt;&gt; 7).ct_eq(&amp;0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let candidate = Scalar { bytes }; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CtOption::new(candidat...">
<polygon fill="white" stroke="black" points="1342.5,-1255 1176.5,-1255 1176.5,-1219 1342.5,-1219 1342.5,-1255"/>
<text text-anchor="middle" x="1259.5" y="-1233.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_canonical_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;fn is_canonical(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.ct_eq(&amp;self.reduce()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1547.5,-1255 1447.5,-1255 1447.5,-1219 1547.5,-1219 1547.5,-1255"/>
<text text-anchor="middle" x="1497.5" y="-1233.3" font-family="Helvetica,sans-Serif" font-size="14.00">is_canonical</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().</title>
<path fill="none" stroke="gray" d="M1342.71,-1237C1373.75,-1237 1408.44,-1237 1437.01,-1237"/>
<polygon fill="gray" stroke="gray" points="1437.24,-1240.5 1447.24,-1237 1437.24,-1233.5 1437.24,-1240.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<g id="a_node67"><a xlink:title=" &#160;&#160;&#160;pub fn invert(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.unpack().invert().pack() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1756.5,-1093 1699.5,-1093 1699.5,-1057 1756.5,-1057 1756.5,-1093"/>
<text text-anchor="middle" x="1728" y="-1071.3" font-family="Helvetica,sans-Serif" font-size="14.00">invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" d="M1756.8,-1075.01C1780.46,-1076.51 1813.86,-1082.34 1835,-1102 1872.05,-1136.46 1839.06,-1170.76 1871,-1210 1874.3,-1214.06 1878.39,-1217.63 1882.76,-1220.74"/>
<polygon fill="gray" stroke="gray" points="1881.05,-1223.8 1891.38,-1226.16 1884.77,-1217.87 1881.05,-1223.8"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]invert().</title>
<path fill="none" stroke="gray" d="M1756.59,-1081.49C1778.06,-1086.67 1808.56,-1094.31 1835,-1102 1849.79,-1106.3 1865.92,-1111.47 1879.96,-1116.13"/>
<polygon fill="gray" stroke="gray" points="1879.17,-1119.56 1889.77,-1119.41 1881.4,-1112.92 1879.17,-1119.56"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]unpack().</title>
<path fill="none" stroke="gray" d="M1756.51,-1076.59C1779.36,-1079.1 1811.75,-1085.54 1835,-1102 1858.54,-1118.67 1849.98,-1136.25 1871,-1156 1872.48,-1157.39 1874.04,-1158.74 1875.67,-1160.04"/>
<polygon fill="gray" stroke="gray" points="1874,-1163.16 1884.16,-1166.18 1878.11,-1157.49 1874,-1163.16"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_mod_order(bytes: [u8; 32]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Temporarily allow s_unreduced.bytes &gt; 2^255 ... &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let s_unreduced = Scalar { bytes }; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Then reduce mod the grou...">
<polygon fill="white" stroke="black" points="1585,-1128 1410,-1128 1410,-1092 1585,-1092 1585,-1128"/>
<text text-anchor="middle" x="1497.5" y="-1106.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_mod_order</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<path fill="none" stroke="gray" d="M1585.21,-1117.21C1619.69,-1120.08 1657.73,-1123.24 1685.72,-1125.57"/>
<polygon fill="gray" stroke="gray" points="1685.67,-1129.08 1695.93,-1126.42 1686.25,-1122.1 1685.67,-1129.08"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M1547.52,-1237C1590.43,-1237 1651.81,-1237 1690.51,-1237"/>
<polygon fill="gray" stroke="gray" points="1690.8,-1240.5 1700.8,-1237 1690.8,-1233.5 1690.8,-1240.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<path fill="none" stroke="gray" d="M1521.08,-1218.68C1544.69,-1200.37 1583.47,-1172.62 1621,-1156 1641.65,-1146.86 1665.98,-1140.38 1686.13,-1136.07"/>
<polygon fill="gray" stroke="gray" points="1686.84,-1139.5 1695.94,-1134.07 1685.44,-1132.64 1686.84,-1139.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;fn vartime_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; Self::Point &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;Self::Po...">
<polygon fill="white" stroke="black" points="589.5,-189 403.5,-189 403.5,-153 589.5,-153 589.5,-189"/>
<text text-anchor="middle" x="496.5" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;fn optional_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; Option&lt;Self::Point&gt; &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator&lt;Item = Option&lt;Self::Poin...">
<polygon fill="white" stroke="black" points="825,-189 637,-189 637,-153 825,-153 825,-189"/>
<text text-anchor="middle" x="731" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">optional_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#optional_multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M589.72,-171C601.81,-171 614.25,-171 626.51,-171"/>
<polygon fill="gray" stroke="gray" points="626.75,-174.5 636.75,-171 626.75,-167.5 626.75,-174.5"/>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 black_box(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 black_box().</title>
<g id="a_node72"><a xlink:title="fn black_box&lt;T: Copy&gt;(input: T) &#45;&gt; T { &#160;&#160;&#160;&#160;unsafe { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Optimization barrier &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// SAFETY: &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#45; &amp;input is not NULL because we own input; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#45; input is Copy a...">
<polygon fill="white" stroke="black" points="1028,-106 942,-106 942,-70 1028,-70 1028,-106"/>
<text text-anchor="middle" x="985" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">black_box</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().</title>
<g id="a_node73"><a xlink:title=" &#160;&#160;&#160;fn from(input: u8) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!((input == 0u8) | (input == 1u8)); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Our goal is to prevent the compiler from inferring that the value held inside the &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// resu...">
<polygon fill="white" stroke="black" points="758,-106 704,-106 704,-70 758,-70 758,-106"/>
<text text-anchor="middle" x="731" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 black_box(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 black_box().</title>
<path fill="none" stroke="gray" d="M758.02,-88C798.81,-88 878.62,-88 931.63,-88"/>
<polygon fill="gray" stroke="gray" points="931.86,-91.5 941.86,-88 931.86,-84.5 931.86,-91.5"/>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8().</title>
<g id="a_node74"><a xlink:title=" &#160;&#160;&#160;pub fn unwrap_u8(&amp;self) &#45;&gt; u8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0 &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="778,-52 684,-52 684,-16 778,-16 778,-52"/>
<text text-anchor="middle" x="731" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">unwrap_u8</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().</title>
<g id="a_node75"><a xlink:title=" &#160;&#160;&#160;fn ct_eq(&amp;self, _rhs: &amp;[T]) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let len = self.len(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Short&#45;circuit on the *lengths* of the slices, not their &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// contents. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if len != _rhs.len() { &#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="523.5,-106 469.5,-106 469.5,-70 523.5,-70 523.5,-106"/>
<text text-anchor="middle" x="496.5" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">ct_eq</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice][`From&lt;u8&gt;`]from().</title>
<path fill="none" stroke="gray" d="M523.72,-88C565.34,-88 646.65,-88 693.8,-88"/>
<polygon fill="gray" stroke="gray" points="693.88,-91.5 703.88,-88 693.88,-84.5 693.88,-91.5"/>
</g>
<!-- rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[Choice]unwrap_u8().</title>
<path fill="none" stroke="gray" d="M523.72,-81.91C559.97,-73.49 626.33,-58.08 674.01,-47.01"/>
<polygon fill="gray" stroke="gray" points="674.93,-50.38 683.88,-44.71 673.35,-43.57 674.93,-50.38"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add().</title>
<g id="a_node76"><a xlink:title=" &#160;&#160;&#160;pub fn add(&amp;mut self, s: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, val: RistrettoPoint) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0.insert(s.into(), val); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-272 469.5,-272 469.5,-236 523.5,-236 523.5,-272"/>
<text text-anchor="middle" x="496.5" y="-250.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add().</title>
<g id="a_node77"><a xlink:title=" &#160;&#160;&#160;pub fn add(&amp;mut self, s: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, val: Scalar) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.0.insert(s.into(), val); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-434 469.5,-434 469.5,-398 523.5,-398 523.5,-434"/>
<text text-anchor="middle" x="496.5" y="-412.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new().</title>
<g id="a_node78"><a xlink:title=" &#160;&#160;&#160;pub fn new() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self(HashMap::new()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-380 469.5,-380 469.5,-344 523.5,-344 523.5,-380"/>
<text text-anchor="middle" x="496.5" y="-358.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;pub fn new() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self(HashMap::new()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="523.5,-326 469.5,-326 469.5,-290 523.5,-290 523.5,-326"/>
<text text-anchor="middle" x="496.5" y="-304.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;pub fn to_bytes(&amp;self) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&amp;self.challenge] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.into_iter() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.chain(&amp;self.response) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.flat_map(|scalar| *scalar.as_bytes()) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.collect() ...">
<polygon fill="white" stroke="black" points="1022.5,-1269 947.5,-1269 947.5,-1233 1022.5,-1233 1022.5,-1269"/>
<text text-anchor="middle" x="985" y="-1247.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]as_bytes().</title>
<path fill="none" stroke="gray" d="M1022.66,-1243.93C1049.21,-1238.35 1085.78,-1229.73 1117,-1219 1126.22,-1215.83 1127.75,-1213.07 1137,-1210 1160.83,-1202.08 1188.06,-1195.79 1210.69,-1191.28"/>
<polygon fill="gray" stroke="gray" points="1211.59,-1194.67 1220.74,-1189.33 1210.26,-1187.8 1211.59,-1194.67"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().</title>
<g id="a_node81"><a xlink:title=" &#160;&#160;&#160;pub fn from_slice(bytes: &amp;[u8]) &#45;&gt; Option&lt;Self&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// TODO use Iterator::array_chunks once that&#39;s stabilized. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// See https://github.com/rust&#45;lang/rust/issues/100450. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let chu...">
<polygon fill="white" stroke="black" points="1028,-1323 942,-1323 942,-1287 1028,-1287 1028,-1323"/>
<text text-anchor="middle" x="985" y="-1301.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_slice</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<path fill="none" stroke="gray" d="M1028.08,-1297.2C1053.86,-1292.21 1087.47,-1285.31 1117,-1278 1141,-1272.06 1167.06,-1264.76 1190.2,-1257.97"/>
<polygon fill="gray" stroke="gray" points="1191.32,-1261.29 1199.92,-1255.1 1189.34,-1254.57 1191.32,-1261.29"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet().</title>
<g id="a_node82"><a xlink:title=" &#160;&#160;&#160;fn squeeze_and_ratchet(&amp;mut self, outlen: usize) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut out = vec![0; outlen]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut out); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;out &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1341.5,-477 1177.5,-477 1177.5,-441 1341.5,-441 1341.5,-477"/>
<text text-anchor="middle" x="1259.5" y="-455.3" font-family="Helvetica,sans-Serif" font-size="14.00">squeeze_and_ratchet</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<g id="a_node83"><a xlink:title=" &#160;&#160;&#160;fn absorb_and_ratchet(&amp;mut self, input: &amp;[u8]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.absorb(input); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.ratchet(); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1336.5,-531 1182.5,-531 1182.5,-495 1336.5,-495 1336.5,-531"/>
<text text-anchor="middle" x="1259.5" y="-509.3" font-family="Helvetica,sans-Serif" font-size="14.00">absorb_and_ratchet</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array().</title>
<g id="a_node84"><a xlink:title=" &#160;&#160;&#160;fn squeeze_and_ratchet_as_array&lt;const N: usize&gt;(&amp;mut self) &#45;&gt; [u8; N] { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut out = [0; N]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut out); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;out &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1374,-585 1145,-585 1145,-549 1374,-549 1374,-585"/>
<text text-anchor="middle" x="1259.5" y="-563.3" font-family="Helvetica,sans-Serif" font-size="14.00">squeeze_and_ratchet_as_array</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<g id="a_node85"><a xlink:title=" &#160;&#160;&#160;fn new(label: &amp;[u8]) &#45;&gt; ShoHmacSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = ShoHmacSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hasher: Hmac::&lt;Sha256&gt;::new_from_slice(&amp;[0; HASH_LEN]) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; HMAC accepts 256&#45;bit keys...">
<polygon fill="white" stroke="black" points="1012,-706 958,-706 958,-670 1012,-670 1012,-706"/>
<text text-anchor="middle" x="985" y="-684.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M1012.26,-689.9C1042.08,-690.51 1090.09,-686.5 1117,-658 1153.52,-619.33 1100.35,-578.56 1137,-540 1146.64,-529.85 1159.19,-523.11 1172.54,-518.71"/>
<polygon fill="gray" stroke="gray" points="1173.73,-522.01 1182.38,-515.89 1171.81,-515.28 1173.73,-522.01"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<g id="a_node86"><a xlink:title=" &#160;&#160;&#160;fn ratchet(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let Mode::RATCHETED = self.mode { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.hasher.update(&amp;[0x00]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.cv &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.copy_from_slice(&amp;self.hasher.cl...">
<polygon fill="white" stroke="black" points="1018,-814 952,-814 952,-778 1018,-778 1018,-814"/>
<text text-anchor="middle" x="985" y="-792.3" font-family="Helvetica,sans-Serif" font-size="14.00">ratchet</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<g id="a_node87"><a xlink:title=" &#160;&#160;&#160;fn absorb(&amp;mut self, input: &amp;[u8]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let Mode::RATCHETED = self.mode { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.hasher = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Hmac::&lt;Sha256&gt;::new_from_slice(&amp;self.cv).expect(&#39; HMAC accepts 256&#45;bit k...">
<polygon fill="white" stroke="black" points="1017.5,-760 952.5,-760 952.5,-724 1017.5,-724 1017.5,-760"/>
<text text-anchor="middle" x="985" y="-738.3" font-family="Helvetica,sans-Serif" font-size="14.00">absorb</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().</title>
<g id="a_node88"><a xlink:title=" &#160;&#160;&#160;fn new(label: &amp;[u8]) &#45;&gt; ShoSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = ShoSha256 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hasher: Sha256::new(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cv: [0; HASH_LEN], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mode: Mode::RATCHETED, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho.ab...">
<polygon fill="white" stroke="black" points="1012,-623 958,-623 958,-587 1012,-587 1012,-623"/>
<text text-anchor="middle" x="985" y="-601.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge153" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M1012.15,-591.95C1041.81,-577.57 1091.92,-554.57 1137,-540 1148.32,-536.34 1160.4,-533.01 1172.38,-530.03"/>
<polygon fill="gray" stroke="gray" points="1173.5,-533.35 1182.4,-527.61 1171.86,-526.55 1173.5,-533.35"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points().</title>
<g id="a_node89"><a xlink:title=" &#160;&#160;&#160;fn sort_points(&amp;self, point_args: &amp;PointArgs) &#45;&gt; Result&lt;Vec&lt;RistrettoPoint&gt;, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if point_args.0.len() != self.point_vec.len() &#45; 1 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(BadArgsWrongNumberOfP...">
<polygon fill="white" stroke="black" points="1031.5,-2503 938.5,-2503 938.5,-2467 1031.5,-2467 1031.5,-2503"/>
<text text-anchor="middle" x="985" y="-2481.3" font-family="Helvetica,sans-Serif" font-size="14.00">sort_points</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point().</title>
<g id="a_node90"><a xlink:title=" &#160;&#160;&#160;fn add_point( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_name: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;PointIndex, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let point_name = point_name.into(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match self.point_m...">
<polygon fill="white" stroke="black" points="773.5,-2594 688.5,-2594 688.5,-2558 773.5,-2558 773.5,-2594"/>
<text text-anchor="middle" x="731" y="-2572.3" font-family="Helvetica,sans-Serif" font-size="14.00">add_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new().</title>
<g id="a_node91"><a xlink:title=" &#160;&#160;&#160;pub fn new() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut point_map = HashMap::new(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_map.insert(&#39; G&#39; .into(), 0); // G is base point &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let point_vec = vec![&#39; G&#39; .into()]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Statement { &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="523.5,-2426 469.5,-2426 469.5,-2390 523.5,-2390 523.5,-2426"/>
<text text-anchor="middle" x="496.5" y="-2404.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<g id="a_node92"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof_bytes: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let proof = Proof::from_slice(pro...">
<polygon fill="white" stroke="black" points="780,-2480 682,-2480 682,-2444 780,-2444 780,-2480"/>
<text text-anchor="middle" x="731" y="-2458.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes().</title>
<path fill="none" stroke="gray" d="M780.08,-2457.63C798.26,-2453.94 818.13,-2447.21 833,-2435 854.81,-2417.08 840.55,-2397.46 861,-2378 882.27,-2357.77 912.47,-2344.6 937.62,-2336.45"/>
<polygon fill="gray" stroke="gray" points="938.81,-2339.75 947.34,-2333.47 936.75,-2333.06 938.81,-2339.75"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M780.1,-2460.47C799.29,-2457.29 819.9,-2450.19 833,-2435 904.58,-2352.01 787.57,-2271.36 861,-2190 878.96,-2170.1 907.93,-2163.07 933.24,-2161.14"/>
<polygon fill="gray" stroke="gray" points="933.65,-2164.63 943.46,-2160.62 933.3,-2157.64 933.65,-2164.63"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" d="M780.25,-2461.11C799.72,-2458.08 820.49,-2450.91 833,-2435 874.7,-2381.97 823.28,-1276.93 861,-1221 952.58,-1085.21 1445.91,-996.51 1585,-1083 1615.72,-1102.1 1592.89,-1133.22 1621,-1156 1622.55,-1157.26 1624.15,-1158.45 1625.79,-1159.6"/>
<polygon fill="gray" stroke="gray" points="1624.01,-1162.61 1634.36,-1164.86 1627.67,-1156.64 1624.01,-1162.61"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().</title>
<path fill="none" stroke="gray" d="M780.23,-2460.84C799.57,-2457.75 820.25,-2450.6 833,-2435 865.67,-2395 854.74,-2022.27 861,-1971 891.45,-1721.48 956.82,-1424.25 977.55,-1333"/>
<polygon fill="gray" stroke="gray" points="980.99,-1333.68 979.8,-1323.15 974.16,-1332.12 980.99,-1333.68"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M780.03,-2461.18C799.58,-2458.18 820.48,-2451.01 833,-2435 886.33,-2366.81 802.63,-940.93 861,-877 899.58,-834.74 1077.44,-890.35 1117,-849 1164.57,-799.28 1092.23,-592.26 1137,-540 1146.28,-529.17 1158.84,-522.13 1172.39,-517.65"/>
<polygon fill="gray" stroke="gray" points="1173.72,-520.91 1182.39,-514.82 1171.81,-514.17 1173.72,-520.91"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array().</title>
<path fill="none" stroke="gray" d="M780.26,-2461.11C799.72,-2458.09 820.5,-2450.91 833,-2435 875.71,-2380.65 837.09,-1255.86 861,-1191 923.29,-1022.06 1021.95,-1029.93 1117,-877 1177.86,-779.08 1228.06,-650.61 1248.56,-594.84"/>
<polygon fill="gray" stroke="gray" points="1251.9,-595.89 1252.04,-585.29 1245.32,-593.49 1251.9,-595.89"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M780.04,-2461.19C799.59,-2458.19 820.49,-2451.02 833,-2435 891.82,-2359.67 800.5,-788.98 861,-715 881.43,-690.01 919.21,-684.87 947.53,-684.99"/>
<polygon fill="gray" stroke="gray" points="947.77,-688.49 957.86,-685.26 947.96,-681.5 947.77,-688.49"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<path fill="none" stroke="gray" d="M780.03,-2461.18C799.58,-2458.18 820.48,-2451.01 833,-2435 887.28,-2365.58 811.91,-922.19 861,-849 879.05,-822.08 913.91,-808.77 941.92,-802.22"/>
<polygon fill="gray" stroke="gray" points="942.83,-805.6 951.89,-800.1 941.38,-798.76 942.83,-805.6"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<path fill="none" stroke="gray" d="M780.04,-2461.19C799.59,-2458.19 820.49,-2451.02 833,-2435 889.99,-2362.05 802.38,-840.64 861,-769 880.15,-745.59 914.52,-739.6 942.07,-739.03"/>
<polygon fill="gray" stroke="gray" points="942.24,-742.53 952.24,-739.06 942.25,-735.53 942.24,-742.53"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points().</title>
<path fill="none" stroke="gray" d="M780.29,-2466.41C822.59,-2470.27 884.05,-2475.88 928.39,-2479.92"/>
<polygon fill="gray" stroke="gray" points="928.14,-2483.42 938.42,-2480.84 928.78,-2476.45 928.14,-2483.42"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes(). -->
<g id="node93" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes().</title>
<g id="a_node93"><a xlink:title=" &#160;&#160;&#160;fn to_bytes(&amp;self) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let equation_count = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;u8::try_from(self.equations.len()).expect(&#39; number of equations fits in a byte&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_count = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;u...">
<polygon fill="white" stroke="black" points="1022.5,-2449 947.5,-2449 947.5,-2413 1022.5,-2413 1022.5,-2449"/>
<text text-anchor="middle" x="985" y="-2427.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes().</title>
<path fill="none" stroke="gray" d="M780.29,-2456.06C825.5,-2450.5 892.62,-2442.24 937.3,-2436.74"/>
<polygon fill="gray" stroke="gray" points="937.82,-2440.21 947.32,-2435.51 936.97,-2433.26 937.82,-2440.21"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="node98" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<g id="a_node98"><a xlink:title=" &#160;&#160;&#160;fn homomorphism_with_subtraction( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;g1: &amp;[Scalar], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all_points: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;challenge: Option&lt;Scalar&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; G2 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.equations &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="1109,-2557 861,-2557 861,-2521 1109,-2521 1109,-2557"/>
<text text-anchor="middle" x="985" y="-2535.3" font-family="Helvetica,sans-Serif" font-size="14.00">homomorphism_with_subtraction</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="gray" d="M773.84,-2480.1C798.81,-2490.43 831.34,-2503.05 861,-2512 868.59,-2514.29 876.5,-2516.47 884.48,-2518.53"/>
<polygon fill="gray" stroke="gray" points="883.68,-2521.94 894.24,-2520.98 885.39,-2515.15 883.68,-2521.94"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar(). -->
<g id="node94" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar().</title>
<g id="a_node94"><a xlink:title=" &#160;&#160;&#160;fn add_scalar( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_name: impl Into&lt;Cow&lt;&#39;static, str&gt;&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ScalarIndex, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_name = scalar_name.into(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match self.sc...">
<polygon fill="white" stroke="black" points="776.5,-2648 685.5,-2648 685.5,-2612 776.5,-2612 776.5,-2648"/>
<text text-anchor="middle" x="731" y="-2626.3" font-family="Helvetica,sans-Serif" font-size="14.00">add_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add(). -->
<g id="node95" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().</title>
<g id="a_node95"><a xlink:title=" &#160;&#160;&#160;pub fn add(&amp;mut self, lhs_str: &amp;str, rhs_pairs: &amp;[(&amp;str, &amp;str)]) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (lhs_str.is_empty()) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| (rhs_pairs.is_empty()) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| (rhs_pairs.len() &gt; 255) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|| (self...">
<polygon fill="white" stroke="black" points="523.5,-2534 469.5,-2534 469.5,-2498 523.5,-2498 523.5,-2534"/>
<text text-anchor="middle" x="496.5" y="-2512.3" font-family="Helvetica,sans-Serif" font-size="14.00">add</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point().</title>
<path fill="none" stroke="gray" d="M523.72,-2522.77C561.08,-2532.41 630.42,-2550.3 678.33,-2562.66"/>
<polygon fill="gray" stroke="gray" points="677.65,-2566.1 688.2,-2565.21 679.4,-2559.33 677.65,-2566.1"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar().</title>
<path fill="none" stroke="gray" d="M521.62,-2534.3C548.17,-2553.7 592.71,-2584.09 635,-2603 647.72,-2608.69 661.94,-2613.49 675.42,-2617.39"/>
<polygon fill="gray" stroke="gray" points="674.51,-2620.76 685.08,-2620.07 676.38,-2614.02 674.51,-2620.76"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="node96" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<g id="a_node96"><a xlink:title=" &#160;&#160;&#160;pub fn prove( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_args: &amp;ScalarArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: &amp;[u8], // must be 32 bytes &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Vec&lt;u8&gt;, Poksh...">
<polygon fill="white" stroke="black" points="524.5,-2480 468.5,-2480 468.5,-2444 524.5,-2444 524.5,-2480"/>
<text text-anchor="middle" x="496.5" y="-2458.3" font-family="Helvetica,sans-Serif" font-size="14.00">prove</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.66,-2461.77C549.18,-2460.21 584.99,-2454.41 609,-2435 629.72,-2418.25 613.64,-2396.92 635,-2381 725.15,-2313.8 865.05,-2314.11 937.29,-2319.71"/>
<polygon fill="gray" stroke="gray" points="937.19,-2323.22 947.45,-2320.57 937.78,-2316.24 937.19,-2323.22"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M524.82,-2463.04C550.15,-2462.45 587.14,-2457.36 609,-2435 646.85,-2396.29 602.73,-2359.47 635,-2316 703.55,-2223.67 753.47,-2230.76 861,-2190 884.05,-2181.26 910.65,-2174.99 933.2,-2170.7"/>
<polygon fill="gray" stroke="gray" points="934.05,-2174.1 943.26,-2168.86 932.79,-2167.21 934.05,-2174.1"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.73,-2463.84C550.74,-2463.95 588.88,-2459.45 609,-2435 650.91,-2384.07 600.75,-1898.36 635,-1842 687.74,-1755.23 779.77,-1814.47 833,-1728 892.15,-1631.91 788.54,-1307.5 861,-1221 948.01,-1117.14 1126.9,-1117.12 1211.8,-1123.75"/>
<polygon fill="gray" stroke="gray" points="1211.66,-1127.25 1221.92,-1124.61 1212.25,-1120.28 1211.66,-1127.25"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" d="M524.76,-2463.87C550.81,-2464 588.96,-2459.52 609,-2435 658.73,-2374.12 607.07,-1801.48 635,-1728 684.14,-1598.74 781.35,-1616.27 833,-1488 863.71,-1411.72 808.4,-1182.22 861,-1119 939.74,-1024.37 1286.9,-1045.23 1410,-1045 1487.78,-1044.86 1522.09,-999.27 1585,-1045 1626.95,-1075.5 1583.17,-1120.52 1621,-1156 1622.13,-1157.06 1623.29,-1158.07 1624.48,-1159.05"/>
<polygon fill="gray" stroke="gray" points="1622.6,-1162.01 1632.78,-1164.96 1626.66,-1156.31 1622.6,-1162.01"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.88,-2463.55C550.62,-2463.38 588.23,-2458.64 609,-2435 644.12,-2395.04 618.83,-2247.69 635,-2197 689.9,-2024.89 783.21,-2015.66 833,-1842 850.29,-1781.69 820.48,-1325.9 861,-1278 879.32,-1256.34 910.68,-1249.7 937.14,-1248.42"/>
<polygon fill="gray" stroke="gray" points="937.47,-1251.91 947.38,-1248.17 937.3,-1244.92 937.47,-1251.91"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet().</title>
<path fill="none" stroke="gray" d="M524.88,-2463.96C551.01,-2464.16 589.23,-2459.74 609,-2435 668.31,-2360.78 592.21,-809.83 635,-725 684.85,-626.19 766.46,-662.43 833,-574 853.64,-546.56 833.75,-522.88 861,-502 948.18,-435.19 1079.46,-434.55 1167.01,-443.79"/>
<polygon fill="gray" stroke="gray" points="1166.87,-447.3 1177.19,-444.94 1167.65,-440.34 1166.87,-447.3"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M524.87,-2463.96C551,-2464.16 589.22,-2459.73 609,-2435 665.7,-2364.1 582.98,-875.41 635,-801 689.01,-723.75 773.84,-798.38 833,-725 884.36,-661.28 800.94,-598.59 861,-543 904.69,-502.57 1069.14,-502.93 1172.34,-507.51"/>
<polygon fill="gray" stroke="gray" points="1172.29,-511.02 1182.44,-507.98 1172.61,-504.02 1172.29,-511.02"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array().</title>
<path fill="none" stroke="gray" d="M524.87,-2463.96C550.99,-2464.15 589.21,-2459.72 609,-2435 663.09,-2367.41 585.37,-947.93 635,-877 689.04,-799.77 774.93,-875.25 833,-801 895.36,-721.28 785.84,-642.78 861,-575 900,-539.83 1033.11,-543.64 1134.65,-552.53"/>
<polygon fill="gray" stroke="gray" points="1134.41,-556.02 1144.68,-553.43 1135.03,-549.05 1134.41,-556.02"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M524.85,-2463.94C550.96,-2464.13 589.17,-2459.69 609,-2435 654.54,-2378.28 610.34,-1194.43 635,-1126 682.93,-992.98 775.16,-1006.02 833,-877 862.89,-810.33 810.51,-767.81 861,-715 883.1,-691.88 920.12,-686.37 947.78,-685.89"/>
<polygon fill="gray" stroke="gray" points="947.86,-689.39 957.87,-685.93 947.89,-682.39 947.86,-689.39"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<path fill="none" stroke="gray" d="M524.77,-2463.88C550.82,-2464.01 588.98,-2459.54 609,-2435 634.83,-2403.34 625.94,-1739.84 635,-1700 683.75,-1485.75 780.53,-1460.37 833,-1247 854.17,-1160.9 809.69,-921.31 861,-849 879.69,-822.65 914.33,-809.29 942.09,-802.58"/>
<polygon fill="gray" stroke="gray" points="942.96,-805.98 951.97,-800.4 941.45,-799.14 942.96,-805.98"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<path fill="none" stroke="gray" d="M524.84,-2463.94C550.94,-2464.11 589.15,-2459.67 609,-2435 650.38,-2383.57 602.08,-1304.22 635,-1247 686.43,-1157.61 779.07,-1213.91 833,-1126 874.61,-1058.17 808.74,-829.01 861,-769 880.8,-746.27 914.95,-740.19 942.25,-739.42"/>
<polygon fill="gray" stroke="gray" points="942.36,-742.92 952.34,-739.36 942.32,-735.92 942.36,-742.92"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points().</title>
<path fill="none" stroke="gray" d="M524.75,-2466.35C547.75,-2470.54 581.26,-2477.91 609,-2489 621.39,-2493.95 622.11,-2500.55 635,-2504 735.84,-2531 858.76,-2513.13 928.54,-2498.5"/>
<polygon fill="gray" stroke="gray" points="929.4,-2501.9 938.45,-2496.38 927.93,-2495.06 929.4,-2501.9"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="gray" d="M524.63,-2462C560.45,-2462 624.49,-2462 671.56,-2462"/>
<polygon fill="gray" stroke="gray" points="671.64,-2465.5 681.64,-2462 671.63,-2458.5 671.64,-2465.5"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes().</title>
<path fill="none" stroke="gray" d="M524.66,-2468.95C552.23,-2475.63 596.26,-2485.23 635,-2489 678.79,-2493.26 792.79,-2506.87 833,-2489 849.97,-2481.46 844.95,-2467.32 861,-2458 884.16,-2444.55 913.32,-2437.79 937.43,-2434.4"/>
<polygon fill="gray" stroke="gray" points="937.94,-2437.86 947.43,-2433.14 937.07,-2430.92 937.94,-2437.86"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars(). -->
<g id="node97" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars().</title>
<g id="a_node97"><a xlink:title=" &#160;&#160;&#160;fn sort_scalars(&amp;self, scalar_args: &amp;ScalarArgs) &#45;&gt; Result&lt;G1, PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if scalar_args.0.len() != self.scalar_vec.len() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(BadArgsWrongNumberOfScalarArgs); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="780.5,-2426 681.5,-2426 681.5,-2390 780.5,-2390 780.5,-2426"/>
<text text-anchor="middle" x="731" y="-2404.3" font-family="Helvetica,sans-Serif" font-size="14.00">sort_scalars</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars().</title>
<path fill="none" stroke="gray" d="M524.63,-2455.7C560.41,-2447.39 624.36,-2432.54 671.42,-2421.61"/>
<polygon fill="gray" stroke="gray" points="672.24,-2425.01 681.19,-2419.34 670.66,-2418.19 672.24,-2425.01"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="gray" d="M524.75,-2464.29C548.36,-2467.24 582.74,-2473.93 609,-2489 623.45,-2497.29 619.89,-2508.98 635,-2516 672.47,-2533.41 768.71,-2538.81 850.66,-2540.05"/>
<polygon fill="gray" stroke="gray" points="850.78,-2543.55 860.83,-2540.18 850.88,-2536.55 850.78,-2543.55"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge159" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M862.2,-2520.97C856.11,-2516.09 850.92,-2510.17 847,-2503 836.56,-2483.89 836.56,-2326.11 847,-2307 859.68,-2283.78 885.81,-2273.67 911.96,-2269.77"/>
<polygon fill="gray" stroke="gray" points="912.45,-2273.24 921.96,-2268.57 911.61,-2266.29 912.45,-2273.24"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="node99" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<g id="a_node99"><a xlink:title="fn endorsement_flow(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut group = c.benchmark_group(&#39; endorsements&#39; ); &#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;let inputs: Vec&lt;RistrettoPoint&gt; = (0.....">
<polygon fill="lightblue" stroke="black" points="160,-1232 16,-1232 16,-1196 160,-1196 160,-1232"/>
<text text-anchor="middle" x="88" y="-1210.3" font-family="Helvetica,sans-Serif" font-size="14.00">endorsement_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="gray" d="M94.33,-1195.84C105.88,-1159.24 136.41,-1075.82 188,-1025 292.98,-921.58 348.14,-901 495.5,-901 495.5,-901 495.5,-901 732,-901 921.64,-901 1416.4,-789.19 1585,-876 1655.51,-912.31 1698.75,-1001.64 1716.95,-1047.24"/>
<polygon fill="gray" stroke="gray" points="1713.78,-1048.74 1720.66,-1056.8 1720.31,-1046.21 1713.78,-1048.74"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M89.34,-1195.93C91.44,-1103.18 105.49,-681.37 188,-587 250.29,-515.76 300.01,-548.2 392,-526 705.97,-450.22 802.65,-401.79 1117,-476 1126.67,-478.28 1127.63,-482.67 1137,-486 1148.22,-489.98 1160.23,-493.5 1172.18,-496.57"/>
<polygon fill="gray" stroke="gray" points="1171.63,-500.04 1182.18,-499.04 1173.31,-493.25 1171.63,-500.04"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M91.34,-1195.74C98.62,-1144 124.3,-993.35 188,-887 253.89,-777 275.98,-737.6 392,-683 569.58,-599.42 637.56,-642.03 833,-660 872.54,-663.64 917.19,-672.52 947.61,-679.31"/>
<polygon fill="gray" stroke="gray" points="947.22,-682.81 957.75,-681.62 948.77,-675.99 947.22,-682.81"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M90.09,-1195.75C95.39,-1113.26 120.9,-775.93 188,-699 386.4,-471.54 820.03,-562.04 947.85,-594.99"/>
<polygon fill="gray" stroke="gray" points="947.34,-598.47 957.9,-597.63 949.11,-591.7 947.34,-598.47"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key(). -->
<g id="node100" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key().</title>
<g id="a_node100"><a xlink:title=" &#160;&#160;&#160;pub fn public_key(&amp;self) &#45;&gt; &amp;ServerRootPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self.public &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="320.5,-1610 231.5,-1610 231.5,-1574 320.5,-1574 320.5,-1610"/>
<text text-anchor="middle" x="276" y="-1588.3" font-family="Helvetica,sans-Serif" font-size="14.00">public_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key().</title>
<path fill="none" stroke="gray" d="M88.48,-1232.21C87.85,-1289.56 93.89,-1468.41 188,-1565 196.97,-1574.21 209.01,-1580.29 221.27,-1584.3"/>
<polygon fill="gray" stroke="gray" points="220.52,-1587.73 231.1,-1587.1 222.44,-1580.99 220.52,-1587.73"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token(). -->
<g id="node101" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().</title>
<g id="a_node101"><a xlink:title=" &#160;&#160;&#160;pub fn to_token(&amp;self, client_key: &amp;ClientDecryptionKey) &#45;&gt; Box&lt;[u8]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = self.R * client_key.a_inv; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::to_token_raw(P) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="313.5,-1502 238.5,-1502 238.5,-1466 313.5,-1466 313.5,-1502"/>
<text text-anchor="middle" x="276" y="-1480.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_token</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().</title>
<path fill="none" stroke="gray" d="M91.12,-1232.23C97.32,-1277.17 119.53,-1394.17 188,-1457 199.17,-1467.25 214.18,-1473.61 228.58,-1477.56"/>
<polygon fill="gray" stroke="gray" points="227.86,-1480.98 238.4,-1479.92 229.5,-1474.18 227.86,-1480.98"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node102" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node102"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="303,-1394 249,-1394 249,-1358 303,-1358 303,-1394"/>
<text text-anchor="middle" x="276" y="-1372.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="gray" d="M97.52,-1232.19C112.02,-1261.18 144.22,-1317.78 188,-1349 202.93,-1359.65 222.18,-1366.19 238.77,-1370.16"/>
<polygon fill="gray" stroke="gray" points="238.19,-1373.61 248.7,-1372.31 239.67,-1366.77 238.19,-1373.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="node103" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<g id="a_node103"><a xlink:title=" &#160;&#160;&#160;pub fn from_blinding_scalar(scalar: Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a_inv: scalar.invert(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="356,-1286 196,-1286 196,-1250 356,-1250 356,-1286"/>
<text text-anchor="middle" x="276" y="-1264.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_blinding_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="gray" d="M151.19,-1232.06C167.79,-1236.87 185.86,-1242.12 202.94,-1247.08"/>
<polygon fill="gray" stroke="gray" points="202.29,-1250.53 212.86,-1249.96 204.24,-1243.81 202.29,-1250.53"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="node104" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<g id="a_node104"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ReceivedEndorsements, V...">
<polygon fill="white" stroke="black" points="309,-1340 243,-1340 243,-1304 309,-1304 309,-1340"/>
<text text-anchor="middle" x="276" y="-1318.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="gray" d="M106.77,-1232.19C125.47,-1250.4 156.51,-1278.07 188,-1295 201.92,-1302.48 218.23,-1308.24 232.94,-1312.48"/>
<polygon fill="gray" stroke="gray" points="232.26,-1315.92 242.83,-1315.17 234.1,-1309.16 232.26,-1315.92"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="node105" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<g id="a_node105"><a xlink:title=" &#160;&#160;&#160;pub fn derive_key(&amp;self, mut tag_info: impl ShoApi) &#45;&gt; ServerDerivedKeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let t = tag_info.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ServerDerivedKeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sk_prime: (self.sk + t).invert(), &#160;&#160;...">
<polygon fill="white" stroke="black" points="321.5,-1448 230.5,-1448 230.5,-1412 321.5,-1412 321.5,-1448"/>
<text text-anchor="middle" x="276" y="-1426.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="gray" d="M93.42,-1232.05C103.53,-1269.55 131.94,-1356.29 188,-1403 197.3,-1410.75 208.82,-1416.28 220.4,-1420.22"/>
<polygon fill="gray" stroke="gray" points="219.51,-1423.61 230.09,-1423.18 221.55,-1416.91 219.51,-1423.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="node109" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<g id="a_node109"><a xlink:title=" &#160;&#160;&#160;pub fn derive_key(&amp;self, mut tag_info: impl ShoApi) &#45;&gt; ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let t = tag_info.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.derive_key_from_tag_scalar(&amp;t) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="321.5,-1556 230.5,-1556 230.5,-1520 321.5,-1520 321.5,-1556"/>
<text text-anchor="middle" x="276" y="-1534.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="gray" d="M89.58,-1232.32C92.22,-1283.86 106.84,-1431.52 188,-1511 197,-1519.82 208.83,-1525.76 220.86,-1529.77"/>
<polygon fill="gray" stroke="gray" points="219.91,-1533.14 230.49,-1532.58 221.87,-1526.42 219.91,-1533.14"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="node111" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<g id="a_node111"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: [u8; RANDOMNESS_LEN]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = poksho::ShoHmacSha256::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKCredential_Endorsements_ServerRootKeyPair_generate_20240207&#39; ,...">
<polygon fill="white" stroke="black" points="315.5,-1232 236.5,-1232 236.5,-1196 315.5,-1196 315.5,-1232"/>
<text text-anchor="middle" x="276" y="-1210.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="gray" d="M160.11,-1214C182.21,-1214 206.05,-1214 226.26,-1214"/>
<polygon fill="gray" stroke="gray" points="226.47,-1217.5 236.47,-1214 226.47,-1210.5 226.47,-1217.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify(). -->
<g id="node113" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().</title>
<g id="a_node113"><a xlink:title=" &#160;&#160;&#160;pub fn verify(&amp;self, point: &amp;RistrettoPoint, token: &amp;[u8]) &#45;&gt; Result&lt;(), VerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let P = self.sk_prime * point; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let expected = Endorsement::to_token_raw(P); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="304,-1178 248,-1178 248,-1142 304,-1142 304,-1178"/>
<text text-anchor="middle" x="276" y="-1156.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().</title>
<path fill="none" stroke="gray" d="M151.19,-1195.94C179.97,-1187.59 213.18,-1177.95 237.95,-1170.76"/>
<polygon fill="gray" stroke="gray" points="239.05,-1174.08 247.68,-1167.93 237.1,-1167.36 239.05,-1174.08"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="node114" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<g id="a_node114"><a xlink:title=" &#160;&#160;&#160;fn get_scalar(&amp;mut self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut scalar_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut scalar_bytes); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar::from_bytes_mod_order_wide(&amp;scalar_bytes) &#160;&#160;...">
<polygon fill="white" stroke="black" points="540,-1095 453,-1095 453,-1059 540,-1059 540,-1095"/>
<text text-anchor="middle" x="496.5" y="-1073.3" font-family="Helvetica,sans-Serif" font-size="14.00">get_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M104.86,-1195.67C122.92,-1176.09 154.31,-1145.75 188,-1130 271.33,-1091.06 379.4,-1080.46 442.73,-1077.73"/>
<polygon fill="gray" stroke="gray" points="443.02,-1081.23 452.88,-1077.35 442.75,-1074.23 443.02,-1081.23"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point(). -->
<g id="node115" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().</title>
<g id="a_node115"><a xlink:title=" &#160;&#160;&#160;fn get_point(&amp;mut self) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut point_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut point_bytes); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RistrettoPoint::from_uniform_bytes(&amp;point_byte...">
<polygon fill="white" stroke="black" points="537,-1041 456,-1041 456,-1005 537,-1005 537,-1041"/>
<text text-anchor="middle" x="496.5" y="-1019.3" font-family="Helvetica,sans-Serif" font-size="14.00">get_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().</title>
<path fill="none" stroke="gray" d="M97.25,-1195.65C111.37,-1166.51 143.06,-1110.08 188,-1082 268.13,-1031.93 381.22,-1022.66 445.56,-1021.86"/>
<polygon fill="gray" stroke="gray" points="445.86,-1025.36 455.84,-1021.8 445.82,-1018.36 445.86,-1025.36"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="node107" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<g id="a_node107"><a xlink:title=" &#160;&#160;&#160;fn to_token_raw(unblinded_endorsement: RistrettoPoint) &#45;&gt; Box&lt;[u8]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Skip the Sho for this, we&#39;re hashing a single point into a single bitstring. We don&#39;t &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// need domain separa...">
<polygon fill="white" stroke="black" points="550,-1475 443,-1475 443,-1439 550,-1439 550,-1475"/>
<text text-anchor="middle" x="496.5" y="-1453.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_token_raw</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<path fill="none" stroke="gray" d="M313.57,-1479.48C346.02,-1475.47 394.14,-1469.53 432.73,-1464.76"/>
<polygon fill="gray" stroke="gray" points="433.34,-1468.21 442.83,-1463.51 432.48,-1461.26 433.34,-1468.21"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M303.2,-1377.81C320.95,-1380.51 343.4,-1387.1 356,-1403 406.35,-1466.53 357.67,-1692.57 392,-1766 518.06,-2035.61 600.6,-2099.88 861,-2244 876.43,-2252.54 894.35,-2258.38 911.66,-2262.37"/>
<polygon fill="gray" stroke="gray" points="911.24,-2265.86 921.75,-2264.51 912.7,-2259.01 911.24,-2265.86"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M303,-1378.36C320.43,-1381.32 342.56,-1387.99 356,-1403 405.19,-1457.96 346.11,-1507.26 392,-1565 527.2,-1735.09 710.12,-1596.8 833,-1776 878.38,-1842.18 808.32,-2075.47 861,-2136 878.6,-2156.22 907.55,-2163.26 932.95,-2165.12"/>
<polygon fill="gray" stroke="gray" points="933.05,-2168.63 943.21,-2165.61 933.38,-2161.63 933.05,-2168.63"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add().</title>
<path fill="none" stroke="gray" d="M303.14,-1374.49C321.1,-1371.94 343.83,-1365.42 356,-1349 426.68,-1253.59 317.84,-373.72 392,-281 407.79,-261.26 436.06,-254.88 459.07,-253.23"/>
<polygon fill="gray" stroke="gray" points="459.37,-256.72 469.21,-252.78 459.06,-249.73 459.37,-256.72"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add().</title>
<path fill="none" stroke="gray" d="M303.23,-1374.21C320.99,-1371.52 343.44,-1364.94 356,-1349 409.31,-1281.33 379.98,-1048.31 392,-963 420.2,-762.87 471.39,-524.71 489.19,-444.19"/>
<polygon fill="gray" stroke="gray" points="492.64,-444.83 491.39,-434.31 485.8,-443.32 492.64,-444.83"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new().</title>
<path fill="none" stroke="gray" d="M303.12,-1374.48C321.08,-1371.92 343.8,-1365.4 356,-1349 419.7,-1263.35 325.17,-472.23 392,-389 407.83,-369.29 436.1,-362.9 459.09,-361.25"/>
<polygon fill="gray" stroke="gray" points="459.39,-364.74 469.23,-360.79 459.08,-357.75 459.39,-364.74"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new().</title>
<path fill="none" stroke="gray" d="M303.13,-1374.48C321.09,-1371.93 343.82,-1365.41 356,-1349 423.19,-1258.47 321.5,-422.98 392,-335 407.81,-315.27 436.08,-308.89 459.08,-307.24"/>
<polygon fill="gray" stroke="gray" points="459.38,-310.73 469.22,-306.78 459.07,-303.74 459.38,-310.73"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="gray" d="M303.13,-1377.51C321.1,-1380.06 343.83,-1386.59 356,-1403 424.35,-1495.15 320.28,-2345.44 392,-2435 407.6,-2454.48 435.35,-2460.95 458.2,-2462.7"/>
<polygon fill="gray" stroke="gray" points="458.12,-2466.2 468.28,-2463.2 458.47,-2459.21 458.12,-2466.2"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement(). -->
<g id="node108" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().</title>
<g id="a_node108"><a xlink:title=" &#160;&#160;&#160;fn proof_statement() &#45;&gt; poksho::Statement { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut statement = poksho::Statement::new(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We use a weighted sum where the weights are generated by hashing the inputs (a &#39; random...">
<polygon fill="white" stroke="black" points="561.5,-1407 431.5,-1407 431.5,-1371 561.5,-1371 561.5,-1407"/>
<text text-anchor="middle" x="496.5" y="-1385.3" font-family="Helvetica,sans-Serif" font-size="14.00">proof_statement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().</title>
<path fill="none" stroke="gray" d="M303.36,-1377.57C332.34,-1379.29 380.21,-1382.14 420.91,-1384.56"/>
<polygon fill="gray" stroke="gray" points="420.9,-1388.07 431.09,-1385.17 421.32,-1381.08 420.9,-1388.07"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="node112" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<g id="a_node112"><a xlink:title=" &#160;&#160;&#160;fn generate_weights_for_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;E: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: &amp;[CompressedRistretto], &#160;&#160;&#160;&#160;) &#45;&gt; Vec&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(E.len()...">
<polygon fill="white" stroke="black" points="601,-1218 392,-1218 392,-1182 601,-1182 601,-1218"/>
<text text-anchor="middle" x="496.5" y="-1196.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate_weights_for_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="gray" d="M303.29,-1372.12C319.96,-1368.52 341.12,-1361.7 356,-1349 382.01,-1326.8 370.05,-1307.22 392,-1281 410.66,-1258.7 436.39,-1238.53 457.53,-1223.89"/>
<polygon fill="gray" stroke="gray" points="459.66,-1226.68 465.97,-1218.17 455.73,-1220.88 459.66,-1226.68"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="gray" d="M346.57,-1249.9C350.06,-1247.32 353.25,-1244.37 356,-1241 434.84,-1144.53 301,-1048.09 392,-963 452.58,-906.36 1054.1,-919.56 1137,-917 1336.02,-910.86 1403.14,-835.93 1585,-917 1645.24,-943.86 1690.62,-1010.3 1712.5,-1047.91"/>
<polygon fill="gray" stroke="gray" points="1709.57,-1049.84 1717.55,-1056.81 1715.65,-1046.39 1709.57,-1049.84"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]decompress().</title>
<path fill="none" stroke="gray" d="M309.08,-1325.2C325.48,-1328.53 344.38,-1335.29 356,-1349 418.94,-1423.23 345.82,-1479.33 392,-1565 454.38,-1680.72 523.86,-1665.83 609,-1766 725.71,-1903.32 754.61,-1941.73 833,-2104 850.48,-2140.2 831.21,-2163.01 861,-2190 878.14,-2205.53 902.12,-2212.83 924.36,-2216.06"/>
<polygon fill="gray" stroke="gray" points="924.08,-2219.55 934.43,-2217.27 924.92,-2212.6 924.08,-2219.55"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 traits/VartimeMultiscalarMul#vartime_multiscalar_mul().</title>
<path fill="none" stroke="gray" d="M309.02,-1319.54C325.82,-1316.45 345.13,-1309.68 356,-1295 426.87,-1199.32 328.19,-324.53 392,-224 400.16,-211.14 412.51,-201.25 425.86,-193.71"/>
<polygon fill="gray" stroke="gray" points="427.5,-196.8 434.75,-189.08 424.26,-190.59 427.5,-196.8"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add().</title>
<path fill="none" stroke="gray" d="M309.01,-1319.53C325.81,-1316.43 345.12,-1309.66 356,-1295 423.19,-1204.47 321.5,-368.98 392,-281 407.81,-261.27 436.08,-254.89 459.08,-253.24"/>
<polygon fill="gray" stroke="gray" points="459.38,-256.73 469.22,-252.78 459.07,-249.74 459.38,-256.73"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new().</title>
<path fill="none" stroke="gray" d="M309.39,-1319.45C326.1,-1316.32 345.19,-1309.54 356,-1295 419.7,-1209.35 325.17,-418.23 392,-335 407.83,-315.29 436.1,-308.9 459.09,-307.25"/>
<polygon fill="gray" stroke="gray" points="459.39,-310.74 469.23,-306.79 459.08,-303.75 459.39,-310.74"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="gray" d="M309.04,-1324.45C325.85,-1327.54 345.16,-1334.31 356,-1349 434.82,-1455.79 296.74,-2450.57 392,-2543 461.22,-2610.16 516.72,-2571.04 609,-2543 645.13,-2532.02 680.3,-2506.27 703.32,-2486.73"/>
<polygon fill="gray" stroke="gray" points="705.69,-2489.31 710.94,-2480.11 701.1,-2484.03 705.69,-2489.31"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().</title>
<path fill="none" stroke="gray" d="M309.24,-1331.89C340.1,-1341.35 387.64,-1355.93 426.97,-1367.99"/>
<polygon fill="gray" stroke="gray" points="426.19,-1371.41 436.78,-1370.99 428.24,-1364.71 426.19,-1371.41"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="gray" d="M309.31,-1313.11C323.94,-1308.55 341.22,-1302.39 356,-1295 395.9,-1275.05 437.68,-1245.23 465,-1224.33"/>
<polygon fill="gray" stroke="gray" points="467.22,-1227.04 472.99,-1218.16 462.94,-1221.5 467.22,-1227.04"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="gray" d="M321.77,-1424.13C334.71,-1420.21 347.6,-1413.73 356,-1403 412.4,-1331 325.52,-1055.81 392,-993 433.12,-954.15 1353.43,-969.1 1410,-969 1487.78,-968.86 1511.19,-944.49 1585,-969 1632.57,-984.8 1677.1,-1023.42 1703.2,-1049.41"/>
<polygon fill="gray" stroke="gray" points="1700.87,-1052.03 1710.37,-1056.71 1705.86,-1047.13 1700.87,-1052.03"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar(). -->
<g id="node110" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().</title>
<g id="a_node110"><a xlink:title=" &#160;&#160;&#160;fn derive_key_from_tag_scalar(&amp;self, t: &amp;Scalar) &#45;&gt; ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PK_prime: self.PK + RistrettoPoint::mul_base(t), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="600,-1556 393,-1556 393,-1520 600,-1520 600,-1556"/>
<text text-anchor="middle" x="496.5" y="-1534.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key_from_tag_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().</title>
<path fill="none" stroke="gray" d="M321.9,-1442.62C333.32,-1446.56 345.37,-1451.38 356,-1457 373.68,-1466.35 375.08,-1473.34 392,-1484 409.82,-1495.22 430.22,-1506.23 448.17,-1515.35"/>
<polygon fill="gray" stroke="gray" points="446.8,-1518.58 457.31,-1519.94 449.94,-1512.32 446.8,-1518.58"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M321.91,-1423.78C334.7,-1419.84 347.46,-1413.43 356,-1403 433.55,-1308.32 321.46,-1230.01 392,-1130 404.34,-1112.5 424.23,-1100.4 443.29,-1092.24"/>
<polygon fill="gray" stroke="gray" points="444.84,-1095.38 452.83,-1088.43 442.25,-1088.88 444.84,-1095.38"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw(). -->
<g id="node106" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().</title>
<g id="a_node106"><a xlink:title=" &#160;&#160;&#160;pub fn from_raw(sk: Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sk, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public: ServerRootPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PK: RistrettoPoint::mul_base(&amp;sk), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="537,-1326 456,-1326 456,-1290 537,-1290 537,-1326"/>
<text text-anchor="middle" x="496.5" y="-1304.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_raw</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base().</title>
<path fill="none" stroke="gray" d="M537.13,-1317.42C561.54,-1325.28 591.42,-1339.02 609,-1362 646.92,-1411.57 592.35,-1454.44 635,-1500 697.11,-1566.34 775.46,-1480.67 833,-1551 907.82,-1642.46 784.54,-1991.91 861,-2082 878.41,-2102.51 907.5,-2109.54 933.02,-2111.31"/>
<polygon fill="gray" stroke="gray" points="933.18,-2114.82 943.32,-2111.77 933.49,-2107.83 933.18,-2114.82"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<path fill="none" stroke="gray" d="M550.15,-1465.74C618.02,-1478.33 738.55,-1505.24 833,-1551 1118.45,-1689.31 1128.88,-1824.1 1410,-1971 1422.24,-1977.39 1436.13,-1982.9 1449.14,-1987.39"/>
<polygon fill="gray" stroke="gray" points="1448.29,-1990.79 1458.88,-1990.62 1450.49,-1984.15 1448.29,-1990.79"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M550.07,-1471.64C571.16,-1479.99 593.99,-1492.57 609,-1511 638.82,-1547.61 601.46,-1580.77 635,-1614 699.33,-1677.73 774.95,-1592.51 833,-1662 900.65,-1742.98 792.47,-2055.76 861,-2136 878.47,-2156.46 907.56,-2163.49 933.07,-2165.27"/>
<polygon fill="gray" stroke="gray" points="933.22,-2168.78 943.37,-2165.73 933.53,-2161.79 933.22,-2168.78"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]new().</title>
<path fill="none" stroke="gray" d="M431.19,-1399.56C408.91,-1406.73 386.5,-1418.78 374,-1439 350.98,-1476.24 370.56,-1592.36 374,-1636 397.13,-1929.36 468.97,-2279.66 490.4,-2379.94"/>
<polygon fill="gray" stroke="gray" points="487.02,-2380.85 492.54,-2389.89 493.86,-2379.38 487.02,-2380.85"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]add().</title>
<path fill="none" stroke="gray" d="M431.19,-1399.56C408.91,-1406.73 386.5,-1418.78 374,-1439 358.8,-1463.6 358.8,-2455.4 374,-2480 391.33,-2508.05 429.88,-2515.65 459.13,-2517.11"/>
<polygon fill="gray" stroke="gray" points="459.34,-2520.61 469.43,-2517.39 459.53,-2513.62 459.34,-2520.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().</title>
<path fill="none" stroke="gray" d="M321.74,-1538C339.53,-1538 360.87,-1538 382.4,-1538"/>
<polygon fill="gray" stroke="gray" points="382.64,-1541.5 392.64,-1538 382.64,-1534.5 382.64,-1541.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M321.73,-1532.1C334.67,-1528.18 347.56,-1521.7 356,-1511 408.67,-1444.23 344.27,-1200.39 392,-1130 404.12,-1112.12 424.19,-1099.93 443.45,-1091.8"/>
<polygon fill="gray" stroke="gray" points="444.77,-1095.04 452.79,-1088.12 442.21,-1088.52 444.77,-1095.04"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]mul_base().</title>
<path fill="none" stroke="gray" d="M600.04,-1546.78C677.24,-1559.25 778.74,-1589.37 833,-1662 888.99,-1736.94 799.98,-2011.1 861,-2082 878.55,-2102.39 907.64,-2109.42 933.13,-2111.22"/>
<polygon fill="gray" stroke="gray" points="933.27,-2114.73 943.42,-2111.68 933.59,-2107.73 933.27,-2114.73"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet(). -->
<g id="edge176" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet().</title>
<path fill="none" stroke="gray" d="M315.69,-1209.9C330.61,-1206.27 346.36,-1199.52 356,-1187 424.52,-1098.05 325.22,-773.27 392,-683 572.3,-439.27 991.13,-470.65 1172.36,-497.55"/>
<polygon fill="gray" stroke="gray" points="1171.97,-501.03 1182.38,-499.07 1173.02,-494.11 1171.97,-501.03"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge175" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M315.7,-1209.48C330.43,-1205.78 346.05,-1199.08 356,-1187 430.73,-1096.27 340.57,-1030.69 392,-925 459.94,-785.38 492.04,-734.58 635,-674 690.46,-650.5 870.01,-671.9 947.66,-682.67"/>
<polygon fill="gray" stroke="gray" points="947.53,-686.19 957.92,-684.11 948.5,-679.25 947.53,-686.19"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw(). -->
<g id="edge177" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw().</title>
<path fill="none" stroke="gray" d="M315.51,-1226.14C328.5,-1230.51 342.99,-1235.67 356,-1241 388.58,-1254.34 424.36,-1271.58 451.53,-1285.23"/>
<polygon fill="gray" stroke="gray" points="450.26,-1288.51 460.76,-1289.9 453.41,-1282.26 450.26,-1288.51"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge174" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="gray" d="M315.77,-1206.39C329.5,-1202.31 344.4,-1196.16 356,-1187 379.52,-1168.43 369.88,-1150.21 392,-1130 406.91,-1116.37 425.98,-1105.3 443.67,-1096.87"/>
<polygon fill="gray" stroke="gray" points="445.14,-1100.05 452.77,-1092.7 442.22,-1093.69 445.14,-1100.05"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch(). -->
<g id="edge181" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]double_and_compress_batch().</title>
<path fill="none" stroke="gray" d="M536.41,-1218.04C561.33,-1231.7 592.07,-1252.93 609,-1281 650.97,-1350.6 578.9,-1403.2 635,-1462 696.86,-1526.83 774.11,-1432.46 833,-1500 910.22,-1588.56 784.96,-1938.42 861,-2028 863.37,-2030.79 865.96,-2033.34 868.72,-2035.65"/>
<polygon fill="gray" stroke="gray" points="866.8,-2038.58 876.96,-2041.58 870.89,-2032.9 866.8,-2038.58"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes(). -->
<g id="edge179" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[CompressedRistretto]as_bytes().</title>
<path fill="none" stroke="gray" d="M534.5,-1218.01C689.06,-1294.05 1279.84,-1592.95 1382,-1768 1427.91,-1846.66 1352.24,-1900.58 1410,-1971 1419.67,-1982.78 1434.22,-1989.95 1448.65,-1994.3"/>
<polygon fill="gray" stroke="gray" points="1448,-1997.75 1458.56,-1996.89 1449.77,-1990.97 1448,-1997.75"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress(). -->
<g id="edge185" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]compress().</title>
<path fill="none" stroke="gray" d="M536.88,-1218.07C561.84,-1231.69 592.44,-1252.85 609,-1281 657.58,-1363.58 582.87,-1414.61 635,-1495 690.86,-1581.15 780.07,-1526.02 833,-1614 892.89,-1713.54 785.8,-2047.46 861,-2136 878.42,-2156.5 907.51,-2163.53 933.02,-2165.31"/>
<polygon fill="gray" stroke="gray" points="933.18,-2168.82 943.33,-2165.76 933.49,-2161.82 933.18,-2168.82"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge182" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="gray" d="M563.59,-1181.97C635.99,-1163 755.85,-1133.86 861,-1119 1090.4,-1086.58 1150.46,-1093.92 1382,-1102 1387.8,-1102.2 1393.77,-1102.46 1399.79,-1102.76"/>
<polygon fill="gray" stroke="gray" points="1399.77,-1106.27 1409.94,-1103.31 1400.15,-1099.28 1399.77,-1106.27"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet(). -->
<g id="edge184" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet().</title>
<path fill="none" stroke="gray" d="M546.08,-1182C569.26,-1170.75 594.93,-1153.81 609,-1130 660.62,-1042.61 595.19,-767.36 635,-674 692.85,-538.33 725.78,-489.9 861,-431 972,-382.65 1117.01,-413.49 1197.65,-437.85"/>
<polygon fill="gray" stroke="gray" points="1197.05,-441.33 1207.64,-440.93 1199.12,-434.64 1197.05,-441.33"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new(). -->
<g id="edge183" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new().</title>
<path fill="none" stroke="gray" d="M545.96,-1181.93C569.1,-1170.66 594.79,-1153.73 609,-1130 652.03,-1058.15 579.37,-816.61 635,-754 715.03,-663.93 876.2,-672.9 948.03,-682.2"/>
<polygon fill="gray" stroke="gray" points="947.58,-685.67 957.96,-683.56 948.53,-678.74 947.58,-685.67"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet(). -->
<g id="edge180" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet().</title>
<path fill="none" stroke="gray" d="M541.18,-1181.99C564.42,-1170.34 591.7,-1153.03 609,-1130 634.26,-1096.37 612.12,-1074.3 635,-1039 706.37,-928.88 749.33,-917.92 861,-849 886.68,-833.15 917.93,-819.75 942.51,-810.39"/>
<polygon fill="gray" stroke="gray" points="943.77,-813.66 951.91,-806.88 941.32,-807.1 943.77,-813.66"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb(). -->
<g id="edge178" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb().</title>
<path fill="none" stroke="gray" d="M545.39,-1181.89C568.53,-1170.58 594.39,-1153.62 609,-1130 671.26,-1029.36 564.95,-960.38 635,-865 707.73,-765.97 866.58,-746.26 942.28,-742.62"/>
<polygon fill="gray" stroke="gray" points="942.54,-746.11 952.39,-742.21 942.25,-739.12 942.54,-746.11"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq(). -->
<g id="edge186" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo subtle 2.6.0 impl#[`[T]`][ConstantTimeEq]ct_eq().</title>
<path fill="none" stroke="gray" d="M276.77,-1141.73C275.55,-1018.8 273.79,-311.96 392,-141 407.7,-118.29 436.17,-104.72 459.27,-97"/>
<polygon fill="gray" stroke="gray" points="460.61,-100.25 469.12,-93.95 458.54,-93.57 460.61,-100.25"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw(). -->
<g id="edge187" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw().</title>
<path fill="none" stroke="gray" d="M304.06,-1162.22C321.5,-1165.13 343.23,-1171.8 356,-1187 422.27,-1265.89 327.64,-1335.55 392,-1416 402.45,-1429.06 417.66,-1437.98 433.22,-1444.06"/>
<polygon fill="gray" stroke="gray" points="432.32,-1447.45 442.92,-1447.49 434.66,-1440.85 432.32,-1447.45"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" d="M540.03,-1070.33C730.85,-1040.84 1502.28,-926.55 1585,-993 1642.84,-1039.46 1569.39,-1102.71 1621,-1156 1621.79,-1156.82 1622.61,-1157.61 1623.44,-1158.39"/>
<polygon fill="gray" stroke="gray" points="1621.43,-1161.26 1631.43,-1164.73 1625.78,-1155.77 1621.43,-1161.26"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint]from_uniform_bytes().</title>
<path fill="none" stroke="gray" d="M537.02,-1024.72C560.04,-1027.51 588.47,-1034.22 609,-1050 774.27,-1177 754.61,-1268.88 833,-1462 909.6,-1650.72 961.99,-1891.71 978.46,-1972.89"/>
<polygon fill="gray" stroke="gray" points="975.06,-1973.72 980.46,-1982.83 981.92,-1972.34 975.06,-1973.72"/>
</g>
</g>
</svg>
