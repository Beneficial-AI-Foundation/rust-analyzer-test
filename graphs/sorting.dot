digraph call_graph {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue, fontname=Helvetica];
  edge [color=gray];

  subgraph cluster_0 {
    label = "/home/lacra/git_repos/sorting_rs/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo sorting_rs 1.2.10 get_random_vec()." [label="get_random_vec", tooltip="fn get_random_vec(n: usize) -> Vec<usize>  {     let mut rng: StdRng = StdRng::seed_from_u64(42);     let mut vec: Vec<usize> = (0..n).collect();     vec.shuffle(&mut rng);     vec }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bench()." [label="bench", tooltip="fn bench(c: &mut Criterion)  {     let sizes: Vec<usize> = vec![         2, 5, 8, 10, 16, 100, 128, 500, 512, 1000, 1024, 2000, 2048, 8000, 8192,         10_000, 16_000, 16_384, 32_000, 32_768, 50_000..."]
    "rust-analyzer cargo sorting_rs 1.2.10 benches()." [label="benches", tooltip="criterion_group!(benches, bench); criterion_main!(benches);"]
  }
  subgraph cluster_1 {
    label = "/home/lacra/git_repos/sorting_rs/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_max()." [label="heap_max", tooltip="fn heap_max<T: PartialOrd>(input: &mut [T], i: usize, heap_len: usize)  {     let left = 2 * i + 1;     let right = left + 1;      let mut largest = i;     if left < heap_len && input[left] > input[la..."]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_double_len1()." [label="test_selection_double_len1", tooltip="    fn test_selection_double_len1()  {         let mut vector_in = vec![1];         selection_double_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_sort()." [label="quick_sort", tooltip="pub fn quick_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() > 1 {         let pivot = lomuto_partition(input);         quick_sort(&mut input[..pivot]);         quick_sort(&mut input[pivot ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/bingo_sort()." [label="bingo_sort", tooltip="pub fn bingo_sort<T: PartialOrd + Copy>(input: &mut [T])  {     if input.len() < 2 {return;}      let in_len = input.len();      let minmax = get_min_max(input);     let min = minmax[0];     let max =..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/get_min_max()." [label="get_min_max", tooltip="fn get_min_max<T: PartialOrd + Copy>(input: &[T]) -> [T; 2]  {     let mut min = input[0];     let mut max = input[0];     for i in 1..input.len() {         if input[i] < min {min = input[i];}        ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/tests/test_cocktail_empty()." [label="test_cocktail_empty", tooltip="    fn test_cocktail_empty()  {         let mut vector_in:Vec<i32> = vec![];         cocktail_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/get_flag()." [label="get_flag", tooltip="fn get_flag(r: &Vec<usize>, x: usize) -> usize  {     (r[x >> 3] >> (x & 7)) & 1 }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection()." [label="test_selection", tooltip="    fn test_selection()  {         let mut vector_in = vec![11, 20, 21, 40, 11, 60, 5];         selection_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![5, 11, 11, 20, 21, 40, 60]);   ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/sub_sort()." [label="sub_sort", tooltip="fn sub_sort<T: PartialOrd>(input: &mut [T], mode: bool)  {     if input.len() > 1 {         compare_and_swap(input, mode);         let mid_point = input.len() / 2;         sub_sort(&mut input[..mid_po..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_bool()." [label="test_bitonic_bool", tooltip="    fn test_bitonic_bool()  {         let mut vector_in = vec![false, true, false, false, true];         bitonic_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![false, false, false, tru..."]
    "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/tests/test_comb_len1()." [label="test_comb_len1", tooltip="    fn test_comb_len1()  {         let mut vector_in = vec![1];         comb_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/tests/test_cycle_len1()." [label="test_cycle_len1", tooltip="    fn test_cycle_len1()  {         let mut vector_in = vec![1];         cycle_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/tests/test_slow_empty()." [label="test_slow_empty", tooltip="    fn test_slow_empty()  {         let mut vector_in:Vec<i32> = vec![];         slow_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort_lr()." [label="ksort_lr", tooltip="right: usize)  fn ksort_lr<T: PartialOrd + Clone + Copy>(input: &mut [T], left: usize, {     let key = input[left].clone();     // just init it, so no unsafe calls needed, otherwise use of uninit     ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual_longer()." [label="test_quick_dual_longer", tooltip="    fn test_quick_dual_longer()  {         let mut vector_in = [10, 20, 11, 24, 22, 21, 19];         quick_dual_sort(&mut vector_in);         debug_assert_eq!(vector_in, [10, 11, 19, 20, 21, 22, 24]);..."]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_batcher_len1()." [label="test_oddeven_batcher_len1", tooltip="    fn test_oddeven_batcher_len1()  {         let mut vector_in = vec![1];         oddeven_batcher_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_sort()." [label="merge_sort", tooltip="pub fn merge_sort<T: PartialOrd + Copy>(input: &mut [T])  {     if input.len() < 2 {return;}          let len = input.len();     let mid = len / 2;     merge_sort(&mut input[..mid]);     merge_sort(&m..."]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_big()." [label="test_weak_heap_big", tooltip="    fn test_weak_heap_big()  {         let mut array = [10, 20, 11, 24, 22, 21, 19, 9, 7, 8, 6, 5];         weak_heap_sort(&mut array);         debug_assert_eq!(array, [5, 6, 7, 8, 9, 10, 11, 19, 20, ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_up_empty()." [label="test_gnome_up_empty", tooltip="    fn test_gnome_up_empty()  {         let mut vector_in:Vec<i32> = vec![];         gnome_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_empty()." [label="test_selection_empty", tooltip="    fn test_selection_empty()  {         let mut vector_in:Vec<i32> = vec![];         selection_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/impl#[GapSequence]new()." [label="new", tooltip="    fn new(n: usize) -> Self  {         Self { gap: n }     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_len1()." [label="test_weak_heap_len1", tooltip="    fn test_weak_heap_len1()  {         let mut vector_in = vec![1];         weak_heap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort_len1()." [label="test_ksort_len1", tooltip="    fn test_ksort_len1()  {         let mut vector_in = vec![1];         ksort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap()." [label="test_heap", tooltip="    fn test_heap()  {         let mut vector_in = vec![10, 20, 11, 24];         nheap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/tests/test_insertion_empty()." [label="test_insertion_empty", tooltip="    fn test_insertion_empty()  {         let mut vector_in:Vec<i32> = vec![];         insertion_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_up_len1()." [label="test_gnome_up_len1", tooltip="    fn test_gnome_up_len1()  {         let mut vector_in = vec![1];         gnome_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_double_empty()." [label="test_selection_double_empty", tooltip="    fn test_selection_double_empty()  {         let mut vector_in:Vec<i32> = vec![];         selection_double_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_shell_len1()." [label="test_shell_len1", tooltip="    fn test_shell_len1()  {         let mut vector_in = vec![1];         shell_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_len1()." [label="test_heap_len1", tooltip="    fn test_heap_len1()  {         let mut vector_in = vec![1];         heap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/tests/test_bubble_empty()." [label="test_bubble_empty", tooltip="    fn test_bubble_empty()  {         let mut vector_in:Vec<i32> = vec![];         bubble_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/tests/test_pancake_len1()." [label="test_pancake_len1", tooltip="    fn test_pancake_len1()  {         let mut vector_in = vec![1];         pancake_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_merge()." [label="weak_heap_merge", tooltip="i: usize, j: usize)  fn weak_heap_merge<T: PartialOrd>(input: &mut [T], r: &mut Vec<usize>, {     if input[i] < input[j] {         tog_flag(r, j);         input.swap(i, j);     } }"]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/get_child_trees()." [label="get_child_trees", tooltip="fn get_child_trees(i: usize, k: usize) -> [usize; 4]  {     let tr = i - 1;     let kr = k - 2;     let tl = tr - crate::LEO_NUMS[kr];     let kl = k - 1;     [tr, kr, tl, kl] }"]
    "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/comb_sort()." [label="comb_sort", tooltip="pub fn comb_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      let len = input.len();     let inv_shrink: f32 = 1.0 / 1.3;      let mut gap = len;     let mut sorted = len <..."]
    "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort_sorting()." [label="slow_sort_sorting", tooltip="fn slow_sort_sorting<T: PartialOrd>(input: &mut [T], start: usize, end: usize)  {     if start >= end {return;}      let mid = (start + end) / 2;     slow_sort_sorting(input, start, mid);     slow_sor..."]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual_empty()." [label="test_quick_dual_empty", tooltip="    fn test_quick_dual_empty()  {         let mut vector_in:Vec<i32> = vec![];         quick_dual_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome()." [label="test_gnome", tooltip="    fn test_gnome()  {         let mut vector_in = vec![10, 20, 11, 24];         gnome_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_bu_empty()." [label="test_merge_bu_empty", tooltip="    fn test_merge_bu_empty()  {         let mut vector_in:Vec<i32> = vec![];         merge_bottom_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_shell_empty()." [label="test_shell_empty", tooltip="    fn test_shell_empty()  {         let mut vector_in:Vec<i32> = vec![];         shell_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven()." [label="test_oddeven", tooltip="    fn test_oddeven()  {         let mut vector_in = vec![10, 20, 11, 24];         oddeven_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_bu()." [label="test_merge_bu", tooltip="    fn test_merge_bu()  {         let mut vector_in = vec![24, 20, 11, 13, 10];         merge_bottom_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 13, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_bottom_up_sort()." [label="merge_bottom_up_sort", tooltip="pub fn merge_bottom_up_sort<T: PartialOrd + Copy>(input: &mut [T])  {     let mut width = 1;      let mut tmp = input.to_vec();     let len = input.len();      while width < len {         let mut i = ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/tests/test_cocktail()." [label="test_cocktail", tooltip="    fn test_cocktail()  {         let mut vector_in = vec![30, 10, 20, 11, 24, 44, 12, 11];         cocktail_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 11, 12, 20, 24, 30, ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/tests/test_cycle_empty()." [label="test_cycle_empty", tooltip="    fn test_cycle_empty()  {         let mut vector_in:Vec<i32> = vec![];         cycle_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_usize()." [label="test_bitonic_usize", tooltip="    fn test_bitonic_usize()  {         let mut vector_in = vec![10, 20, 11, 24, 15];         bitonic_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 15, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort_sorting()." [label="stooge_sort_sorting", tooltip="end: usize)  fn stooge_sort_sorting<T: PartialOrd>(input: &mut [T], start: usize, {     if input[start] > input[end] {input.swap(start, end);}     if start <= end {         if (end - start + 1) > 2 { ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_up_sort()." [label="gnome_up_sort", tooltip="pub fn gnome_up_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      let mut i = 1;     let mut j = 2;     let in_len = input.len();      while i < in_len {         if input[i..."]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth_01()." [label="test_smooth_01", tooltip="    fn test_smooth_01()  {         let mut vector_in = vec![20, 10, 11, 13, 24, 9, 2, 1, 8];         smooth_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[1, 2, 8, 9, 10, 11, 13, 20, 24])..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/tests/test_bubble()." [label="test_bubble", tooltip="    fn test_bubble()  {         let mut vector_in = vec![30, 10, 20, 11, 24, 44, 12, 11];         bubble_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 11, 12, 20, 24, 30, 44])..."]
    "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/shell_sort()." [label="shell_sort", tooltip="pub fn shell_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}          let len = input.len();     let gaps = GapSequence::new(len);      for gap in gaps {         for i in gap...."]
    "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/tests/test_slow_len1()." [label="test_slow_len1", tooltip="    fn test_slow_len1()  {         let mut vector_in = vec![1];         slow_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/tests/test_pancake()." [label="test_pancake", tooltip="    fn test_pancake()  {         let mut vector_in = vec![10, 20, 11, 24, 15];         pancake_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 15, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_empty()." [label="test_quick_empty", tooltip="    fn test_quick_empty()  {         let mut vector_in:Vec<i32> = vec![];         quick_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_merge()." [label="oddeven_batcher_merge", tooltip="r: usize)  fn oddeven_batcher_merge<T: PartialOrd>(input: &mut [T], start:usize, end:usize, {     let step = r * 2;          if step < end - start {         oddeven_batcher_merge(input, start, end, st..."]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge()." [label="test_merge", tooltip="    fn test_merge()  {         let mut vector_in = vec![10, 20, 11, 13, 24];         merge_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 13, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_correct_gap_sequence()." [label="test_correct_gap_sequence", tooltip="    fn test_correct_gap_sequence()  {         let gaps: Vec<_> = GapSequence::new(10).collect();         debug_assert_eq!(gaps, &[5, 2, 1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_up()." [label="test_gnome_up", tooltip="    fn test_gnome_up()  {         let mut vector_in = vec![10, 20, 11, 24];         gnome_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_char()." [label="test_bitonic_char", tooltip="    fn test_bitonic_char()  {         let mut vector_in = vec!['r', 'u', 's', 't', 'c'];         bitonic_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec!['c', 'r', 's', 't', 'u']);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()." [label="weak_heap_sort", tooltip="pub fn weak_heap_sort<T: PartialOrd>(input: &mut [T])  {     let n = input.len();      if n < 2 {return;}     else {         let mut r = vec![0; (n + 7) / 8];         for i in (1..n).rev() {          ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth_len1()." [label="test_smooth_len1", tooltip="    fn test_smooth_len1()  {         let mut vector_in = vec![1];         smooth_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_double_sort()." [label="selection_double_sort", tooltip="pub fn selection_double_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      let mut left = 0;     let mut right = input.len() - 1;     let mut min = left;     let mut max = l..."]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_len1()." [label="test_oddeven_len1", tooltip="    fn test_oddeven_len1()  {         let mut vector_in = vec![1];         oddeven_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/largest_pancake()." [label="largest_pancake", tooltip="-> usize  fn largest_pancake<T: PartialOrd + Copy>(input: &[T], index: usize) {     let mut pancake = input[index];     let mut largest = index;      for i in 0..index {         if input[i] > pancake ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/tests/test_stooge()." [label="test_stooge", tooltip="    fn test_stooge()  {         let mut vector_in = vec![10, 20, 11, 24];         stooge_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_bottom_up()." [label="test_heap_bottom_up", tooltip="    fn test_heap_bottom_up()  {         let mut array = [10, 20, 11, 24, 22, 21, 19];         heap_bottom_up_sort(&mut array);         debug_assert_eq!(array, [10, 11, 19, 20, 21, 22, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_small()." [label="test_weak_heap_small", tooltip="    fn test_weak_heap_small()  {         let mut vector_in = vec![10, 20, 11, 24, 13];         weak_heap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 13, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_two_elem()." [label="test_quick_two_elem", tooltip="    fn test_quick_two_elem()  {         let mut vector_in = [20, 10];         quick_dual_sort(&mut vector_in);         debug_assert_eq!(vector_in, [10, 20]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/hbu_sift()." [label="hbu_sift", tooltip="fn hbu_sift<T: PartialOrd>(input: &mut [T], start: usize, end: usize)  {     let mut current = hbu_leaf_search(input, start, end);          while input[start] > input[current] {         current = (cur..."]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_len1()." [label="test_merge_len1", tooltip="    fn test_merge_len1()  {         let mut vector_in = vec![1];         merge_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_bottom_up_empty()." [label="test_heap_bottom_up_empty", tooltip="    fn test_heap_bottom_up_empty()  {         let mut vector_in:Vec<i32> = vec![];         heap_bottom_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/tests/test_slow_len1()." [label="test_slow_len1", tooltip="    fn test_slow_len1()  {         let mut vector_in = vec![1];         stooge_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_sort()." [label="oddeven_sort", tooltip="pub fn oddeven_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}          let mut sorted = false;     let in_len = input.len();     while !sorted {         sorted = true;       ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/hbu_leaf_search()." [label="hbu_leaf_search", tooltip="-> usize  fn hbu_leaf_search<T: PartialOrd>(input: &mut [T], start: usize, end: usize) {     let mut current = start;      loop {         let child = current * 2 + 1; // Left leaf          if (child +..."]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_bottom_up_len1()." [label="test_heap_bottom_up_len1", tooltip="    fn test_heap_bottom_up_len1()  {         let mut vector_in = vec![1];         heap_bottom_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/cocktail_sort()." [label="cocktail_sort", tooltip="pub fn cocktail_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      let mut index_st = 0;     let mut index_end = input.len() - 1;      while index_st < index_end {         l..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()." [label="bitonic_sort", tooltip="pub fn bitonic_sort<T: PartialOrd + Default + Clone>(input: &mut Vec<T>)  {     if input.len() < 2 {return;}     else if input.len() > 9223372036854775808 {panic!(' Array is too big' )}          let i..."]
    "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/flip()." [label="flip", tooltip="fn flip<T: PartialOrd + Copy>(input: &mut [T], index: usize)  {     input[..=index].reverse(); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_shell()." [label="test_shell", tooltip="    fn test_shell()  {         let mut vector_in = vec![11, 20, 21, 40, 11, 60, 5];         shell_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![5, 11, 11, 20, 21, 40, 60]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual()." [label="test_quick_dual", tooltip="    fn test_quick_dual()  {         let mut vector_in = vec![10, 20, 11, 24];         quick_dual_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual_len1()." [label="test_quick_dual_len1", tooltip="    fn test_quick_dual_len1()  {         let mut vector_in = vec![1];         quick_dual_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/tests/test_comb()." [label="test_comb", tooltip="    fn test_comb()  {         let mut vector_in = vec![30, 10, 20, 11, 24, 44, 12, 11];         comb_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 11, 12, 20, 24, 30, 44]);   ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_sort()." [label="heap_sort", tooltip="pub fn heap_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      for i in (0..input.len() / 2).rev() {         heap_max(input, i, input.len());     }      for i in (0..input.l..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_empty()." [label="test_bitonic_empty", tooltip="    fn test_bitonic_empty()  {         let mut vector_in:Vec<u8> = vec![];         bitonic_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/compare_and_swap()." [label="compare_and_swap", tooltip="fn compare_and_swap<T: PartialOrd>(input: &mut [T], mode: bool)  {     let mid_point = input.len() / 2;     for i in 0..mid_point {         if (input[i] > input[mid_point + i]) == mode {             i..."]
    "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()." [label="ksort", tooltip="pub fn ksort<T: PartialOrd + Clone + Copy>(input: &mut [T])  {     if input.len() < 2 {return;}     ksort_lr(input, 0, input.len() - 1); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/lomuto_partition()." [label="lomuto_partition", tooltip="fn lomuto_partition<T: PartialOrd>(input: &mut [T]) -> usize  {     let pivot = input.len() - 1;     let mut swap = 0;     for i in 0..pivot {         if input[i] < input[pivot] {             if swap ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort()." [label="slow_sort", tooltip="pub fn slow_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      slow_sort_sorting(input, 0, input.len() - 1); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_len1()." [label="test_gnome_len1", tooltip="    fn test_gnome_len1()  {         let mut vector_in = vec![1];         gnome_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_usize_pow_2()." [label="test_bitonic_usize_pow_2", tooltip="    fn test_bitonic_usize_pow_2()  {         let mut vector_in = vec![10, 20, 11, 24, 15];         bitonic_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 15, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sift()." [label="nheap_sift", tooltip="end: usize)  fn nheap_sift<T: PartialOrd>(input: &mut [T], children: usize, start: usize, {     let mut root = start;          loop {         let child = root * children + 1;         if child > end {b..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/bubble_sort()." [label="bubble_sort", tooltip="pub fn bubble_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}          let input_len = input.len();      for i in (0..input_len).rev() {         let mut has_swapped = false;  ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_batcher_empty()." [label="test_oddeven_batcher_empty", tooltip="    fn test_oddeven_batcher_empty()  {         let mut vector_in:Vec<i32> = vec![];         oddeven_batcher_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()." [label="pancake_sort", tooltip="pub fn pancake_sort<T: PartialOrd + Copy>(input: &mut [T])  {     if input.len() < 2 {return;}      let in_len = input.len() - 1;     for item in (0..in_len + 1).rev() {         let cut = largest_panc..."]
    "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/insertion_sort()." [label="insertion_sort", tooltip="pub fn insertion_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}          for i in 1..input.len() {         let mut j = i;         while j > 0 && input[j - 1] > input[j] {    ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/tests/test_cocktail_len1()." [label="test_cocktail_len1", tooltip="    fn test_cocktail_len1()  {         let mut vector_in = vec![1];         cocktail_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap_01()." [label="test_heap_01", tooltip="    fn test_heap_01()  {         let mut vector_in = vec![10, 20, 11, 24, 13, 12];         nheap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 12, 13, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/tests/test_bingo()." [label="test_bingo", tooltip="    fn test_bingo()  {         let mut vector_in = vec![10, 20, 11, 24, 15];         bingo_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 15, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/tests/test_bingo_len1()." [label="test_bingo_len1", tooltip="    fn test_bingo_len1()  {         let mut vector_in = vec![1];         bingo_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_double()." [label="test_selection_double", tooltip="    fn test_selection_double()  {         let mut vector_in = vec![11, 20, 21, 40, 11, 60, 5];         selection_double_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![5, 11, 11, 20, 21..."]
    "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/tests/test_insertion_len1()." [label="test_insertion_len1", tooltip="    fn test_insertion_len1()  {         let mut vector_in = vec![1];         insertion_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_sort()." [label="selection_sort", tooltip="pub fn selection_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      for i in 0..input.len() {         let swap_val = {             let mut min = &input[i];             let m..."]
    "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/tests/test_pancake_empty()." [label="test_pancake_empty", tooltip="    fn test_pancake_empty()  {         let mut vector_in:Vec<i32> = vec![];         pancake_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_empty()." [label="test_oddeven_empty", tooltip="    fn test_oddeven_empty()  {         let mut vector_in:Vec<i32> = vec![];         oddeven_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/tests/test_bingo_empty()." [label="test_bingo_empty", tooltip="    fn test_bingo_empty()  {         let mut vector_in:Vec<i32> = vec![];         bingo_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_len1()." [label="test_selection_len1", tooltip="    fn test_selection_len1()  {         let mut vector_in = vec![1];         selection_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_empty()." [label="test_merge_empty", tooltip="    fn test_merge_empty()  {         let mut vector_in:Vec<i32> = vec![];         merge_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_sort()." [label="gnome_sort", tooltip="pub fn gnome_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}          let mut i = 0;          while i < input.len() {         if i == 0 || input[i - 1] < input[i] {           ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()." [label="quick_dual_sort", tooltip="pub fn quick_dual_sort<T: PartialOrd + Copy>(input: &mut [T])  {     if input.len() < 2 {return;}     dual_pivot(input, 0, input.len() - 1); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap()." [label="test_heap", tooltip="    fn test_heap()  {         let mut vector_in = vec![10, 20, 11, 24];         heap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_empty()." [label="test_heap_empty", tooltip="    fn test_heap_empty()  {         let mut vector_in:Vec<i32> = vec![];         heap_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/tests/test_slow()." [label="test_slow", tooltip="    fn test_slow()  {         let mut vector_in = vec![10, 20, 11, 24];         slow_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_batcher()." [label="test_oddeven_batcher", tooltip="    fn test_oddeven_batcher()  {         let mut vector_in = vec![10, 20, 11, 24];         oddeven_batcher_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/tests/test_slow_empty()." [label="test_slow_empty", tooltip="    fn test_slow_empty()  {         let mut vector_in:Vec<i32> = vec![];         stooge_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort()." [label="stooge_sort", tooltip="pub fn stooge_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      stooge_sort_sorting(input, 0, input.len() - 1); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort()." [label="oddeven_batcher_sort", tooltip="pub fn oddeven_batcher_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      oddeven_batcher_sort_ranges(input, 0, input.len() - 1); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge()." [label="merge", tooltip="fn merge<T: PartialOrd + Copy>(in1: &[T], in2: &[T], tmp: &mut [T])  {     let mut left = 0;     let mut right = 0;     let mut index = 0;      while left < in1.len() && right < in2.len() {         if..."]
    "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap_empty()." [label="test_heap_empty", tooltip="    fn test_heap_empty()  {         let mut vector_in:Vec<i32> = vec![];         nheap_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort()." [label="test_ksort", tooltip="    fn test_ksort()  {         let mut vector_in = [10, 20, 11, 24];         ksort(&mut vector_in);         debug_assert_eq!(vector_in, [10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tog_flag()." [label="tog_flag", tooltip="fn tog_flag(r: &mut Vec<usize>, x: usize)  {     r[x >> 3] ^= 1 << (x & 7) }"]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_empty()." [label="test_weak_heap_empty", tooltip="    fn test_weak_heap_empty()  {         let mut vector_in:Vec<i32> = vec![];         weak_heap_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()." [label="smooth_sort", tooltip="pub fn smooth_sort<T: PartialOrd>(input: &mut [T]) {     if input.len() < 2 {return;}          // Init addtitional index heap     let input = input;     let in_len = input.len();     let mut heap = Ve..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/tests/test_buble_len()." [label="test_buble_len", tooltip="    fn test_buble_len()  {         let mut vector_in = vec![1];         bubble_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bit_sort()." [label="bit_sort", tooltip="fn bit_sort<T: PartialOrd>(input: &mut [T], mode: bool)  {     if input.len() > 1 {         let mid_point = input.len() / 2;         bit_sort(&mut input[..mid_point], true);         bit_sort(&mut inpu..."]
    "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_len1()." [label="test_bitonic_len1", tooltip="    fn test_bitonic_len1()  {         let mut vector_in = vec![1];         bitonic_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_empty()." [label="test_gnome_empty", tooltip="    fn test_gnome_empty()  {         let mut vector_in:Vec<i32> = vec![];         gnome_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()." [label="nheap_sort", tooltip="pub fn nheap_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}      let children = 3;     for i in (0..=input.len()).rev() {         nheap_sift(input, children, i, input.len() -..."]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/restore_heap()." [label="restore_heap", tooltip="fn restore_heap<T: PartialOrd>(input: &mut [T], index: usize, heap: &Vec<usize>) {     // Insertion sorting     let mut current = heap.len() - 1;     let mut i = index;     let mut k = heap[current]; ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth()." [label="test_smooth", tooltip="    fn test_smooth()  {         let mut vector_in = vec![20, 10, 11, 13];         smooth_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[10, 11, 13, 20]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort_empty()." [label="test_ksort_empty", tooltip="    fn test_ksort_empty()  {         let mut vector_in:Vec<i32> = vec![];         ksort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_len1()." [label="test_quick_len1", tooltip="    fn test_quick_len1()  {         let mut vector_in = vec![1];         quick_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort_ranges()." [label="oddeven_batcher_sort_ranges", tooltip="end:usize)  fn oddeven_batcher_sort_ranges<T: PartialOrd>(input: &mut [T], start:usize, {     if end >= start {         let mid = start + (end - start) / 2;         oddeven_batcher_sort_ranges(input, ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/tests/test_cycle()." [label="test_cycle", tooltip="    fn test_cycle()  {         let mut vector_in = vec![11, 20, 21, 40, 11, 60, 5];         cycle_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![5, 11, 11, 20, 21, 40, 60]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/dual_pivot()." [label="dual_pivot", tooltip="end: usize)  fn dual_pivot<T: PartialOrd + Copy>(input: &mut [T], start: usize, {     if start >= end {return;}     if input[start] > input[end] {         input.swap(start, end);     }     let lpivot ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_bottom_up_sort()." [label="heap_bottom_up_sort", tooltip="pub fn heap_bottom_up_sort<T: PartialOrd>(input: &mut [T])  {     if input.len() < 2 {return;}          let in_len = input.len();     for start in (0..=(in_len - 2) / 2).rev() {         hbu_sift(input..."]
    "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_bu_len1()." [label="test_merge_bu_len1", tooltip="    fn test_merge_bu_len1()  {         let mut vector_in = vec![1];         merge_bottom_up_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/cycle_sort()." [label="cycle_sort", tooltip="pub fn cycle_sort<T: PartialOrd + Copy>(input: &mut [T])  {     if input.len() < 2 {return;}          let in_len = input.len();     for index in 0..in_len {         let mut key = input[index];        ..."]
    "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/tests/test_comb_empty()." [label="test_comb_empty", tooltip="    fn test_comb_empty()  {         let mut vector_in:Vec<i32> = vec![];         comb_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth_empty()." [label="test_smooth_empty", tooltip="    fn test_smooth_empty()  {         let mut vector_in:Vec<i32> = vec![];         smooth_sort(&mut vector_in);         debug_assert_eq!(vector_in, &[]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/tests/test_insertion()." [label="test_insertion", tooltip="    fn test_insertion()  {         let mut vector_in = vec![10, 20, 11, 24];         insertion_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap_len1()." [label="test_heap_len1", tooltip="    fn test_heap_len1()  {         let mut vector_in = vec![1];         nheap_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![1]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick()." [label="test_quick", tooltip="    fn test_quick()  {         let mut vector_in = vec![10, 20, 11, 24];         quick_sort(&mut vector_in);         debug_assert_eq!(vector_in, vec![10, 11, 20, 24]);     }"]
    "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort_01()." [label="test_ksort_01", tooltip="    fn test_ksort_01()  {         let mut vector_in = [10, 9, 20, 22, 11, 21, 12, 24, 4, 6, 3];         ksort(&mut vector_in);         debug_assert_eq!(vector_in, [3, 4, 6, 9, 10, 11, 12, 20, 21, 22, ..."]
  }
  subgraph cluster_2 {
    label = "/home/lacra/git_repos/sorting_rs/src/bin";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo sorting_rs 1.2.10 calculate_fibonacci()." [label="calculate_fibonacci", tooltip="fn calculate_fibonacci(num: usize)  {     println!(' Fibonacci numbers:' );     for i in leonardo_generate(0, 1, 0).take(num) {         print!(' {}, ' , i);     }     println!(); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 leonardo_generate()." [label="leonardo_generate", tooltip="impl std::iter::Iterator<Item = usize>  fn leonardo_generate(mut n0: usize, mut n1: usize, add: usize) -> {     std::iter::from_fn(move || {         let n = n0;         n0 = n1;         n1 += n + add;..."]
    "rust-analyzer cargo sorting_rs 1.2.10 calculate_leonardo()." [label="calculate_leonardo", tooltip="fn calculate_leonardo(num: usize)  {     println!(' Leonardo numbers:' );     for i in leonardo_generate(1, 1, 1).take(num) {         print!(' {}, ' , i);     }     println!(); }"]
    "rust-analyzer cargo sorting_rs 1.2.10 calculate_powers_of_two()." [label="calculate_powers_of_two", tooltip="fn calculate_powers_of_two(input: usize)  {     let mut powers = Vec::<usize>::with_capacity(input);     for i in 1..input + 1 {         powers.push(2usize.pow(i as u32));     }     println!(' {:?}' ,..."]
    "rust-analyzer cargo sorting_rs 1.2.10 main()." [label="main", tooltip="fn main()  {     let mut input = String::new();     io::stdin().read_line(&mut input).expect(' Failed to read value' );     input = input.to_string().trim().to_string();     println!(' Maximum number:..."]
  }

  "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_double_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_double_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/lomuto_partition()."
  "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/bingo_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/get_min_max()."
  "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/tests/test_cocktail_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/cocktail_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/sub_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/compare_and_swap()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_bool()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/tests/test_comb_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/comb_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/tests/test_cycle_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/cycle_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/tests/test_slow_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual_longer()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 calculate_fibonacci()." -> "rust-analyzer cargo sorting_rs 1.2.10 leonardo_generate()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_batcher_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_big()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_up_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()."
  "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap()." -> "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/tests/test_insertion_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/insertion_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_up_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_double_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_double_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_shell_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/shell_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/tests/test_bubble_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/bubble_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/tests/test_pancake_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_merge()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tog_flag()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_bu_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_shell_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/shell_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_bu()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_bottom_up_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge()."
  "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/tests/test_cocktail()." -> "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/cocktail_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/tests/test_cycle_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/cycle_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_usize()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 calculate_leonardo()." -> "rust-analyzer cargo sorting_rs 1.2.10 leonardo_generate()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth_01()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/tests/test_bubble()." -> "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/bubble_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/shell_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/impl#[GapSequence]new()."
  "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/tests/test_slow_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/tests/test_pancake()." -> "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_correct_gap_sequence()." -> "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/impl#[GapSequence]new()."
  "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_up()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_char()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_merge()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/get_flag()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/tests/test_stooge()." -> "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_bottom_up()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_small()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_two_elem()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/hbu_sift()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/hbu_leaf_search()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_bottom_up_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/tests/test_slow_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_bottom_up_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bit_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/test/test_shell()." -> "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/shell_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_dual_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/tests/test_comb()." -> "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/comb_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_max()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()." -> "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort_lr()."
  "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort_sorting()."
  "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_usize_pow_2()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_batcher_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/largest_pancake()."
  "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/flip()."
  "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/tests/test_cocktail_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/cocktail_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap_01()." -> "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/tests/test_bingo()." -> "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/bingo_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/tests/test_bingo_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/bingo_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_double()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_double_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/tests/test_insertion_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/insertion_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/tests/test_pancake_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/tests/test_bingo_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/bingo_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/tests/test_selection_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/dual_pivot()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_heap_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/tests/test_slow()." -> "rust-analyzer cargo sorting_rs 1.2.10 slow_sort/slow_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/tests/test_oddeven_batcher()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 bingo_sort/bingo_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/cycle_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 cocktail_sort/cocktail_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/bubble_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 selection_sort/selection_double_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 shell_sort/shell_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/comb_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/insertion_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 pancake_sort/pancake_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bench()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_dual_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/tests/test_slow_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 stooge_sort/stooge_sort_sorting()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort_ranges()."
  "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort()." -> "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/tests/test_weak_heap_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/weak_heap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/restore_heap()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/get_child_trees()."
  "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/tests/test_buble_len()." -> "rust-analyzer cargo sorting_rs 1.2.10 bubble_sort/bubble_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bit_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/sub_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/tests/test_bitonic_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 bitonic_sort/bitonic_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/tests/test_gnome_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 gnome_sort/gnome_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sift()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/restore_heap()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/get_child_trees()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 main()." -> "rust-analyzer cargo sorting_rs 1.2.10 calculate_powers_of_two()."
  "rust-analyzer cargo sorting_rs 1.2.10 main()." -> "rust-analyzer cargo sorting_rs 1.2.10 calculate_fibonacci()."
  "rust-analyzer cargo sorting_rs 1.2.10 main()." -> "rust-analyzer cargo sorting_rs 1.2.10 calculate_leonardo()."
  "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_sort_ranges()." -> "rust-analyzer cargo sorting_rs 1.2.10 oddeven_sort/oddeven_batcher_merge()."
  "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/tests/test_cycle()." -> "rust-analyzer cargo sorting_rs 1.2.10 cycle_sort/cycle_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/heap_bottom_up_sort()." -> "rust-analyzer cargo sorting_rs 1.2.10 heap_sort/hbu_sift()."
  "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/tests/test_merge_bu_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 merge_sort/merge_bottom_up_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 benches()." -> "rust-analyzer cargo sorting_rs 1.2.10 bench()."
  "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/tests/test_comb_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 comb_sort/comb_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/tests/test_smooth_empty()." -> "rust-analyzer cargo sorting_rs 1.2.10 smooth_sort/smooth_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/tests/test_insertion()." -> "rust-analyzer cargo sorting_rs 1.2.10 insertion_sort/insertion_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/tests/test_heap_len1()." -> "rust-analyzer cargo sorting_rs 1.2.10 nheap_sort/nheap_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/tests/test_quick()." -> "rust-analyzer cargo sorting_rs 1.2.10 quick_sort/quick_sort()."
  "rust-analyzer cargo sorting_rs 1.2.10 ksort/tests/test_ksort_01()." -> "rust-analyzer cargo sorting_rs 1.2.10 ksort/ksort()."
}
