digraph call_graph {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue, fontname=Helvetica];
  edge [color=gray];

  subgraph cluster_0 {
    label = "rust/account-keys/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-account-keys 0.1.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash()." [label="hash", tooltip=""]
  }
  subgraph cluster_1 {
    label = "rust/account-keys/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#DecodingError#" [label="DecodingError", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_media_encryption_key_data()." [label="derive_media_encryption_key_data", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_ec_key()." [label="derive_ec_key", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()." [label="derive_from_account_entropy_pool", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V0>`]derive_from_master_key()." [label="derive_from_master_key", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#Argon2Error#" [label="Argon2Error", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/hmac_sha256()." [label="hmac_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_salt()." [label="known_salt", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/encrypt_hmac_sha256_siv()." [label="encrypt_hmac_sha256_siv", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_key_known_from_master_key()." [label="backup_key_known_from_master_key", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/verify_local_pin_hash()." [label="verify_local_pin_hash", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_phc_string()." [label="known_phc_string", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_local_backup_metadata_key()." [label="derive_local_backup_metadata_key", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool]derive_svr_key()." [label="derive_svr_key", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_id_known_from_account_entropy()." [label="backup_id_known_from_account_entropy", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/uniqueness()." [label="uniqueness", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash_with_salt()." [label="local_pin_hash_with_salt", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#WrongLength#" [label="WrongLength", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#MrenclaveLookupError#" [label="MrenclaveLookupError", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash()." [label="local_pin_hash", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[InvalidAccountEntropyPool][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/only_alphabet_characters_are_used()." [label="only_alphabet_characters_are_used", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_key_known_from_account_entropy()." [label="backup_key_known_from_account_entropy", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_hash()." [label="known_hash", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/test_rng()." [label="test_rng", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/impl#[Encrypted]concat()." [label="concat", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_thumbnail_transit_encryption_key_data()." [label="derive_thumbnail_transit_encryption_key_data", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#InvalidCharacter#" [label="InvalidCharacter", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()." [label="derive_backup_id", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_hash2()." [label="known_hash2", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_id_known_from_master_key()." [label="backup_id_known_from_master_key", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/compare_known_hash()." [label="compare_known_hash", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()." [label="from_str", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]make_salt()." [label="make_salt", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]create()." [label="create", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/parse()." [label="parse", tooltip=""]
    "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_media_id()." [label="derive_media_id", tooltip=""]
  }
  subgraph cluster_2 {
    label = "rust/attest";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo attest 0.1.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_3 {
    label = "rust/attest/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo attest 0.1.0 error/tests/d1()." [label="d1", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_invalid_chain()." [label="validate_invalid_chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Resolver][CryptoResolver]resolve_dh()." [label="resolve_dh", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[Claims]from_attestation_data()." [label="from_attestation_data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_no_revoked()." [label="validate_no_revoked", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[CertChain]from_certs()." [label="from_certs", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[CipherChaChaPoly][Cipher]name()." [label="name", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]ciphertext_len()." [label="ciphertext_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_tcb_status()." [label="verify_tcb_status", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/pkey()." [label="pkey", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]in_tcb_level()." [label="in_tcb_level", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()." [label="read_from_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/test/test_read_bytes()." [label="test_read_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[`Rng<T>`][RngCore]fill_bytes()." [label="fill_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()." [label="context", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashBLAKE2b][Hash]input()." [label="input", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/mrenclave_bytes()." [label="mrenclave_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/asn2unix()." [label="asn2unix", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/tests/error()." [label="error", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_fmspc_mismatch()." [label="tcb_fmspc_mismatch", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()." [label="validate_chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMHandshakeError#" [label="HSMHandshakeError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/new_handshake()." [label="new_handshake", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]complete()." [label="complete", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]name()." [label="name", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." [label="test_happy_path", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_root()." [label="validate_revoked_from_root", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/read_bytes()." [label="read_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#TrustedCodeError#" [label="TrustedCodeError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." [label="qe_id_valid_tcb_level", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/test/test_read_from_bytes()." [label="test_read_from_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/tests/test_propagation_across_domains()." [label="test_propagation_across_domains", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()." [label="names", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]pub_len()." [label="pub_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]set()." [label="set", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Resolver][CryptoResolver]resolve_rng()." [label="resolve_rng", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()." [label="chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]new()." [label="new", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/TcbStanding#UpToDate#" [label="UpToDate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[`Rng<T>`][RngCore]next_u64()." [label="next_u64", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashSHA256][Hash]input()." [label="input", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/bad_vendor_id()." [label="bad_vendor_id", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_tcb_signer()." [label="revoked_tcb_signer", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/attestation_metrics()." [label="attestation_metrics", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()." [label="new_handshake", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_invalid_private_key()." [label="test_invalid_private_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/system_time_to_asn1_time()." [label="system_time_to_asn1_time", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/lookup_groupid()." [label="lookup_groupid", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/tests/test_propagate_std_error()." [label="test_propagate_std_error", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Resolver][CryptoResolver]resolve_hash()." [label="resolve_hash", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]with_claims()." [label="with_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Resolver][CryptoResolver]resolve_cipher()." [label="resolve_cipher", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/to_error()." [label="to_error", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashSHA256][Hash]hash_len()." [label="hash_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]initial_request()." [label="initial_request", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/valid_start()." [label="valid_start", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[Claims]from_custom_claims()." [label="from_custom_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/read_array()." [label="read_array", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/attribute_comp()." [label="attribute_comp", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]dh()." [label="dh", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_pceid_mismatch()." [label="tcb_pceid_mismatch", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/tests/d2()." [label="d2", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()." [label="leaf_pub_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/tests/attest_svr2_bad_config()." [label="attest_svr2_bad_config", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()." [label="verify_enclave_signatures", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/tests/matches()." [label="matches", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/impl#[`SmallMap<K, V, N>`]get()." [label="get", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidPublicKeyError#" [label="InvalidPublicKeyError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." [label="verify_certificates", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/tests/attest_svr2()." [label="attest_svr2", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()." [label="for_sgx", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseHandshakeError#" [label="NoiseHandshakeError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMCommunicationError#" [label="HSMCommunicationError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/test_attestation_metrics()." [label="test_attestation_metrics", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[CipherChaChaPoly][Cipher]set()." [label="set", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseError#" [label="NoiseError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashSHA256][Hash]reset()." [label="reset", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_valid_chain()." [label="validate_valid_chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashSHA256][Hash]name()." [label="name", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashSHA256][Hash]result()." [label="result", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/cert_chain()." [label="cert_chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashBLAKE2b][Hash]name()." [label="name", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashBLAKE2b][Hash]result()." [label="result", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#" [label="AttestationDataError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_other_revoked()." [label="validate_other_revoked", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()." [label="recv", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_qe_id_signer()." [label="revoked_qe_id_signer", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/test/test_strip_trailing_null_byte()." [label="test_strip_trailing_null_byte", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[`Rng<T>`][RngCore]next_u32()." [label="next_u32", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_clock_skew()." [label="test_clock_skew", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]pubkey()." [label="pubkey", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/attest()." [label="attest", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_unordered()." [label="sort_unordered", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 client_connection/Error#NoiseError#" [label="NoiseError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cds2/extract_metrics()." [label="extract_metrics", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/new_chain_from_unsorted_certs()." [label="new_chain_from_unsorted_certs", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]self_issued()." [label="self_issued", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." [label="sw_hardening_needed", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cds2/test/attest_cds2()." [label="attest_cds2", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[CipherChaChaPoly][Cipher]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_claims_hash()." [label="verify_claims_hash", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()." [label="send", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/impl#[RaftConfig][`PartialEq<svr::RaftGroupConfig>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/serial_number()." [label="serial_number", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[`Rng<T>`][RngCore]try_fill_bytes()." [label="try_fill_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashBLAKE2b][Hash]reset()." [label="reset", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]empty_crl()." [label="empty_crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_raft_config_lookup()." [label="new_handshake_with_raft_config_lookup", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Resolver][CryptoResolver]resolve_kem()." [label="resolve_kem", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]root()." [label="root", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]shared_secret_len()." [label="shared_secret_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[UnvalidatedHandshake]validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/from_trusted()." [label="from_trusted", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]pubkey()." [label="pubkey", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." [label="attest_impl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/check_attributes()." [label="check_attributes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()." [label="context", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." [label="v2_tcb_level", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_root()." [label="revoked_other_root", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#" [label="InvalidBridgeStateError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]stack()." [label="stack", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_mismatched_keys()." [label="test_mismatched_keys", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidCodeHashError#" [label="InvalidCodeHashError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_reversed()." [label="sort_reversed", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashSHA256][Hash]block_len()." [label="block_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[UnvalidatedHandshake]skip_raft_validation()." [label="skip_raft_validation", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_unknown()." [label="qe_id_unknown", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation()." [label="test_verify_remote_attestation", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]with_context()." [label="with_context", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]new()." [label="new", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_pck()." [label="revoked_pck", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue_chain()." [label="issue_chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()." [label="sort", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." [label="qe_id_outdated_tcb_level", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]new()." [label="new", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_pck()." [label="revoked_other_pck", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." [label="unsupported_tcb_level", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/tests/test_propagation()." [label="test_propagation", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/tests/raft_config_matches()." [label="raft_config_matches", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_small()." [label="sort_small", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]from_pem_data()." [label="from_pem_data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]privkey()." [label="privkey", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]initial_request()." [label="initial_request", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation_accepted_sw_advisories_not_present()." [label="test_verify_remote_attestation_accepted_sw_advisories_not_present", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashBLAKE2b][Hash]hash_len()." [label="hash_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]complete()." [label="complete", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]priv_len()." [label="priv_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/debug_flag()." [label="debug_flag", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[CipherChaChaPoly][Cipher]decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PostQuantum#" [label="PostQuantum", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/strip_trailing_null_byte()." [label="strip_trailing_null_byte", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()." [label="chain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_source()." [label="verify_enclave_source", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]name()." [label="name", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#" [label="InvalidBridgeStateError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation_v3()." [label="test_verify_remote_attestation_v3", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_singleton()." [label="sort_singleton", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()." [label="trust_store", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]crl()." [label="crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[Error][`From<prost::DecodeError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/bad_mrsigner()." [label="bad_mrsigner", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/check_miscselct()." [label="check_miscselct", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 util/impl#[`SmallMap<K, V, N>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/root_trust_store()." [label="root_trust_store", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/impl#[AttestationError][`From<crate::error::ContextError<dcap::DcapErrorDomain>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." [label="qe_id_revoked_tcb_level", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[HashBLAKE2b][Hash]block_len()." [label="block_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()." [label="handshake_from_tests_data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf()." [label="leaf", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()." [label="verify_remote_attestation", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#" [label="PreQuantum", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation_expired_attestation()." [label="test_verify_remote_attestation_expired_attestation", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/TcbStanding#SWHardeningNeeded#" [label="SWHardeningNeeded", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_constants()." [label="new_handshake_with_constants", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_intermediate()." [label="validate_revoked_from_intermediate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/miscselect_comp()." [label="miscselect_comp", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Kem]pub_len()." [label="pub_len", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_ordered()." [label="sort_ordered", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/test/fill()." [label="fill", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/verify_expiration()." [label="verify_expiration", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationError#" [label="AttestationError", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 error/tests/test_basic()." [label="test_basic", tooltip=""]
  }
  subgraph cluster_4 {
    label = "rust/attest/src/dcap";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/make_endorsements_header()." [label="make_endorsements_header", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'a>`][EcdsaSigned]data()." [label="data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_root()." [label="revoke_from_root", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxFlags]from_bits_truncate()." [label="from_bits_truncate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<asn1::Enumerated>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." [label="into_tcb_info", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]pck_crl()." [label="pck_crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'_>`]data_sha256()." [label="data_sha256", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/custom_claims()." [label="custom_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/from_bytes()." [label="from_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/SgxAttestationAlgorithm#_EcdsaP384#" [label="_EcdsaP384", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/string_for_field()." [label="string_for_field", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#ConfigurationAndSWHardeningNeeded#" [label="ConfigurationAndSWHardeningNeeded", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_sig()." [label="qe_sig_bad_sig", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/test/test_deserialization()." [label="test_deserialization", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#Revoked#" [label="Revoked", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/generate_key()." [label="generate_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Sequence#" [label="Sequence", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#" [label="V3", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxFlags]contains()." [label="contains", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/null_terminated_claims()." [label="null_terminated_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v2()." [label="parse_tcb_info_v2", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[u8][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#TcbInfo#" [label="TcbInfo", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#PckCrlIssuerChain#" [label="PckCrlIssuerChain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/make_endorsements()." [label="make_endorsements", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][EcdsaSigned]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'a>`][EcdsaSigned]data()." [label="data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/der_crl_for_field()." [label="der_crl_for_field", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxReportBody]has_flag()." [label="has_flag", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_auth_data()." [label="qe_report_bad_auth_data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/SgxAttestationAlgorithm#_EPID#" [label="_EPID", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign_data()." [label="sign_data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_report()." [label="qe_report_bad_report", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'_>`]into_enclave_identity()." [label="into_enclave_identity", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#Revoked#" [label="Revoked", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Success#" [label="Success", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()." [label="verify_qe_report", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_bad_version()." [label="deserialize_bad_version", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Enumerated#" [label="Enumerated", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_report()." [label="qe_sig_bad_report", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[bool][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#_PckCleartext#" [label="_PckCleartext", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]is_pck_ext()." [label="is_pck_ext", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbInfoVersion][`TryFrom<u16>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/empty_claims()." [label="empty_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]crl()." [label="crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]version()." [label="version", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]attest_key()." [label="attest_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_body()." [label="isv_sig_bad_body", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V2#" [label="V2", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#OutOfDate#" [label="OutOfDate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/SgxType#Scalable#" [label="Scalable", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/SgxAttestationAlgorithm#EcdsaP256#" [label="EcdsaP256", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Bool#" [label="Bool", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'a>`][EcdsaSigned]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]from_der()." [label="from_der", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]from_der_data()." [label="from_der_data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()." [label="builder", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/SgxAttestationAlgorithm#_Reserved#" [label="_Reserved", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/EnclaveType#Qe#" [label="Qe", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#CrlPckProcCa#" [label="CrlPckProcCa", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_unsupported_key_type()." [label="deserialize_unsupported_key_type", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'a>`][EcdsaSigned]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/parse_extensions()." [label="parse_extensions", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_underflow()." [label="deserialize_underflow", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'_>`][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_signer()." [label="qe_sig_bad_signer", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_pck()." [label="revoke_from_pck", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]root_crl()." [label="root_crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Qe#" [label="Qe", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#PckCertChain#" [label="PckCertChain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#SWHardeningNeeded#" [label="SWHardeningNeeded", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#QeIdIssuerChain#" [label="QeIdIssuerChain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'_>`][EcdsaSigned]data()." [label="data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[`Option<T>`][OptionOfTryFromExtensionValue]parse_and_save()." [label="parse_and_save", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#_PpidRsa3072Encrypted#" [label="_PpidRsa3072Encrypted", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#CrlPckCert#" [label="CrlPckCert", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_attest_key()." [label="qe_report_bad_attest_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#_EcdsaSigAuxData#" [label="_EcdsaSigAuxData", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/underflow_claims()." [label="underflow_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#QeIdInfo#" [label="QeIdInfo", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/EnclaveType#Qve#" [label="Qve", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." [label="read", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/ecdsa_signature_from_bytes()." [label="ecdsa_signature_from_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/deserialize_ecdsa_signature()." [label="deserialize_ecdsa_signature", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Integer#" [label="Integer", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[u16][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_mrenclave()." [label="isv_sig_bad_mrenclave", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." [label="valid_quote_from_disk", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Isv#" [label="Isv", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()." [label="components", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V3#" [label="V3", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[EnclaveIdentity][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/validate_offsets()." [label="validate_offsets", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_support_bytes()." [label="quote_support_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/data_for_field()." [label="data_for_field", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[QeTcbLevel]from_parts()." [label="from_parts", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#OutOfDateConfigurationNeeded#" [label="OutOfDateConfigurationNeeded", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]serialize_attest_public_key()." [label="serialize_attest_public_key", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][EcdsaSigned]data()." [label="data", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#OctetString#" [label="OctetString", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#_PpidRsa2048Encrypted#" [label="_PpidRsa2048Encrypted", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]pcesvn()." [label="pcesvn", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[SgxQuoteBody][`TryFrom<[u8; _]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<SequenceOf<'a, SgxExtension<'a>, 0, _>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()." [label="from_parts", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#Version#" [label="Version", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_bytes()." [label="quote_bytes", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'_>`][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#UpToDate#" [label="UpToDate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V2#" [label="V2", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#_PpidCleartext#" [label="_PpidCleartext", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/verify_signature_chain_integrity()." [label="verify_signature_chain_integrity", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/SgxType#Standard#" [label="Standard", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/pem_chain_for_field()." [label="pem_chain_for_field", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[EnclaveIdentity]tcb_status()." [label="tcb_status", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/test_claims()." [label="test_claims", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." [label="sign", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]from_crl()." [label="from_crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/deserialize_u32_hex()." [label="deserialize_u32_hex", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[`[u8; LEN]`][`TryFrom<ExtensionValue<'a>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_sig()." [label="isv_sig_bad_sig", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[`Option<T>`][OptionOfTryFromExtensionValue]is_none()." [label="is_none", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#ConfigurationNeeded#" [label="ConfigurationNeeded", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]crl()." [label="crl", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#CreationDatetime#" [label="CreationDatetime", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#UpToDate#" [label="UpToDate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v3()." [label="parse_tcb_info_v3", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<SequenceOf<'a, SgxExtension<'a>, 0, _>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#OutOfDate#" [label="OutOfDate", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()." [label="read", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbInfo][Expireable]valid_at()." [label="valid_at", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()." [label="attest", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#TcbIssuerChain#" [label="TcbIssuerChain", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'_>`][EcdsaSigned]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/key()." [label="key", tooltip=""]
  }
  subgraph cluster_5 {
    label = "rust/attest/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_codehash_mismatch()." [label="test_hsm_enclave_codehash_mismatch", tooltip=""]
    "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_happy_path()." [label="test_hsm_enclave_happy_path", tooltip=""]
  }
  subgraph cluster_6 {
    label = "rust/bridge/ffi/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_uuid()." [label="signal_error_get_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/signal_init_logger()." [label="signal_init_logger", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_retry_after_seconds()." [label="signal_error_get_retry_after_seconds", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_buffer()." [label="signal_free_buffer", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_message()." [label="signal_error_get_message", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_print_ptr()." [label="signal_print_ptr", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_hex_encode()." [label="signal_hex_encode", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[FfiLogger][Log]log()." [label="log", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_list_of_strings()." [label="signal_free_list_of_strings", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Trace#" [label="Trace", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_lookup_response_entry_list()." [label="signal_free_lookup_response_entry_list", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_unknown_fields()." [label="signal_error_get_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." [label="signal_identitykeypair_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Warn#" [label="Warn", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Debug#" [label="Debug", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_string()." [label="signal_free_string", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[FfiLogger][Log]flush()." [label="flush", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_bytestring_array()." [label="signal_free_bytestring_array", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." [label="signal_sealed_session_cipher_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[FfiLogger][Log]enabled()." [label="enabled", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Info#" [label="Info", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_address()." [label="signal_error_get_address", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_tries_remaining()." [label="signal_error_get_tries_remaining", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_type()." [label="signal_error_get_type", tooltip=""]
    "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_free()." [label="signal_error_free", tooltip=""]
  }
  subgraph cluster_7 {
    label = "rust/bridge/jni";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-jni 0.70.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_8 {
    label = "rust/bridge/jni/impl/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." [label="Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_AsyncLoadClass()." [label="Java_org_signal_libsignal_internal_Native_AsyncLoadClass", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Warn#" [label="Warn", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Info#" [label="Info", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]flush()." [label="flush", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/abort_on_panic()." [label="abort_on_panic", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." [label="set_max_level_from_java_level", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]log()." [label="log", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Assert#" [label="Assert", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]enabled()." [label="enabled", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_keepAlive()." [label="Java_org_signal_libsignal_internal_Native_keepAlive", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JavaLogLevel][`From<log::Level>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1SetMaxLevel()." [label="Java_org_signal_libsignal_internal_Native_Logger_1SetMaxLevel", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger]log_impl()." [label="log_impl", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." [label="Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Verbose#" [label="Verbose", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_initializeLibrary()." [label="Java_org_signal_libsignal_internal_Native_initializeLibrary", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Debug#" [label="Debug", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1Initialize()." [label="Java_org_signal_libsignal_internal_Native_Logger_1Initialize", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`jni::objects::JValueGen<&JObject<'_>>`][`From<JavaLogLevel>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[i32][`From<JavaLogLevel>`]from()." [label="from", tooltip=""]
  }
  subgraph cluster_9 {
    label = "rust/bridge/node/futures/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()." [label="from_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]send_future()." [label="send_future", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()." [label="call_method", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()." [label="promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#String#" [label="String", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFutureState<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Consumed#" [label="Consumed", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]start_future()." [label="start_future", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 result/JsPromiseResultConstructor#make()." [label="make", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`FutureTask<F>`]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 result/impl#[JsFulfilledResult][JsPromiseResultConstructor]make()." [label="make", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFutureState<T>`]waiting_on()." [label="waiting_on", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`AssertSendSafe<T>`][Future]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()." [label="get_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/settle_promise()." [label="settle_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Settled#" [label="Settled", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#Object#" [label="Object", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()." [label="settle_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 util/describe_panic()." [label="describe_panic", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]to_inner()." [label="to_inner", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]bind_settle_promise()." [label="bind_settle_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`FutureTask<F>`][Wake]wake()." [label="wake", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`AssertSendSafe<T>`]wrap()." [label="wrap", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Pending#" [label="Pending", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`][Future]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 result/impl#[JsRejectedResult][JsPromiseResultConstructor]make()." [label="make", tooltip=""]
  }
  subgraph cluster_10 {
    label = "rust/bridge/node/futures/src/future";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()." [label="then", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, Result<T, PersistentException>>`]then_try()." [label="then_try", tooltip=""]
  }
  subgraph cluster_11 {
    label = "rust/bridge/node/futures/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-neon-futures 0.1.0 main()." [label="main", tooltip=""]
    "rust-analyzer cargo signal-neon-futures 0.1.0 util/run()." [label="run", tooltip=""]
  }
  subgraph cluster_12 {
    label = "rust/bridge/node/futures/tests-node-module/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_callback()." [label="panic_during_callback", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()." [label="double_name_from_store_using_join", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_settle()." [label="panic_during_settle", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_post_await()." [label="panic_post_await", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_callback_promise()." [label="increment_callback_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]get_name()." [label="get_name", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join_impl()." [label="double_name_from_store_using_join_impl", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_impl()." [label="double_name_from_store_impl", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_async()." [label="increment_async", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_settle()." [label="throw_during_settle", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_pre_await()." [label="throw_pre_await", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_pre_await()." [label="panic_pre_await", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_promise()." [label="increment_promise", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_callback()." [label="throw_during_callback", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()." [label="double_name_from_store", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." [label="register", tooltip=""]
    "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_post_await()." [label="throw_post_await", tooltip=""]
  }
  subgraph cluster_13 {
    label = "rust/bridge/node/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()." [label="identitykeypair_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 impl#[`ArrayBuilder<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." [label="set_max_level_from_js_level", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[u32][`From<LogLevel>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 main()." [label="main", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Trace#" [label="Trace", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Debug#" [label="Debug", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 impl#[`Handle<'a, JsArray>`][`From<ArrayBuilder<'a>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Warn#" [label="Warn", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 minidump_to_json_string()." [label="minidump_to_json_string", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/init_logger()." [label="init_logger", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/convert_log_args_to_js()." [label="convert_log_args_to_js", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 impl#[`ArrayBuilder<'a>`]push()." [label="push", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Info#" [label="Info", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]flush()." [label="flush", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." [label="sealed_sender_multi_recipient_message_parse", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]log()." [label="log", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]enabled()." [label="enabled", tooltip=""]
    "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." [label="from", tooltip=""]
  }
  subgraph cluster_14 {
    label = "rust/bridge/shared";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge 0.1.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_15 {
    label = "rust/bridge/shared/macros/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/result_type()." [label="result_type", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." [label="bridge_fn", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/storage_ident_for()." [label="storage_ident_for", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/storage_ident_for()." [label="storage_ident_for", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_io_params_tests/just_runtime()." [label="just_runtime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." [label="bridge_fn_impl", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." [label="bridge_fn", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 value_for_meta_key()." [label="value_for_meta_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_io_params_tests/invalid()." [label="invalid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/explicit_empty_tuple()." [label="explicit_empty_tuple", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/name_from_ident()." [label="name_from_ident", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_code_to_load_input()." [label="generate_code_to_load_input", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn_body()." [label="bridge_fn_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn_body()." [label="bridge_fn_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/name_from_ident()." [label="name_from_ident", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/scopeguard_ident_for()." [label="scopeguard_ident_for", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/extract_arg_names_and_types()." [label="extract_arg_names_and_types", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_body()." [label="bridge_fn_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." [label="bridge_fn", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/result_returns()." [label="result_returns", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_io_body()." [label="bridge_io_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#" [label="Regular", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/implicit()." [label="implicit", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_ts_signature_comment()." [label="generate_ts_signature_comment", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Regular#" [label="Regular", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_io_params_tests/runtime_plus_renaming()." [label="runtime_plus_renaming", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/generate_code_to_load_input()." [label="generate_code_to_load_input", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/name_from_ident()." [label="name_from_ident", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#" [label="Void", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_io_body()." [label="bridge_io_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[BridgeIoParams][Parse]parse()." [label="parse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 name_for_meta_key()." [label="name_for_meta_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_async_body()." [label="bridge_fn_async_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/generate_code_to_load_input()." [label="generate_code_to_load_input", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/regular_types()." [label="regular_types", tooltip=""]
  }
  subgraph cluster_16 {
    label = "rust/bridge/shared/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveEcKey()." [label="BackupKey_DeriveEcKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/HKDF_DeriveSecrets()." [label="HKDF_DeriveSecrets", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Agree()." [label="ECPrivateKey_Agree", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetMsgType()." [label="UnidentifiedSenderMessageContent_GetMsgType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidationOutcome_getUnknownFields()." [label="MessageBackupValidationOutcome_getUnknownFields", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic()." [label="ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_GetType()." [label="BackupAuthCredential_GetType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic()." [label="BackupAuthCredential_PresentDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ForOriginalMessage()." [label="DecryptionErrorMessage_ForOriginalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic()." [label="ServerPublicParams_CreateReceiptCredentialPresentationDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_EncryptUserId()." [label="CallLinkSecretParams_EncryptUserId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_DecryptUsername()." [label="UsernameLink_DecryptUsername", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/CreateOTPFromBase64()." [label="CreateOTPFromBase64", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_EstablishedSend()." [label="HsmEnclaveClient_EstablishedSend", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_CheckValidContents()." [label="BackupAuthCredential_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ServiceIdString()." [label="ServiceId_ServiceIdString", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_Create()." [label="SenderKeyDistributionMessage_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PublicKey_Deserialize()." [label="PublicKey_Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_DeriveAccessKey()." [label="ProfileKey_DeriveAccessKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_GetPublicKey()." [label="ECPrivateKey_GetPublicKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Sign()." [label="ECPrivateKey_Sign", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_GetEndorsementPublicKey()." [label="ServerPublicParams_GetEndorsementPublicKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_without_finalize()." [label="drop_without_finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse()." [label="BackupAuthCredentialRequestContext_ReceiveResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/Fingerprint_ScannableEncoding()." [label="Fingerprint_ScannableEncoding", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_CheckValidContents()." [label="CreateCallLinkCredentialRequest_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialWithPni_CheckValidContents()." [label="AuthCredentialWithPni_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveMediaId()." [label="BackupKey_DeriveMediaId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientEncrypt()." [label="SealedSender_MultiRecipientEncrypt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_UpdateWithOffset()." [label="CryptographicMac_UpdateWithOffset", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialPresentation_GetReceiptLevel()." [label="ReceiptCredentialPresentation_GetReceiptLevel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_SignAlternateIdentity()." [label="IdentityKeyPair_SignAlternateIdentity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientEncryptNode()." [label="SealedSender_MultiRecipientEncryptNode", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Compare()." [label="ECPublicKey_Compare", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()." [label="ConnectionProxyConfig_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptProfileKey()." [label="GroupSecretParams_EncryptProfileKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeAliceSession()." [label="SessionRecord_InitializeAliceSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken()." [label="GroupSendEndorsement_ToToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 sgx_session/SgxClientState_EstablishedRecv()." [label="SgxClientState_EstablishedRecv", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/GroupCipher_DecryptMessage()." [label="GroupCipher_DecryptMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_New()." [label="SenderKeyDistributionMessage_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId()." [label="ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic()." [label="ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_EncryptionKey()." [label="PinHash_EncryptionKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/Pin_LocalHash()." [label="Pin_LocalHash", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Combine()." [label="GroupSendEndorsement_Combine", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." [label="SessionRecord_CurrentRatchetKeyMatches", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmDecryption_New()." [label="Aes256GcmDecryption_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ExpiringProfileKeyCredential_GetExpirationTime()." [label="ExpiringProfileKeyCredential_GetExpirationTime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GeneratePrivateKey()." [label="DeviceTransfer_GeneratePrivateKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_GetUserId()." [label="CallLinkAuthCredentialPresentation_GetUserId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberKeyPair_Generate()." [label="KyberKeyPair_Generate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/HKDF_Derive()." [label="HKDF_Derive", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_with_finalize()." [label="drop_with_finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic()." [label="ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive()." [label="CallLinkAuthCredentialResponse_Receive", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Default#" [label="Default", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify()." [label="CallLinkAuthCredentialPresentation_Verify", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_GetHmacKey()." [label="MessageBackupKey_GetHmacKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_GetSenderRatchetKey()." [label="SignalMessage_GetSenderRatchetKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/Svr2Client_New()." [label="Svr2Client_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_Update()." [label="CryptographicMac_Update", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/rejected_double_colon()." [label="rejected_double_colon", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKey_VerifyAlternateIdentity()." [label="IdentityKey_VerifyAlternateIdentity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Finalize()." [label="ValidatingMac_Finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeBobSession()." [label="SessionRecord_InitializeBobSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_CheckValidContents()." [label="BackupAuthCredentialRequestContext_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetUuidCiphertext()." [label="AuthCredentialPresentation_GetUuidCiphertext", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSessionCipher_Encrypt()." [label="SealedSessionCipher_Encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PlaintextContent_DeserializeAndGetContent()." [label="PlaintextContent_DeserializeAndGetContent", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptBlobWithPaddingDeterministic()." [label="GroupSecretParams_EncryptBlobWithPaddingDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ParseFromServiceIdBinary()." [label="ServiceId_ParseFromServiceIdBinary", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_CheckValidContents()." [label="BackupAuthCredentialRequest_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_NewFresh()." [label="SessionRecord_NewFresh", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/test/connection_proxy_config_accepts_mixed_case_scheme()." [label="connection_proxy_config_accepts_mixed_case_scheme", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmDecryption_VerifyTag()." [label="Aes256GcmDecryption_VerifyTag", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." [label="MessageBackupValidator_Validate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionCipher_DecryptPreKeySignalMessage()." [label="SessionCipher_DecryptPreKeySignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetContentHint()." [label="UnidentifiedSenderMessageContent_GetContentHint", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_CheckValidContents()." [label="GroupSendEndorsement_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/Mp4Sanitizer_Sanitize_File_With_Compounded_MDAT_Boxes()." [label="Mp4Sanitizer_Sanitize_File_With_Compounded_MDAT_Boxes", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New()." [label="BackupAuthCredentialRequestContext_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_GetBackupId()." [label="BackupAuthCredentialPresentation_GetBackupId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_CheckValidContents()." [label="CreateCallLinkCredentialPresentation_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_CalculateChunkSize()." [label="IncrementalMac_CalculateChunkSize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/CiphertextMessage_FromPlaintextContent()." [label="CiphertextMessage_FromPlaintextContent", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPublicKey_Equals()." [label="KyberPublicKey_Equals", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GetPublicParams()." [label="GenericServerSecretParams_GetPublicParams", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_Process()." [label="SenderKeyDistributionMessage_Process", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic()." [label="ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptServiceId()." [label="GroupSecretParams_EncryptServiceId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#SenderKey#" [label="SenderKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_GetType()." [label="BackupAuthCredentialPresentation_GetType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_Finalize()." [label="CryptographicHash_Finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential()." [label="ServerPublicParams_ReceiveReceiptCredential", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ServiceIdLog()." [label="ServiceId_ServiceIdLog", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_clear_proxy()." [label="ConnectionManager_clear_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_GetPublicParams()." [label="ServerSecretParams_GetPublicParams", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256Ctr32_Process()." [label="Aes256Ctr32_Process", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_CreateAllowingEmptyEntropy()." [label="UsernameLink_CreateAllowingEmptyEntropy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ExtractFromSerializedContent()." [label="DecryptionErrorMessage_ExtractFromSerializedContent", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredential_CheckValidContents()." [label="CallLinkAuthCredential_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/Cds2ClientState_New()." [label="Cds2ClientState_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/Fingerprint_New()." [label="Fingerprint_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Equals()." [label="ECPublicKey_Equals", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_FromBackupKeyAndBackupId()." [label="MessageBackupKey_FromBackupKeyAndBackupId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 support/BridgedStringMap_new()." [label="BridgedStringMap_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_New()." [label="CryptographicHash_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Initialize()." [label="IncrementalMac_Initialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_on_network_change()." [label="ConnectionManager_on_network_change", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_IsValid()." [label="AccountEntropyPool_IsValid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Resendable#" [label="Resendable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/SanitizedMetadata_GetDataLen()." [label="SanitizedMetadata_GetDataLen", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/warnings_and_errors_only()." [label="warnings_and_errors_only", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." [label="PreKeySignalMessage_GetSignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_New()." [label="Aes256GcmSiv_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_CheckValidContents()." [label="CreateCallLinkCredentialRequestContext_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_Verify()." [label="GroupSendFullToken_Verify", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_invalid_proxy()." [label="ConnectionManager_set_invalid_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." [label="ServerCertificate_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature()." [label="ServerPublicParams_VerifySignature", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPublicKey_DeserializeWithOffset()." [label="KyberPublicKey_DeserializeWithOffset", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ProtocolAddress_Name()." [label="ProtocolAddress_Name", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_GetSessionVersion()." [label="SessionRecord_GetSessionVersion", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId()." [label="CallLinkSecretParams_DecryptUserId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_CheckValidContents()." [label="CallLinkAuthCredentialPresentation_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/CiphertextMessage_Type()." [label="CiphertextMessage_Type", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic()." [label="ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Generate()." [label="ECPrivateKey_Generate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256Ctr32_New()." [label="Aes256Ctr32_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/Pin_VerifyLocalHash()." [label="Pin_VerifyLocalHash", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse()." [label="CreateCallLinkCredentialRequestContext_ReceiveResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveThumbnailTransitEncryptionKey()." [label="BackupKey_DeriveThumbnailTransitEncryptionKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ParseFromServiceIdString()." [label="ServiceId_ParseFromServiceIdString", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_New()." [label="PreKeySignalMessage_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey()." [label="CallLinkSecretParams_DeriveFromRootKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Initialize()." [label="ValidatingMac_Initialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Verify()." [label="ECPublicKey_Verify", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetBaseKey()." [label="PreKeySignalMessage_GetBaseKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetStructurallyValidV1PresentationBytes()." [label="ProfileKeyCredentialPresentation_GetStructurallyValidV1PresentationBytes", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_New()." [label="SignalMessage_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/new_client()." [label="new_client", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_GetProfileKeyVersion()." [label="ProfileKey_GetProfileKeyVersion", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_Finalize()." [label="CryptographicMac_Finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_New()." [label="OnlineBackupValidator_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_CheckValidContents()." [label="GroupSendFullToken_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ServiceIdBinary()." [label="ServiceId_ServiceIdBinary", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_GenerateDeterministic()." [label="ServerSecretParams_GenerateDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveMediaEncryptionKey()." [label="BackupKey_DeriveMediaEncryptionKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_CheckValidContents()." [label="GroupSendDerivedKeyPair_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic()." [label="CreateCallLinkCredential_PresentDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic()." [label="ServerSecretParams_SignDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 support/BridgedStringMap_insert()." [label="BridgedStringMap_insert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Verify()." [label="Username_Verify", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberKeyPair_GetPublicKey()." [label="KyberKeyPair_GetPublicKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetGroupIdOrEmpty()." [label="UnidentifiedSenderMessageContent_GetGroupIdOrEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/SignalMedia_CheckAvailable()." [label="SignalMedia_CheckAvailable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialRequestContext_GetRequest()." [label="ReceiptCredentialRequestContext_GetRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidationOutcome_getErrorMessage()." [label="MessageBackupValidationOutcome_getErrorMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_GetBackupId()." [label="BackupAuthCredential_GetBackupId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_HasUsableSenderChain()." [label="SessionRecord_HasUsableSenderChain", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PlaintextContent_FromDecryptionErrorMessage()." [label="PlaintextContent_FromDecryptionErrorMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_DeriveBackupKey()." [label="AccountEntropyPool_DeriveBackupKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_Finalize()." [label="OnlineBackupValidator_Finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_New()." [label="CryptographicMac_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic()." [label="CallLinkAuthCredential_PresentDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Proof()." [label="Username_Proof", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic()." [label="CreateCallLinkCredentialRequestContext_NewDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/WebpSanitizer_Sanitize()." [label="WebpSanitizer_Sanitize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmEncryption_Update()." [label="Aes256GcmEncryption_Update", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_FromParts()." [label="MessageBackupKey_FromParts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_CompleteHandshake()." [label="HsmEnclaveClient_CompleteHandshake", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_proxy()." [label="ConnectionManager_set_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GenerateDeterministic()." [label="GenericServerSecretParams_GenerateDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_DeriveSvrKey()." [label="AccountEntropyPool_DeriveSvrKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/rejected()." [label="rejected", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_New()." [label="SenderKeyMessage_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/GroupCipher_EncryptMessage()." [label="GroupCipher_EncryptMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()." [label="log_enabled_in_apps", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration()." [label="GroupSendDerivedKeyPair_ForExpiration", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." [label="GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 sgx_session/SgxClientState_EstablishedSend()." [label="SgxClientState_EstablishedSend", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmEncryption_ComputeTag()." [label="Aes256GcmEncryption_ComputeTag", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Update()." [label="IncrementalMac_Update", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation()." [label="ServerSecretParams_VerifyReceiptCredentialPresentation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendToken_CheckValidContents()." [label="GroupSendToken_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_CheckValidContents()." [label="AuthCredentialPresentation_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Deserialize()." [label="ECPublicKey_Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetUuidCiphertext()." [label="ProfileKeyCredentialPresentation_GetUuidCiphertext", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNewFromContentAndType()." [label="UnidentifiedSenderMessageContentNewFromContentAndType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendToken_ToFullToken()." [label="GroupSendToken_ToFullToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_CheckValidContents()." [label="CallLinkSecretParams_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_CandidatesFrom()." [label="Username_CandidatesFrom", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_GetMasterKey()." [label="GroupSecretParams_GetMasterKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/Cds2Metrics_extract()." [label="Cds2Metrics_extract", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetRedemptionTime()." [label="AuthCredentialPresentation_GetRedemptionTime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/Mp4Sanitizer_Sanitize()." [label="Mp4Sanitizer_Sanitize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_DecryptMessage()." [label="SealedSender_DecryptMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_GetExpiration()." [label="GroupSendEndorsementsResponse_GetExpiration", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey()." [label="GroupSecretParams_DecryptProfileKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptBlobWithPadding()." [label="GroupSecretParams_DecryptBlobWithPadding", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." [label="PreKeyBundle_GetIdentityKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_Encrypt()." [label="Aes256GcmSiv_Encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_AccessKey()." [label="PinHash_AccessKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialResponse_CheckValidContents()." [label="CreateCallLinkCredentialResponse_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New_Java()." [label="UnidentifiedSenderMessageContent_New_Java", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" [label="Plaintext", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New()." [label="UnidentifiedSenderMessageContent_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic()." [label="ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Finalize()." [label="IncrementalMac_Finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_GetRatchetKey()." [label="DecryptionErrorMessage_GetRatchetKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." [label="KyberPreKeyRecord_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkPublicParams_CheckValidContents()." [label="CallLinkPublicParams_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetPniCiphertext()." [label="AuthCredentialPresentation_GetPniCiphertext", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPublicKey_Deserialize()." [label="KyberPublicKey_Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialRequestContext_GetRequest()." [label="ProfileKeyCredentialRequestContext_GetRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionCipher_DecryptSignalMessage()." [label="SessionCipher_DecryptSignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_GetRequest()." [label="CreateCallLinkCredentialRequestContext_GetRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_CheckValidContents()." [label="GroupSendEndorsementsResponse_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_CheckValidContents()." [label="ProfileKeyCredentialPresentation_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_New()." [label="HsmEnclaveClient_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_GenerateDeterministic()." [label="GroupSecretParams_GenerateDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/SanitizedMetadata_GetDataOffset()." [label="SanitizedMetadata_GetDataOffset", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNew()." [label="UnidentifiedSenderMessageContentNew", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeyPublic()." [label="PreKeyBundle_GetKyberPreKeyPublic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential()." [label="ServerPublicParams_ReceiveExpiringProfileKeyCredential", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 media/SanitizedMetadata_GetMetadata()." [label="SanitizedMetadata_GetMetadata", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ProtocolAddress_DeviceId()." [label="ProtocolAddress_DeviceId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_GetAesKey()." [label="MessageBackupKey_GetAesKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_AddFrame()." [label="OnlineBackupValidator_AddFrame", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." [label="PreKeyBundle_GetKyberPreKeySignature", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromSalt()." [label="PinHash_FromSalt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken()." [label="GroupSendEndorsement_CallLinkParams_ToToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_new()." [label="ConnectionManager_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_Serialize()." [label="IdentityKeyPair_Serialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic()." [label="ServerSecretParams_IssueReceiptCredentialDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic()." [label="CallLinkAuthCredentialResponse_IssueDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_censorship_circumvention_enabled()." [label="ConnectionManager_set_censorship_circumvention_enabled", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_VerifyMac()." [label="SignalMessage_VerifyMac", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_UpdateWithOffset()." [label="CryptographicHash_UpdateWithOffset", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_Generate()." [label="AccountEntropyPool_Generate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/CreateOTP()." [label="CreateOTP", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_HashFromParts()." [label="Username_HashFromParts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation()." [label="ServerSecretParams_VerifyProfileKeyCredentialPresentation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_GetReceiverChainKeyValue()." [label="SessionRecord_GetReceiverChainKeyValue", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetSenderCert()." [label="UnidentifiedSenderMessageContent_GetSenderCert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_Validate()." [label="SenderCertificate_Validate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic()." [label="GroupSendEndorsementsResponse_IssueDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/new_client()." [label="new_client", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_EstablishedRecv()." [label="HsmEnclaveClient_EstablishedRecv", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ProtocolAddress_New()." [label="ProtocolAddress_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialPresentation_GetReceiptExpirationTime()." [label="ReceiptCredentialPresentation_GetReceiptExpirationTime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_FromAccountEntropyPool()." [label="MessageBackupKey_FromAccountEntropyPool", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#PreKey#" [label="PreKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GeneratePrivateKeyWithFormat()." [label="DeviceTransfer_GeneratePrivateKeyWithFormat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_New()." [label="PreKeyBundle_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ScannableFingerprint_Compare()." [label="ScannableFingerprint_Compare", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredential_GetReceiptExpirationTime()." [label="ReceiptCredential_GetReceiptExpirationTime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify()." [label="BackupAuthCredentialPresentation_Verify", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberSecretKey_Deserialize()." [label="KyberSecretKey_Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_Create()." [label="UsernameLink_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PrivateKey_Deserialize()." [label="PrivateKey_Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic()." [label="BackupAuthCredentialRequest_IssueDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveBackupId()." [label="BackupKey_DeriveBackupId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation()." [label="ServerSecretParams_VerifyAuthCredentialPresentation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSessionCipher_DecryptToUsmc()." [label="SealedSessionCipher_DecryptToUsmc", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_GetRequest()." [label="BackupAuthCredentialRequestContext_GetRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetIdentityKey()." [label="PreKeySignalMessage_GetIdentityKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_GetServerCertificate()." [label="SenderCertificate_GetServerCertificate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." [label="SenderKeyMessage_VerifySignature", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_GetSignatureKey()." [label="SenderKeyDistributionMessage_GetSignatureKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Hash()." [label="Username_Hash", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/NumericFingerprintGenerator_New()." [label="NumericFingerprintGenerator_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_CheckValidContents()." [label="BackupAuthCredentialPresentation_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/find_drop_log()." [label="find_drop_log", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_Update()." [label="CryptographicHash_Update", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_ipv6_enabled()." [label="ConnectionManager_set_ipv6_enabled", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/accepted()." [label="accepted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetProfileKeyCiphertext()." [label="ProfileKeyCredentialPresentation_GetProfileKeyCiphertext", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify()." [label="CreateCallLinkCredentialPresentation_Verify", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_remote_config()." [label="ConnectionManager_set_remote_config", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmDecryption_Update()." [label="Aes256GcmDecryption_Update", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_CheckValidContents()." [label="CallLinkAuthCredentialResponse_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredential_CheckValidContents()." [label="CreateCallLinkCredential_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionCipher_EncryptMessage()." [label="SessionCipher_EncryptMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_ArchiveCurrentState()." [label="SessionRecord_ArchiveCurrentState", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialResponse_CheckValidContents()." [label="BackupAuthCredentialResponse_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialPresentation_GetReceiptSerial()." [label="ReceiptCredentialPresentation_GetReceiptSerial", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignedPreKeyRecord_New()." [label="SignedPreKeyRecord_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromUsernameMrenclave()." [label="PinHash_FromUsernameMrenclave", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Implicit#" [label="Implicit", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmEncryption_New()." [label="Aes256GcmEncryption_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_GetPublicParams()." [label="GroupSecretParams_GetPublicParams", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey()." [label="GroupSecretParams_DeriveFromMasterKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberKeyPair_GetSecretKey()." [label="KyberKeyPair_GetSecretKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 sgx_session/SgxClientState_CompleteHandshake()." [label="SgxClientState_CompleteHandshake", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionBuilder_ProcessPreKeyBundle()." [label="SessionBuilder_ProcessPreKeyBundle", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_GetCommitment()." [label="ProfileKey_GetCommitment", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_GetBackupLevel()." [label="BackupAuthCredentialPresentation_GetBackupLevel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientMessageForSingleRecipient()." [label="SealedSender_MultiRecipientMessageForSingleRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerPublicParams_CheckValidContents()." [label="GenericServerPublicParams_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredential_GetReceiptLevel()." [label="ReceiptCredential_GetReceiptLevel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_GetPublicParams()." [label="CallLinkSecretParams_GetPublicParams", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_New()." [label="SenderCertificate_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialWithPniResponse_CheckValidContents()." [label="AuthCredentialWithPniResponse_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic()." [label="CreateCallLinkCredentialRequest_IssueDeterministic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GenerateCertificate()." [label="DeviceTransfer_GenerateCertificate", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_Deserialize()." [label="SignalMessage_Deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveLocalBackupMetadataKey()." [label="BackupKey_DeriveLocalBackupMetadataKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId()." [label="GroupSecretParams_DecryptServiceId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Update()." [label="ValidatingMac_Update", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_CheckValidContents()." [label="GenericServerSecretParams_CheckValidContents", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Whisper#" [label="Whisper", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_GetBackupLevel()." [label="BackupAuthCredential_GetBackupLevel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Remove()." [label="GroupSendEndorsement_Remove", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." [label="PreKeyRecord_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_Decrypt()." [label="Aes256GcmSiv_Decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_GetExpiration()." [label="GroupSendFullToken_GetExpiration", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupPublicParams_GetGroupIdentifier()." [label="GroupPublicParams_GetGroupIdentifier", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts()." [label="GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts", tooltip=""]
  }
  subgraph cluster_17 {
    label = "rust/bridge/shared/src/net";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SubmitCaptcha()." [label="RegistrationService_SubmitCaptcha", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/SearchResult_GetAciForUsernameHash()." [label="SearchResult_GetAciForUsernameHash", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ServerMessageAck_SendStatus()." [label="ServerMessageAck_SendStatus", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_AciSearchKey()." [label="KeyTransparency_AciSearchKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_init_listener()." [label="UnauthenticatedChatConnection_init_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_CreateSession()." [label="RegistrationService_CreateSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationSession_GetVerified()." [label="RegistrationSession_GetVerified", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." [label="KeyTransparency_Monitor", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." [label="KeyTransparency_Distinguished", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetUsernameLinkHandle()." [label="RegisterAccountResponse_GetUsernameLinkHandle", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetAccountPassword()." [label="RegisterAccountRequest_SetAccountPassword", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/tokio/TokioAsyncContext_cancel()." [label="TokioAsyncContext_cancel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/SearchResult_GetTimestamp()." [label="SearchResult_GetTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_send()." [label="AuthenticatedChatConnection_send", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ChatConnectionInfo_ip_version()." [label="ChatConnectionInfo_ip_version", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_init_listener()." [label="AuthenticatedChatConnection_init_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RegisterAccount()." [label="RegistrationService_RegisterAccount", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SessionId()." [label="RegistrationService_SessionId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/SearchResult_GetAciIdentityKey()." [label="SearchResult_GetAciIdentityKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationSession_GetNextSmsSeconds()." [label="RegistrationSession_GetNextSmsSeconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_info()." [label="AuthenticatedChatConnection_info", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_disconnect()." [label="AuthenticatedChatConnection_disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new_without_body()." [label="HttpRequest_new_without_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetIdentity()." [label="RegisterAccountResponse_GetIdentity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_E164SearchKey()." [label="KeyTransparency_E164SearchKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ChatConnectionInfo_description()." [label="ChatConnectionInfo_description", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationAccountAttributes_Create()." [label="RegistrationAccountAttributes_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentitySignedPreKey()." [label="RegisterAccountRequest_SetIdentitySignedPreKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetReregistration()." [label="RegisterAccountResponse_GetReregistration", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RequestVerificationCode()." [label="RegistrationService_RequestVerificationCode", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationSession_GetAllowedToRequestCode()." [label="RegistrationSession_GetAllowedToRequestCode", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetSkipDeviceTransfer()." [label="RegisterAccountRequest_SetSkipDeviceTransfer", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_connect()." [label="AuthenticatedChatConnection_connect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_preconnect()." [label="AuthenticatedChatConnection_preconnect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/try_decode()." [label="try_decode", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addPreviousE164()." [label="LookupRequest_addPreviousE164", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SubmitVerificationCode()." [label="RegistrationService_SubmitVerificationCode", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_connect()." [label="UnauthenticatedChatConnection_connect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/SearchResult_GetAciForE164()." [label="SearchResult_GetAciForE164", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ChatConnectionInfo_local_port()." [label="ChatConnectionInfo_local_port", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_new()." [label="CdsiLookup_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addAciAndAccessKey()." [label="LookupRequest_addAciAndAccessKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationSession_GetNextVerificationAttemptSeconds()." [label="RegistrationSession_GetNextVerificationAttemptSeconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RegistrationSession()." [label="RegistrationService_RegistrationSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_UsernameHashSearchKey()." [label="KeyTransparency_UsernameHashSearchKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_info()." [label="UnauthenticatedChatConnection_info", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SubmitPushChallenge()." [label="RegistrationService_SubmitPushChallenge", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetEntitlementBadges()." [label="RegisterAccountResponse_GetEntitlementBadges", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." [label="KeyTransparency_Search", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentityPqLastResortPreKey()." [label="RegisterAccountRequest_SetIdentityPqLastResortPreKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ServerMessageAck_Send()." [label="ServerMessageAck_Send", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RequestPushChallenge()." [label="RegistrationService_RequestPushChallenge", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetEntitlementBackupExpirationSeconds()." [label="RegisterAccountResponse_GetEntitlementBackupExpirationSeconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetEntitlementBackupLevel()." [label="RegisterAccountResponse_GetEntitlementBackupLevel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentityPublicKey()." [label="RegisterAccountRequest_SetIdentityPublicKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_Create()." [label="RegisterAccountRequest_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/SearchResult_GetAccountData()." [label="SearchResult_GetAccountData", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_disconnect()." [label="UnauthenticatedChatConnection_disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationSession_GetRequestedInformation()." [label="RegistrationSession_GetRequestedInformation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/tokio/TokioAsyncContext_new()." [label="TokioAsyncContext_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationSession_GetNextCallSeconds()." [label="RegistrationSession_GetNextCallSeconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_token()." [label="CdsiLookup_token", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_complete()." [label="CdsiLookup_complete", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new_with_body()." [label="HttpRequest_new_with_body", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/make_e164_pair()." [label="make_e164_pair", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addE164()." [label="LookupRequest_addE164", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new()." [label="HttpRequest_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetStorageCapable()." [label="RegisterAccountResponse_GetStorageCapable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetUsernameHash()." [label="RegisterAccountResponse_GetUsernameHash", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_setToken()." [label="LookupRequest_setToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetNumber()." [label="RegisterAccountResponse_GetNumber", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_ResumeSession()." [label="RegistrationService_ResumeSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_add_header()." [label="HttpRequest_add_header", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_new()." [label="LookupRequest_new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_send()." [label="UnauthenticatedChatConnection_send", tooltip=""]
  }
  subgraph cluster_18 {
    label = "rust/bridge/shared/testing";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_19 {
    label = "rust/bridge/shared/testing/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnLoadSync()." [label="TESTING_PanicOnLoadSync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ErrorOnReturnIo()." [label="TESTING_ErrorOnReturnIo", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnBorrow][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_domain_config_with_port_and_cert()." [label="localhost_test_domain_config_with_port_and_cert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnBorrow][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`AsyncArgTypeInfo<'storage>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 TESTING_BridgedStringMap_dump_to_json()." [label="TESTING_BridgedStringMap_dump_to_json", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_env_with_ports()." [label="localhost_test_env_with_ports", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicInBodyIo()." [label="TESTING_PanicInBodyIo", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_InputStreamReadIntoZeroLengthSlice()." [label="TESTING_InputStreamReadIntoZeroLengthSlice", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_JoinStringArray()." [label="TESTING_JoinStringArray", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_RoundTripU32()." [label="TESTING_RoundTripU32", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`AsyncArgTypeInfo<'storage>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#Parse#" [label="Parse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ConnectDnsFailed#" [label="ConnectDnsFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." [label="TESTING_CdsiLookupErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_OtherTestingHandleType_getValue()." [label="TESTING_OtherTestingHandleType_getValue", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[ErrorOnReturn][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ConnectionTimedOut#" [label="ConnectionTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ServerMessageAck_Create()." [label="TESTING_ServerMessageAck_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/impl#[NonSuspendingBackgroundThreadRuntime][`AsyncRuntime<F>`]run_future()." [label="run_future", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ServerCrashed#" [label="ServerCrashed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnLoadAsync()." [label="TESTING_PanicOnLoadAsync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnBorrowSync()." [label="TESTING_PanicOnBorrowSync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#AttestationDataError#" [label="AttestationDataError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_RoundTripI32()." [label="TESTING_RoundTripI32", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_RoundTripU64()." [label="TESTING_RoundTripU64", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnBorrowIo()." [label="TESTING_PanicOnBorrowIo", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`AsyncArgTypeInfo<'storage>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_ReadUnencrypted()." [label="ComparableBackup_ReadUnencrypted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_NonSuspendingBackgroundThreadRuntime_New()." [label="TESTING_NonSuspendingBackgroundThreadRuntime_New", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_FutureFailure()." [label="TESTING_FutureFailure", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnBorrowAsync()." [label="TESTING_PanicOnBorrowAsync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ConnectionManager_newLocalOverride()." [label="TESTING_ConnectionManager_newLocalOverride", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[ErrorOnBorrow][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_FutureProducesPointerType()." [label="TESTING_FutureProducesPointerType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnReturnIo()." [label="TESTING_PanicOnReturnIo", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_TestingHandleType_getValue()." [label="TESTING_TestingHandleType_getValue", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#AttachedToJVM#" [label="AttachedToJVM", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidToken#" [label="InvalidToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#FinalizedByNeon#" [label="FinalizedByNeon", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 keytrans/make_monitoring_data()." [label="make_monitoring_data", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_FutureProducesOtherPointerType()." [label="TESTING_FutureProducesOtherPointerType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#WebSocketIdleTooLong#" [label="WebSocketIdleTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 test_only_fn_returns_123()." [label="test_only_fn_returns_123", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ErrorOnBorrowSync()." [label="TESTING_ErrorOnBorrowSync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ProcessBytestringArray()." [label="TESTING_ProcessBytestringArray", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ReturnStringArray()." [label="TESTING_ReturnStringArray", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#None#" [label="None", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_GetComparableString()." [label="ComparableBackup_GetComparableString", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicInBodySync()." [label="TESTING_PanicInBodySync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_RoundTripU16()." [label="TESTING_RoundTripU16", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_RoundTripU8()." [label="TESTING_RoundTripU8", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ErrorOnBorrowIo()." [label="TESTING_ErrorOnBorrowIo", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 keytrans/TESTING_ChatSearchResult()." [label="TESTING_ChatSearchResult", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_FutureThrowsCustomErrorType()." [label="TESTING_FutureThrowsCustomErrorType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidArgument#" [label="InvalidArgument", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ErrorOnBorrowAsync()." [label="TESTING_ErrorOnBorrowAsync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_FutureSuccess()." [label="TESTING_FutureSuccess", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_GetUnknownFields()." [label="ComparableBackup_GetUnknownFields", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/impl#[`jni::SignalJniError`][`From<CustomErrorType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ErrorOnReturnAsync()." [label="TESTING_ErrorOnReturnAsync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_OnlyCompletesByCancellation()." [label="TESTING_OnlyCompletesByCancellation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnLoadIo()." [label="TESTING_PanicOnLoadIo", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[ErrorOnBorrow][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupResponseConvert()." [label="TESTING_CdsiLookupResponseConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnReturn][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnReturnAsync()." [label="TESTING_PanicOnReturnAsync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#CdsiProtocol#" [label="CdsiProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_ErrorOnReturnSync()." [label="TESTING_ErrorOnReturnSync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicOnReturnSync()." [label="TESTING_PanicOnReturnSync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#RetryAfter42Seconds#" [label="RetryAfter42Seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`AsyncArgTypeInfo<'storage>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_PanicInBodyAsync()." [label="TESTING_PanicInBodyAsync", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ConnectionManager_isUsingProxy()." [label="TESTING_ConnectionManager_isUsingProxy", tooltip=""]
  }
  subgraph cluster_20 {
    label = "rust/bridge/shared/testing/src/net";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_SendRawServerResponse()." [label="TESTING_FakeChatRemoteEnd_SendRawServerResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatRequestGetHeaderValue()." [label="TESTING_ChatRequestGetHeaderValue", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_ReceiveIncomingRequest()." [label="TESTING_FakeChatRemoteEnd_ReceiveIncomingRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_TakeRemote()." [label="TESTING_FakeChatConnection_TakeRemote", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatResponseConvert()." [label="TESTING_ChatResponseConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#RetryAfter42Seconds#" [label="RetryAfter42Seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatServer_GetNextRemote()." [label="TESTING_FakeChatServer_GetNextRemote", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_SendRawServerRequest()." [label="TESTING_FakeChatRemoteEnd_SendRawServerRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." [label="TESTING_RegistrationService_ResumeSessionErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#WebSocketConnectionFailed#" [label="WebSocketConnectionFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_FakeRegistrationSession_CreateSession()." [label="TESTING_FakeRegistrationSession_CreateSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." [label="TESTING_RegistrationService_UpdateSessionErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_Create()." [label="TESTING_FakeChatConnection_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatRequestGetMethod()." [label="TESTING_ChatRequestGetMethod", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationSessionInfoConvert()." [label="TESTING_RegistrationSessionInfoConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingResumeSessionError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChat][ConnectChat]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#DeviceDeregistered#" [label="DeviceDeregistered", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." [label="TESTING_ChatConnectErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatSentRequest_TakeHttpRequest()." [label="TESTING_FakeChatSentRequest_TakeHttpRequest", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingResumeSessionError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingCreateSessionError#RetryAfter42Seconds#" [label="RetryAfter42Seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#ConnectionInvalidated#" [label="ConnectionInvalidated", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_TakeAuthenticatedChat()." [label="TESTING_FakeChatConnection_TakeAuthenticatedChat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#RetryAfter42Seconds#" [label="RetryAfter42Seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_TakeUnauthenticatedChat()." [label="TESTING_FakeChatConnection_TakeUnauthenticatedChat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingCreateSessionError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." [label="TESTING_RegistrationService_CreateSessionErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#RequestHasInvalidHeader#" [label="RequestHasInvalidHeader", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatResponse_Create()." [label="TESTING_FakeChatResponse_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." [label="TESTING_RegistrationService_SubmitVerificationErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#Disconnected#" [label="Disconnected", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatSentRequest_RequestId()." [label="TESTING_FakeChatSentRequest_RequestId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." [label="TESTING_ChatSendErrorConvert", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#AllAttemptsFailed#" [label="AllAttemptsFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#SendFailed#" [label="SendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatServer_Create()." [label="TESTING_FakeChatServer_Create", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingUpdateSessionError#Rejected#" [label="Rejected", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatRequestGetBody()." [label="TESTING_ChatRequestGetBody", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatRequestGetHeaderNames()." [label="TESTING_ChatRequestGetHeaderNames", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#RetryAfter42Seconds#" [label="RetryAfter42Seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#AppExpired#" [label="AppExpired", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#ConnectedElsewhere#" [label="ConnectedElsewhere", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#InvalidConnectionConfiguration#" [label="InvalidConnectionConfiguration", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingUpdateSessionError#RetryAfter42Seconds#" [label="RetryAfter42Seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#IncomingDataInvalid#" [label="IncomingDataInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#WebSocketConnectionReset#" [label="WebSocketConnectionReset", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_SendServerResponse()." [label="TESTING_FakeChatRemoteEnd_SendServerResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#RequestTimedOut#" [label="RequestTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatRequestGetPath()." [label="TESTING_ChatRequestGetPath", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#CodeNotDeliverable#" [label="CodeNotDeliverable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`][`TryFrom<String>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChatBridge][ConnectChatBridge]create_chat_connector()." [label="create_chat_connector", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()." [label="map_into_error", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_InjectConnectionInterrupted()." [label="TESTING_FakeChatRemoteEnd_InjectConnectionInterrupted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." [label="TESTING_RegistrationService_RequestVerificationCodeErrorConvert", tooltip=""]
  }
  subgraph cluster_21 {
    label = "rust/bridge/shared/types/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`SyncInput<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_master_key()." [label="from_master_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]from_backup_info_frame()." [label="from_backup_info_frame", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]verify_tag()." [label="verify_tag", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Idle#" [label="Idle", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#InvalidConnectionState#" [label="InvalidConnectionState", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#SenderKey#" [label="SenderKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Reading#" [label="Reading", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]clear_proxy()." [label="clear_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncSkip]poll_stream_len()." [label="poll_stream_len", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." [label="new_from_static_environment", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()." [label="on_network_change", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_proxy()." [label="set_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`SyncInput<'_>`][Skip]stream_position()." [label="stream_position", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 keytrans/impl#[`net::chat::UnauthenticatedChatConnection`][UnauthenticatedChat]send_unauthenticated()." [label="send_unauthenticated", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_account_entropy_pool()." [label="from_account_entropy_pool", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]compute_tag()." [label="compute_tag", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]initial_request()." [label="initial_request", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Implicit#" [label="Implicit", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInputState<'_>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Ready#" [label="Ready", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`SyncInput<'_>`][Skip]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_recv()." [label="established_recv", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#ConnectionEstablishment#" [label="ConnectionEstablishment", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_parts()." [label="from_parts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#ConnectionEstablishment#" [label="ConnectionEstablishment", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()." [label="complete_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_remote_config()." [label="set_remote_config", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]initial_request()." [label="initial_request", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]endpoint_connection()." [label="endpoint_connection", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]is_using_proxy()." [label="is_using_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncSkip]poll_stream_position()." [label="poll_stream_position", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Pending#" [label="Pending", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_censorship_circumvention_enabled()." [label="set_censorship_circumvention_enabled", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_backup_key_and_backup_id()." [label="from_backup_key_and_backup_id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Whisper#" [label="Whisper", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Prod#" [label="Prod", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Default#" [label="Default", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_invalid_proxy()." [label="set_invalid_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<FrameValidationError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()." [label="env", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/network_change_event_debounced()." [label="network_change_event_debounced", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_send()." [label="established_send", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncSkip]poll_skip()." [label="poll_skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#InvalidConnectionState#" [label="InvalidConnectionState", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Skipping#" [label="Skipping", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/can_create_connection_manager()." [label="can_create_connection_manager", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/cannot_connect_through_invalid_proxy()." [label="cannot_connect_through_invalid_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 incremental_mac/impl#[IncrementalMac][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]get_mut()." [label="get_mut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`SyncInput<'_>`][Read]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Staging#" [label="Staging", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#Connection#" [label="Connection", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()." [label="complete_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_send()." [label="established_send", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#PreKey#" [label="PreKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_ipv6_enabled()." [label="set_ipv6_enabled", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`SyncInput<'_>`][Skip]stream_len()." [label="stream_len", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_recv()." [label="established_recv", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#Connection#" [label="Connection", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" [label="Plaintext", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#String#" [label="String", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()." [label="validate_serialization", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Resendable#" [label="Resendable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#Io#" [label="Io", tooltip=""]
  }
  subgraph cluster_22 {
    label = "rust/bridge/shared/types/src/ffi";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#AppExpired#" [label="AppExpired", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut [u8; LEN]`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/native_handle_cast()." [label="native_handle_cast", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectedElsewhere#" [label="ConnectedElsewhere", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/FfiDirection#Sending#" [label="Sending", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Serialized<T>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SvrRotationMachineTooManySteps#" [label="SvrRotationMachineTooManySteps", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/futures/impl#[`FutureResultReporter<T>`][ResultReporter]report_to()." [label="report_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<u8>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_queue_empty()." [label="received_queue_empty", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`usernames::ProofVerificationFailure`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameBadDiscriminatorCharacter#" [label="UsernameBadDiscriminatorCharacter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UntrustedIdentity#" [label="UntrustedIdentity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotBeEmpty#" [label="UsernameDiscriminatorCannotBeEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#DuplicatedMessage#" [label="DuplicatedMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]provide_retry_after_seconds()." [label="provide_retry_after_seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/ArgTypeInfo#borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[IoError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<T>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SvrDataMissing#" [label="SvrDataMissing", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidKey#" [label="InvalidKey", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[NullPointerError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotBeSingleDigit#" [label="UsernameDiscriminatorCannotBeSingleDigit", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()." [label="write_result_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/futures/catch_unwind()." [label="catch_unwind", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8; LEN]`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#FingerprintParsingError#" [label="FingerprintParsingError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidType#" [label="InvalidType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameLinkInvalidEntropyDataLength#" [label="UsernameLinkInvalidEntropyDataLength", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_read()." [label="do_read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#NetworkProtocol#" [label="NetworkProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[AccountEntropyPool][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#IoError#" [label="IoError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`][`From<Box<[T]>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][SyncInputStream]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#BackupValidation#" [label="BackupValidation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[ZkGroupDeserializationFailure][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnknownError#" [label="UnknownError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidSession#" [label="InvalidSession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[Uuid][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][InputStream]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_unknown_fields()." [label="provide_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#Cancelled#" [label="Cancelled", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotBeZero#" [label="UsernameDiscriminatorCannotBeZero", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_alerts()." [label="received_alerts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`zkgroup::Timestamp`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ChatServiceInactive#" [label="ChatServiceInactive", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[FutureCancelled][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidUtf8String#" [label="InvalidUtf8String", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalFfiError][Deref]deref()." [label="deref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[T][UpcastAsAny]upcast_as_any()." [label="upcast_as_any", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/FfiDirection#Receiving#" [label="Receiving", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidSignature#" [label="InvalidSignature", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#FingerprintVersionMismatch#" [label="FingerprintVersionMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#RequestTimedOut#" [label="RequestTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[T][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[Vec<u8>]>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]provide_retry_after_seconds()." [label="provide_retry_after_seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`std::str::Utf8Error`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<String>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/native_handle_cast_mut()." [label="native_handle_cast_mut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<&str>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[u8]>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()." [label="check", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut T`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameLinkInvalid#" [label="UsernameLinkInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`AsType<T, P>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[FfiChatListenerStruct]make_listener()." [label="make_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#RateLimited#" [label="RateLimited", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<u32>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/SimpleArgTypeInfo#convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_message_backup::ReadError`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[&T]`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#LegacyCiphertextVersion#" [label="LegacyCiphertextVersion", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UnexpectedPanic][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[ZkGroupDeserializationFailure][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameMissingSeparator#" [label="UsernameMissingSeparator", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[NullPointerError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedMutableSliceOf<T>`]as_slice_mut()." [label="as_slice_mut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]provide_retry_after_seconds()." [label="provide_retry_after_seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalFfiError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[UnexpectedPanic][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnknownCiphertextVersion#" [label="UnknownCiphertextVersion", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_retry_after_seconds()." [label="provide_retry_after_seconds", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/futures/run_future_on_runtime()." [label="run_future_on_runtime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`SpecificServiceId<_>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SvrRestoreFailed#" [label="SvrRestoreFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalFfiError][`From<T>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`http::uri::InvalidUri`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMessage#" [label="InvalidMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[Timestamp][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[PinError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ProtobufError#" [label="ProtobufError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalFfiError]downcast_ref()." [label="downcast_ref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_core::E164`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameTooShort#" [label="UsernameTooShort", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#DeviceDeregistered#" [label="DeviceDeregistered", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/futures/impl#[`PromiseCompleter<T>`][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][InputStream]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_skip()." [label="do_skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[BytestringArray][`FromIterator<S>`]from_iter()." [label="from_iter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/ArgTypeInfo#load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_incoming_message()." [label="received_incoming_message", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]store_session()." [label="store_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[ZkGroupVerificationFailure][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UnexpectedPanic][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_net::cdsi::LookupResponse`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`ConstPointer<T>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]provide_address()." [label="provide_address", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidRegistrationId#" [label="InvalidRegistrationId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`usernames::ProofVerificationFailure`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#CdsiInvalidToken#" [label="CdsiInvalidToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[FutureCancelled][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#VerificationFailure#" [label="VerificationFailure", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`[u8; LEN]`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[T][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_message_backup::ReadError`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&str`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[Uuid][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameCannotBeEmpty#" [label="UsernameCannotBeEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionInvalidated#" [label="ConnectionInvalidated", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()." [label="null", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnsupportedMediaInput#" [label="UnsupportedMediaInput", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()." [label="run_ffi_safe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InternalError#" [label="InternalError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`ConstPointer<T>`][`From<&T>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_address()." [label="provide_address", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameBadNicknameCharacter#" [label="UsernameBadNicknameCharacter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameCannotStartWithDigit#" [label="UsernameCannotStartWithDigit", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[String]>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][SyncInputStream]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[ZkGroupVerificationFailure][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<String>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_net::chat::Response`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[Timestamp][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidAttestationData#" [label="InvalidAttestationData", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Result<T, E>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#CallbackError#" [label="CallbackError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<u32>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/futures/impl#[`FutureResultReporter<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[PinError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidState#" [label="InvalidState", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#" [label="InvalidArgument", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`zkgroup::Timestamp`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[&T]`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<&T>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[IoError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionTimedOut#" [label="ConnectionTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorTooLarge#" [label="UsernameDiscriminatorTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotHaveLeadingZeros#" [label="UsernameDiscriminatorCannotHaveLeadingZeros", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&T`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionFailed#" [label="ConnectionFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`SpecificServiceId<_>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SealedSenderSelfSend#" [label="SealedSenderSelfSend", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnrecognizedMessageVersion#" [label="UnrecognizedMessageVersion", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_tries_remaining()." [label="provide_tries_remaining", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()." [label="as_slice", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`http::uri::InvalidUri`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`std::str::Utf8Error`][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameTooLong#" [label="UsernameTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[T][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[DeviceTransferError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]provide_uuid()." [label="provide_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidSenderKeySession#" [label="InvalidSenderKeySession", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Serialized<T>`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#NullParameter#" [label="NullParameter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidKeyIdentifier#" [label="InvalidKeyIdentifier", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#WebSocket#" [label="WebSocket", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_uuid()." [label="provide_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][`ArgTypeInfo<'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_message_backup::ReadError`][FfiError]provide_unknown_fields()." [label="provide_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[BytestringArray]into_boxed_parts()." [label="into_boxed_parts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[DeviceTransferError][FfiError]code()." [label="code", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMediaInput#" [label="InvalidMediaInput", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`]into_box()." [label="into_box", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]describe()." [label="describe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]connection_interrupted()." [label="connection_interrupted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`()`][ResultTypeInfo]convert_into()." [label="convert_into", tooltip=""]
  }
  subgraph cluster_23 {
    label = "rust/bridge/shared/types/src/jni";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<String>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/BridgeOrIoError#Bridge#" [label="Bridge", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[u8]>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<SanitizerError<ParseError>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureCompleter<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u16][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/catch_unwind()." [label="catch_unwind", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][InputStream]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_load_session()." [label="do_load_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`JObject<'a>`][`From<JavaCompletableFuture<'a, T>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[PinError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&T>`][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity()." [label="do_get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_incoming_message()." [label="received_incoming_message", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()." [label="native_handle_cast", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Jni#" [label="Jni", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_get_pre_key()." [label="do_get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedPanic#" [label="UnexpectedPanic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()." [label="make_single_message_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#" [label="NullPointer", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[InvalidSessionId][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<JObject<'a>>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PlaintextContent#" [label="PlaintextContent", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#CallbackException#" [label="CallbackException", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()." [label="jobject_from_native_handle", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::PushTokenType`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<E>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SenderKeyMessage#" [label="SenderKeyMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_object()." [label="new_object", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`[u8; LEN]`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_core::E164`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[Timestamp][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[IoError][`From<BridgeOrIoError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][SyncInputStream]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." [label="get_object_with_native_handle", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChatBridge][ConnectChatBridge]create_chat_connector()." [label="create_chat_connector", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[TestingError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/not_ready_for_verification()." [label="not_ready_for_verification", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Vec<&[u8]>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`(Vec<u8>, Vec<u8>)`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`JavaCompletableFuture<'a, T>`][`From<JObject<'a>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[&T]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." [label="do_save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/args/test_jni_class_name()." [label="test_jni_class_name", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalCryptoError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[libsignal_net::registration::RequestedInformation]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`][SessionStore]store_session()." [label="store_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()." [label="run_ffi_safe", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadJniParameter#" [label="BadJniParameter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()." [label="find_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`usernames::ProofVerificationFailure`][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&str>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`AsType<T, P>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/args/impl#[`JniArgs<'local, 'obj_ref, JObject<'output>, LEN>`]for_nested_frame()." [label="for_nested_frame", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_exceptions_and_convert_result()." [label="check_exceptions_and_convert_result", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ZkGroupVerificationFailure][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[bool][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/check_error()." [label="check_error", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()." [label="call_method_checked", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[&T]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalProtocolError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[DeviceTransferError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." [label="to_java_string", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][InputStream]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedJniResultType#" [label="UnexpectedJniResultType", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChatBridge]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`][ResultReporter]report_to()." [label="report_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#" [label="IntegerOverflow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()." [label="make_object_array", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/ArgTypeInfo#load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChat][ConnectChat]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()." [label="new_instance", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<u32>`][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_alerts()." [label="received_alerts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ConnectTimedOut][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[UpdateSessionError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`CiphertextMessageRef<'a>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&T`][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame()." [label="with_local_frame", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`libsignal_message_backup::ReadError`][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::cds2::Cds2Metrics`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::chat::Response`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_local_registration_id()." [label="do_get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_get_kyber_pre_key()." [label="do_get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/box_primitive_if_needed()." [label="box_primitive_if_needed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/save_class_loader()." [label="save_class_loader", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/BridgeOrProtocolError#Bridge#" [label="Bridge", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<String>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameLinkError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/BridgeOrProtocolError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()." [label="with_local_frame", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_remove_pre_key()." [label="do_remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u64][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." [label="connection_interrupted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_mark_kyber_pre_key_used()." [label="do_mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_get_signed_pre_key()." [label="do_get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity_key_pair()." [label="do_get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[WebSocketServiceError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IncorrectArrayLength#" [label="IncorrectArrayLength", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`zkgroup::Timestamp`][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][SyncInputStream]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()." [label="do_save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Box<[u8]>>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()." [label="do_read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/jni_name_from_binary_name()." [label="jni_name_from_binary_name", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." [label="message_type", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/BridgeOrIoError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[ResumeSessionError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u8][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/attach_and_log_on_error()." [label="attach_and_log_on_error", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert_to_exception()." [label="convert_to_exception", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/SimpleArgTypeInfo#convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/ArgTypeInfo#borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_skip()." [label="do_skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame_returning_local()." [label="with_local_frame_returning_local", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()." [label="do_save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." [label="native_handle_from_message", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_queue_empty()." [label="received_queue_empty", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#" [label="BadArgument", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&str`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[EnclaveError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]class_name()." [label="class_name", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/run_future_on_runtime()." [label="run_future_on_runtime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_static_method_checked()." [label="call_static_method_checked", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<libsignal_core::E164>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u8][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u64][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_load_sender_key()." [label="do_load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()." [label="protocol_address_to_jobject", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/impl#[`ClassName<'_>`][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#Jni#" [label="Jni", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[CreateSessionError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Vec<u8>>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`zkgroup::Timestamp`][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ConnectChatBridge>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()." [label="check_exceptions", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." [label="do_store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PreKeySignalMessage#" [label="PreKeySignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()." [label="check_jobject_type", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/session_not_found()." [label="session_not_found", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ZkGroupDeserializationFailure][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<T>`][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u16][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()." [label="do_save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[AccountEntropyPool][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()." [label="expect_no_exceptions", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ConnectChatBridge>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Null#" [label="Null", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&mut T`][`SimpleArgTypeInfo<'_>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/args/test_jni_signature()." [label="test_jni_signature", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/args/test_jni_arg()." [label="test_jni_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<u32>`][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]as_obj()." [label="as_obj", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()." [label="do_store_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." [label="do_is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[Timestamp][`ResultTypeInfo<'_>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`ParseErrorReport<ParseError>`][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[Vec<u8>]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[IoError][JniError]to_throwable()." [label="to_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/test/binary_name_conversion()." [label="binary_name_conversion", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::CreateSession`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/real_jni_find_class()." [label="real_jni_find_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[InvalidUri][MessageOnlyExceptionJniError]exception_class()." [label="exception_class", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]into_listener()." [label="into_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/throw_error()." [label="throw_error", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()." [label="get_object_with_serialization", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[bool][`SimpleArgTypeInfo<'a>`]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SignalMessage#" [label="SignalMessage", tooltip=""]
  }
  subgraph cluster_24 {
    label = "rust/bridge/shared/types/src/net";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#RateLimited#" [label="RateLimited", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]into_unauthenticated()." [label="into_unauthenticated", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/make_route_provider()." [label="make_route_provider", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/sum_task()." [label="sum_task", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()." [label="received_server_request", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/impl#[DiscardingReporter][ResultReporter]report_to()." [label="report_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]init_listener()." [label="init_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpRequest]add_header()." [label="add_header", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#WaitingForListener#" [label="WaitingForListener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection][`AsRef<tokio::sync::RwLock<MaybeChatConnection>>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]create_session()." [label="create_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#Server#" [label="Server", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][`AsyncRuntime<F>`]run_future()." [label="run_future", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpMethod][`TryFrom<String>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#" [label="Running", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()." [label="establish_chat_connection", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioContextCancellation][Future]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]run_future_boxed()." [label="run_future_boxed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]take_remaining()." [label="take_remaining", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]handle()." [label="handle", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][AsyncRuntimeBase]cancel()." [label="cancel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#ParseError#" [label="ParseError", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[UnauthenticatedChatConnection]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[ServerMessageAck]take()." [label="take", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/cancellation()." [label="cancellation", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#InvalidToken#" [label="InvalidToken", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[LookupRequest]lock()." [label="lock", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()." [label="init_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]send()." [label="send", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpStatus][`TryFrom<u16>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/impl#[`NotifyingReporter<R>`][ResultReporter]report_to()." [label="report_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpRequest]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[UnauthenticatedChatConnection][`AsRef<tokio::sync::RwLock<MaybeChatConnection>>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#NoTokenInResponse#" [label="NoTokenInResponse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#TemporarilyEvicted#" [label="TemporarilyEvicted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[ServerMessageAck]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." [label="new_routes", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()." [label="connect_registration_chat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]into_authenticated()." [label="into_authenticated", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[`ProvidedAccountAttributes<'a>`][`From<&AccountAttributes>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()." [label="disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]preconnect()." [label="preconnect", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/impl#[`(T, Arc<Mutex<Option<T>>>)`][ResultReporter]report_to()." [label="report_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()." [label="info", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]resume_session()." [label="resume_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]into_event_listener()." [label="into_event_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/async_tokio_runtime_reporting_does_not_block()." [label="async_tokio_runtime_reporting_does_not_block", tooltip=""]
  }
  subgraph cluster_25 {
    label = "rust/bridge/shared/types/src/node";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_save_signed_pre_key()." [label="do_save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_save_pre_key()." [label="do_save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`AsyncArgTypeInfo<'a>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Serialized<T>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/AsyncArgTypeInfo#save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`[u8; LEN]`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/register()." [label="register", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[u64][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_remove_pre_key()." [label="do_remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ConnectChatBridge>`][`AsyncArgTypeInfo<'a>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[u8]>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`AsyncArgTypeInfo<'storage>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[Timestamp][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`AsyncArgTypeInfo<'a>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Serialized<T>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]connection_interrupted()." [label="connection_interrupted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[String]>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[u64][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream][InputStream]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_message_backup::ReadError`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`ChannelOnItsOriginalThread<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/clone_from_array_of_wrappers()." [label="clone_from_array_of_wrappers", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RecoveryVerificationFailed#" [label="RecoveryVerificationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#VerificationNotDeliverable#" [label="VerificationNotDeliverable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]make_listener()." [label="make_listener", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/calculate_checksum_for_immutable_buffer()." [label="calculate_checksum_for_immutable_buffer", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/can_convert_js_number_to_int()." [label="can_convert_js_number_to_int", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<Handle<'a, V>>`][`OrUndefined<'a>`]or_undefined()." [label="or_undefined", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[libsignal_message_backup::FoundUnknownField]`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[String][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()." [label="js_error_to_rust", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_mark_kyber_pre_key_used()." [label="do_mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`uuid::Uuid`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ArgTypeInfo<'a, 'a>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_core::E164`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/SimpleArgTypeInfo#convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`AsyncArgTypeInfo<'storage>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`BorrowedJsBoxedBridgeHandle<'a, Borrowed>`]from_wrapper()." [label="from_wrapper", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`FutureResultReporter<T, E, U>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException]from_value()." [label="from_value", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/make_array()." [label="make_array", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`SpecificServiceId<_>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[`NodeSyncInputStream<'_>`][SyncInputStream]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()." [label="no_extra_properties", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`http::uri::InvalidUri`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()." [label="new_js_error", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[SessionRecord]`][`AsyncArgTypeInfo<'a>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`std::io::Error`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[SessionRecord]`][`AsyncArgTypeInfo<'a>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`FutureResultReporter<T, E, U>`][ResultReporter]report_to()." [label="report_to", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/to_key_value()." [label="to_key_value", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[Timestamp][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer][Deref]deref()." [label="deref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentArrayOfBorrowedJsBoxedBridgeHandles<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&mut dyn SyncInputStream`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity()." [label="do_get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[String][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&str`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_get_kyber_pre_key()." [label="do_get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[&T]`][`AsyncArgTypeInfo<'storage>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`AsyncArgTypeInfo<'a>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream][InputStream]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::chat::Response`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`AsyncArgTypeInfo<'a>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_skip()." [label="do_skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_save_identity()." [label="do_save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[&T]`][`AsyncArgTypeInfo<'storage>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`SanitizerError<ParseError>`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`zkgroup::Timestamp`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[`NodeSyncInputStream<'_>`][SyncInputStream]skip()." [label="skip", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[Vec<u8>]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::RegisterResponseBadge`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`ChannelOnItsOriginalThread<'_>`][`AsyncRuntime<F>`]run_future()." [label="run_future", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_get_session()." [label="do_get_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`BorrowedJsBoxedBridgeHandle<'a, Borrowed>`][Deref]deref()." [label="deref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Result<T, neon::result::Throw>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<UpdateSessionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`AsyncArgTypeInfo<'a>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RegistrationLock#" [label="RegistrationLock", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_local_registration_id()." [label="do_get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<CreateSessionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/run_future_on_runtime()." [label="run_future_on_runtime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][SessionStore]store_session()." [label="store_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`AssertSendSafe<T>`][Future]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`zkgroup::Timestamp`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`()`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`][Deref]deref()." [label="deref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_get_pre_key()." [label="do_get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[`NodeSyncInputStream<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentArrayOfBorrowedJsBoxedBridgeHandles<T>`]value_refs()." [label="value_refs", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." [label="do_is_trusted", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/catch_unwind()." [label="catch_unwind", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_alerts()." [label="received_alerts", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::SignedPreKeyBody<Box<[u8]>>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#VerificationSendFailed#" [label="VerificationSendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ArgTypeInfo<'a, 'a>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[S][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#DeviceTransferPossibleNotSkipped#" [label="DeviceTransferPossibleNotSkipped", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentArrayOfBorrowedJsBoxedBridgeHandles<T>`][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory]from_connection_manager_wrapper()." [label="from_connection_manager_wrapper", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[bool][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_incoming_message()." [label="received_incoming_message", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RequestInvalid#" [label="RequestInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`BorrowedJsBoxedBridgeHandle<'a, Borrowed>`][DerefMut]deref_mut()." [label="deref_mut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::CreateSession`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::PushTokenType`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/ArgTypeInfo#load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&mut dyn SyncInputStream`][`ArgTypeInfo<'storage, 'context>`]load_from()." [label="load_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AsType<T, P>`][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ArgTypeInfo<'storage, 'context>`]borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/node_registerErrors()." [label="node_registerErrors", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ConnectChatBridge>`][`AsyncArgTypeInfo<'a>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[AccountEntropyPool][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_read()." [label="do_read", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory][ConnectChatBridge]create_chat_connector()." [label="create_chat_connector", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_save_kyber_pre_key()." [label="do_save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RequestRejected#" [label="RequestRejected", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/AsyncArgTypeInfo#load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/clone_from_wrapper()." [label="clone_from_wrapper", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Handle<'a, T>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<ResumeSessionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()." [label="do_save_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()." [label="do_get_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_get_signed_pre_key()." [label="do_get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[Roots][Finalize]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::infra::errors::RetryLater`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CallbackError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`PromiseSettler<T, E>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`AsyncArgTypeInfo<'a>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[bool][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`AsyncArgTypeInfo<'a>`]save_async_arg()." [label="save_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`AsyncArgTypeInfo<'a>`]load_async_arg()." [label="load_async_arg", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[libsignal_net::registration::RegisterResponseBadge]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'_>`][Drop]drop()." [label="drop", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#String#" [label="String", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][`From<&str>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CancellationError][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity_key()." [label="do_get_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[String]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[u32][SimpleArgTypeInfo]convert_from()." [label="convert_from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/ArgTypeInfo#borrow()." [label="borrow", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[libsignal_net::registration::RequestedInformation]>`][`ResultTypeInfo<'a>`]convert_into()." [label="convert_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_queue_empty()." [label="received_queue_empty", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CallbackError]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." [label="into_throwable", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChat][ConnectChat]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_save_session()." [label="do_save_session", tooltip=""]
  }
  subgraph cluster_26 {
    label = "rust/bridge/shared/types/src/support";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<Option<T>>`]some_if_needed()." [label="some_if_needed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse()." [label="parse", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`][IntoIterator]into_iter()." [label="into_iter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap]take()." [label="take", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/extend_lifetime()." [label="extend_lifetime", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#Id#" [label="Id", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/AsyncRuntimeBase#cancel()." [label="cancel", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`][IntoParallelIterator]into_par_iter()." [label="into_par_iter", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap][DerefMut]deref_mut()." [label="deref_mut", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#" [label="NotSupported", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/TransformHelperImpl#option_map_into()." [label="option_map_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`][`From<T>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<T>`]into()." [label="into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`HashMap<String, String>`][`From<BridgedStringMap>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse_single_chunk()." [label="parse_single_chunk", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap]with_capacity()." [label="with_capacity", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/describe_panic()." [label="describe_panic", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[NoOpAsyncRuntime][`AsyncRuntime<F>`]run_future()." [label="run_future", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/TransformHelperImpl#ok_if_needed()." [label="ok_if_needed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap][Deref]deref()." [label="deref", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[u64][`From<CancellationId>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<Result<T, E>>`]ok_if_needed()." [label="ok_if_needed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_ok_if_needed()." [label="test_ok_if_needed", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<Option<T>>`]option_map_into()." [label="option_map_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_option_map_into()." [label="test_option_map_into", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[CancellationId][`From<u64>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/TransformHelperImpl#some_if_needed()." [label="some_if_needed", tooltip=""]
  }
  subgraph cluster_27 {
    label = "rust/core/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-core 0.1.0 key_agreement()." [label="key_agreement", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 generation()." [label="generation", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 signatures()." [label="signatures", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 benches()." [label="benches", tooltip=""]
  }
  subgraph cluster_28 {
    label = "rust/core/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceIdKind][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType]value()." [label="value", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." [label="conversions", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#" [label="DjbPublicKey", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." [label="round_trip_service_id_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/curve_error_impls_std_error()." [label="curve_error_impls_std_error", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/test/gen_e164()." [label="gen_e164", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyLength#" [label="BadKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." [label="round_trip_test", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()." [label="service_id_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#" [label="Pni", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/case_insensitive()." [label="case_insensitive", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()." [label="try_scoped", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()." [label="parse_from_service_id_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()." [label="service_id_string", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_binary_lengths()." [label="rejects_invalid_binary_lengths", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_bytes()." [label="round_trip_through_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/array_prepend()." [label="array_prepend", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()." [label="cmp", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][Ord]cmp()." [label="cmp", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/logging()." [label="logging", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_signature()." [label="calculate_signature", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()." [label="kind", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering()." [label="ordering", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceIdKind][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." [label="round_trip_service_id_fixed_width_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]from_djb_public_key_bytes()." [label="from_djb_public_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey][`From<PrivateKeyData>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyType#" [label="BadKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[u8][`From<ServiceIdKind>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()." [label="from_uuid_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/accepts_ios_system_story_aci()." [label="accepts_ios_system_story_aci", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_string()." [label="round_trip_service_id_string", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_string()." [label="round_trip_through_string", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering_consistency()." [label="ordering_consistency", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()." [label="calculate_signature", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()." [label="public_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164][FromStr]from_str()." [label="from_str", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_string()." [label="parse_from_service_id_string", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#" [label="Aci", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][ConstantTimeEq]ct_eq()." [label="ct_eq", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`PartialEq<SpecificServiceId<KIND>>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceIdKind][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_fixed_width_binary()." [label="service_id_fixed_width_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]to_be_bytes()." [label="to_be_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()." [label="calculate_signature_for_multipart_message", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid()." [label="from_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`TryFrom<ServiceId>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]to_protocol_address()." [label="to_protocol_address", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`PartialEq<ServiceId>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()." [label="parse_from_service_id_string", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_fixed_width_binary()." [label="parse_from_service_id_fixed_width_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][Hash]hash()." [label="hash", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_uuid_strings()." [label="rejects_invalid_uuid_strings", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]from_be_bytes()." [label="from_be_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`PartialOrd<Self>`]partial_cmp()." [label="partial_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()." [label="service_id_string", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#" [label="Djb", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_binary()." [label="parse_from_service_id_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Ord]cmp()." [label="cmp", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()." [label="raw_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#" [label="DjbPrivateKey", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()." [label="service_id_fixed_width_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]device_id()." [label="device_id", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()." [label="name", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message()." [label="verify_signature_for_multipart_message", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#" [label="Pni", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_types()." [label="rejects_invalid_types", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()." [label="calculate_agreement", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair][`TryFrom<PrivateKey>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_data()." [label="key_data", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_decode_size()." [label="test_decode_size", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#NoKeyTypeIdentifier#" [label="NoKeyTypeIdentifier", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()." [label="service_id_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#" [label="Aci", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[DeviceId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]key_type()." [label="key_type", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()." [label="key_type", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()." [label="parse_from_service_id_fixed_width_binary", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_agreement()." [label="calculate_agreement", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 address/try_parse_hyphenated()." [label="try_parse_hyphenated", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`From<PublicKeyData>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." [label="test_large_signatures", tooltip=""]
  }
  subgraph cluster_29 {
    label = "rust/core/src/curve";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_constant_time_cmp()." [label="test_constant_time_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_signature()." [label="test_signature", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]private_key_bytes()." [label="private_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_lt()." [label="ct_is_lt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/expand_top_bit()." [label="expand_top_bit", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()." [label="derive_public_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_agreement()." [label="calculate_agreement", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_signatures()." [label="test_random_signatures", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature()." [label="calculate_signature", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_agreements()." [label="test_random_agreements", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_ct_is_zero()." [label="test_ct_is_zero", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_ct_is_lt()." [label="test_ct_is_lt", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_agreement()." [label="test_agreement", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_eq()." [label="ct_is_eq", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey][`From<[u8; PRIVATE_KEY_LENGTH]>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_select()." [label="ct_select", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_zero()." [label="ct_is_zero", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/constant_time_cmp()." [label="constant_time_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_ct_is_eq()." [label="test_ct_is_eq", tooltip=""]
  }
  subgraph cluster_30 {
    label = "rust/crypto/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." [label="aes_gcm", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 benches()." [label="benches", tooltip=""]
  }
  subgraph cluster_31 {
    label = "rust/crypto/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadCiphertext#" [label="BadCiphertext", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha1#" [label="HmacSha1", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]verify_tag()." [label="verify_tag", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#" [label="InvalidNonceSize", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 error/Error#UnknownAlgorithm#" [label="UnknownAlgorithm", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/test/aes_cbc_test()." [label="aes_cbc_test", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()." [label="aes_256_cbc_decrypt", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()." [label="aes_256_cbc_encrypt", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]from_key()." [label="from_key", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]update()." [label="update", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidKeySize#" [label="InvalidKeySize", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]compute_tag()." [label="compute_tag", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update()." [label="update", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha1#" [label="Sha1", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()." [label="process", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadKeyOrIv#" [label="BadKeyOrIv", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/EncryptionError#BadKeyOrIv#" [label="BadKeyOrIv", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha512#" [label="Sha512", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update_and_get()." [label="update_and_get", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]new()." [label="new", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#" [label="InvalidTag", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]update()." [label="update", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha256#" [label="Sha256", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha256#" [label="HmacSha256", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()." [label="setup_gcm", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidInputSize#" [label="InvalidInputSize", tooltip=""]
  }
  subgraph cluster_32 {
    label = "rust/crypto/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm_smoke_test()." [label="aes_gcm_smoke_test", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr_long_test()." [label="aes_ctr_long_test", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." [label="test_kat", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm_wycheproof_kats()." [label="aes_gcm_wycheproof_kats", tooltip=""]
    "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr_smoke_test()." [label="aes_ctr_smoke_test", tooltip=""]
  }
  subgraph cluster_33 {
    label = "rust/device-transfer/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo device-transfer 0.1.0 create_self_signed_cert()." [label="create_self_signed_cert", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#Pkcs8#" [label="Pkcs8", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 private_key_to_der()." [label="private_key_to_der", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 build_cert()." [label="build_cert", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#KeySpecific#" [label="KeySpecific", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#" [label="InternalError", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 impl#[KeyFormat][`From<u8>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 build_self_signed_name()." [label="build_self_signed_name", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 impl#[Error][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 create_rsa_private_key()." [label="create_rsa_private_key", tooltip=""]
    "rust-analyzer cargo device-transfer 0.1.0 Error#KeyDecodingFailed#" [label="KeyDecodingFailed", tooltip=""]
  }
  subgraph cluster_34 {
    label = "rust/device-transfer/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo device-transfer 0.1.0 test_generate_and_parse()." [label="test_generate_and_parse", tooltip=""]
  }
  subgraph cluster_35 {
    label = "rust/keytrans";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-keytrans 0.0.1 main()." [label="main", tooltip=""]
  }
  subgraph cluster_36 {
    label = "rust/keytrans/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-keytrans 0.0.1 bench_verify_search()." [label="bench_verify_search", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 benches()." [label="benches", tooltip=""]
  }
  subgraph cluster_37 {
    label = "rust/keytrans/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyManagement#" [label="ThirdPartyManagement", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()." [label="right", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]latest_log_position()." [label="latest_log_position", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()." [label="parent", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." [label="get_consistency_verifier_permutations", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/next_monitor()." [label="next_monitor", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]into_data_update()." [label="into_data_update", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/proof_to_hash()." [label="proof_to_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/into_sorted_pairs()." [label="into_sorted_pairs", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#" [label="ThirdPartyAuditing", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/check_consistency_metadata()." [label="check_consistency_metadata", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]entries()." [label="entries", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]check_search_consistency()." [label="check_search_consistency", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_most_recent()." [label="for_most_recent", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sibling()." [label="sibling", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." [label="verify_monitor", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/serialize_key()." [label="serialize_key", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." [label="verify_full_tree_head", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/generate_challenge()." [label="generate_challenge", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_path()." [label="monitoring_path", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#InvalidInput#" [label="InvalidInput", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#" [label="VerificationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[NodeData][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_error()." [label="verify_timestamps_error", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/parent_hash()." [label="parent_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/frontier()." [label="frontier", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[VerifiedSearchResult]are_all_roots_equal()." [label="are_all_roots_equal", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]byte()." [label="byte", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_distinguished()." [label="verify_distinguished", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_tree_head_tbs()." [label="marshal_tree_head_tbs", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<vrf::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/tree_hash()." [label="tree_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[SlimSearchRequest]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithSize#" [label="WithSize", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/encode_to_curve_try_and_increment()." [label="encode_to_curve_try_and_increment", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/leaf_hash()." [label="leaf_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/right()." [label="right", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/test/test_evaluate_batch_proof()." [label="test_evaluate_batch_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#ProofMismatch#" [label="ProofMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]greatest_version()." [label="greatest_version", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/start_and_n()." [label="start_and_n", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()." [label="proof_to_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#Absent#" [label="Absent", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/left_step()." [label="left_step", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." [label="verify_search_internal", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithRoot#" [label="WithRoot", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#InvalidProofElement#" [label="InvalidProofElement", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/left()." [label="left", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()." [label="root", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData][`From<StoredMonitoringData>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/is_leaf()." [label="is_leaf", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_update_value()." [label="marshal_update_value", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate()." [label="evaluate", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/can_verify_search_response()." [label="can_verify_search_response", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/leaf_hash()." [label="leaf_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()." [label="batch_copath", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]as_bytes()." [label="as_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredAccountData][`From<AccountData>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/root_prop()." [label="root_prop", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails()." [label="test_proof_to_hash_fails", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredMonitoringData][`From<MonitoringData>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." [label="verify_consistency_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[`FullSearchResponse<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<InvalidState>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead]into_last_tree_head()." [label="into_last_tree_head", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]update()." [label="update", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/test/test_verify_consistency_proof()." [label="test_verify_consistency_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/node_width()." [label="node_width", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#MalformedChain#" [label="MalformedChain", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_distinguished()." [label="verify_distinguished", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_hash_proof()." [label="get_hash_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]get_associated_key()." [label="get_associated_key", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<MalformedProof>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#Unexpected#" [label="Unexpected", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/first_parent_to_the_right()." [label="first_parent_to_the_right", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_encode_to_curve_try_and_increment()." [label="test_encode_to_curve_try_and_increment", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()." [label="root", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()." [label="left", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sub_proof()." [label="sub_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/move_within()." [label="move_within", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#MalformedProof#" [label="MalformedProof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/full_subtrees()." [label="full_subtrees", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_tree_head_signature()." [label="verify_tree_head_signature", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()." [label="get_proto_field", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/Error#InvalidProof#" [label="InvalidProof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_search()." [label="verify_search", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[VersionedId]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/parent_step()." [label="parent_step", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/direct_path()." [label="direct_path", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/consistency_proof()." [label="consistency_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/log2()." [label="log2", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_timestamp()." [label="verify_timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/parent()." [label="parent", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_version()." [label="for_version", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate_proof()." [label="evaluate_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/evaluate_vrf_proof()." [label="evaluate_vrf_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[VerifiedSearchResult]tree_root()." [label="tree_root", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]next_monitor()." [label="next_monitor", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()." [label="root", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." [label="evaluate_batch_proof", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_model()." [label="direct_path_model", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/make_timestamp()." [label="make_timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/right_step()." [label="right_step", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/test_most_recent_proof_guide()." [label="test_most_recent_proof_guide", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/test/test_commit()." [label="test_commit", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()." [label="process", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]consume()." [label="consume", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/test_version_proof_guide()." [label="test_version_proof_guide", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#RequiredFieldMissing#" [label="RequiredFieldMissing", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/is_full_subtree()." [label="is_full_subtree", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/commit()." [label="commit", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" [label="Verifier", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]insert()." [label="insert", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_monitor()." [label="verify_monitor", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<log::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead][`From<(TreeHead, [u8; 32])>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]next_id()." [label="next_id", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#NoVerificationNeeded#" [label="NoVerificationNeeded", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_frontier()." [label="monitoring_frontier", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." [label="test_math", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/Error#InvalidCurvePoint#" [label="InvalidCurvePoint", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithTimestamp#" [label="WithTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/execute_guide()." [label="execute_guide", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search()." [label="verify_search", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/full_monitoring_path()." [label="full_monitoring_path", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[NodeData]marshal()." [label="marshal", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_success()." [label="verify_timestamps_success", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]insert()." [label="insert", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_proof_to_hash()." [label="test_proof_to_hash", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]start_monitoring()." [label="start_monitoring", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_eager()." [label="direct_path_eager", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ContactMonitoring#" [label="ContactMonitoring", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#ValueTooLong#" [label="ValueTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#EmptyChain#" [label="EmptyChain", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()." [label="level", tooltip=""]
    "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]result()." [label="result", tooltip=""]
  }
  subgraph cluster_38 {
    label = "rust/media/src/sanitize";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Parse#" [label="Parse", tooltip=""]
    "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo signal-media 0.1.0 sanitize/error/impl#[`SanitizerError<E>`][`From<mediasan_common::Error<E>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo signal-media 0.1.0 sanitize/mp4/sanitize()." [label="sanitize", tooltip=""]
  }
  subgraph cluster_39 {
    label = "rust/message-backup";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[DeriveVisitUnknownFields][CustomizeCallback]enumeration()." [label="enumeration", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[DeriveVisitUnknownFields][CustomizeCallback]field()." [label="field", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[DeriveVisitUnknownFields][CustomizeCallback]oneof()." [label="oneof", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[DeriveVisitUnknownFields][CustomizeCallback]message()." [label="message", tooltip=""]
  }
  subgraph cluster_40 {
    label = "rust/message-backup/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 hmac_only()." [label="hmac_only", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 cursor_without_appended_hash()." [label="cursor_without_appended_hash", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." [label="validation", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`YieldingReader<R>`][AsyncSkip]poll_stream_position()." [label="poll_stream_position", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()." [label="benchmark_multiple_backup_sizes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." [label="parse_and_validate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_only()." [label="parse_only", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`YieldingReader<CursorFactory<&B>>`][ReaderFactory]make_reader()." [label="make_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac_and_segment_and_parse()." [label="decrypt_and_decompress_and_hmac_and_segment_and_parse", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`YieldingReader<R>`][AsyncSkip]poll_stream_len()." [label="poll_stream_len", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`YieldingReader<R>`][AsyncSkip]poll_skip()." [label="poll_skip", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac_and_segment_and_parse_and_validate()." [label="decrypt_and_decompress_and_hmac_and_segment_and_parse_and_validate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac_and_segment()." [label="decrypt_and_decompress_and_hmac_and_segment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac()." [label="decrypt_and_decompress_and_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`YieldingReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_using_full_backup_reader()." [label="validate_using_full_backup_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." [label="process", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_only()." [label="decrypt_only", tooltip=""]
  }
  subgraph cluster_41 {
    label = "rust/message-backup/benches/generation";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_frames()." [label="generate_frames", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/frame()." [label="frame", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()." [label="generate_backup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_contents()." [label="generate_backup_contents", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_info()." [label="generate_backup_info", tooltip=""]
  }
  subgraph cluster_42 {
    label = "rust/message-backup/examples";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 emit_proto()." [label="emit_proto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 read_file()." [label="read_file", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 write_bytes()." [label="write_bytes", tooltip=""]
  }
  subgraph cluster_43 {
    label = "rust/message-backup/macros/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[FieldNameAttr]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 test/has_unknown_fields()." [label="has_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_has_unknown_fields_struct_impl()." [label="derive_has_unknown_fields_struct_impl", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_visit_unknown_fields_impl()." [label="derive_visit_unknown_fields_impl", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][ToTokens]to_tokens()." [label="to_tokens", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 FieldType#Container#" [label="Container", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][`From<Field>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[FieldType][`From<syn::Type>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 test/message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 test/oneof()." [label="oneof", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 FieldType#Single#" [label="Single", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_has_unknown_fields_enum_impl()." [label="derive_has_unknown_fields_enum_impl", tooltip=""]
  }
  subgraph cluster_44 {
    label = "rust/message-backup/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/PadCompressed#Pad#" [label="Pad", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupExpirationTimerUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/StickerError#PackError#" [label="PackError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#" [label="RemoteBackup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`UnvalidatedHmacReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactPni#" [label="DuplicateContactPni", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#EnumValue#" [label="EnumValue", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupChangeChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat_item()." [label="add_chat_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Chat`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::BackupLocator`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`proto::TestMessage`]fake_data()." [label="fake_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_multiple_messages()." [label="read_length_delimited_multiple_messages", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkEnabledUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#Field#" [label="Field", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AccountData`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ProfileChangeChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/test/parse_hex_bytes()." [label="parse_hex_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#EmptyFrame#" [label="EmptyFrame", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_e164()." [label="replace_e164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::CallLink`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::InvalidAttachmentLocator`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Root#" [label="Root", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_too_short()." [label="frame_from_raw_too_short", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingAccountData#" [label="MissingAccountData", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_ad_hoc_call()." [label="add_ad_hoc_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_account_data()." [label="rejects_missing_account_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[ReadError]with_error_only()." [label="with_error_only", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::Member`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#NotificationProfileError#" [label="NotificationProfileError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_foreign_key()." [label="rejects_missing_foreign_key", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_invitation_revoked_update::Invitee`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkResetUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactAci#" [label="DuplicateContactAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()." [label="empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#HmacMismatch#" [label="HmacMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/oneof_extra_string()." [label="oneof_extra_string", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkDisabledUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Skipped`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestApprovalUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::BodyRange`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMembershipAccessLevelChangeUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupCall`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::FailedTransaction`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 export/aes_cbc_encrypt()." [label="aes_cbc_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#MapValue#" [label="MapValue", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::SubscriberData`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/PathPart#Field#" [label="Field", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#BackupCompletion#" [label="BackupCompletion", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaStaticDispatch<M>`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::NotificationProfile`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SelfInvitedToGroupUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAttributesAccessLevelChangeUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Store][ReferencedTypes]color_reference()." [label="color_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/MetadataError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupNameUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/oneof_extra_message()." [label="oneof_extra_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#I32#" [label="I32", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`UnvalidatedHmacReader<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()." [label="make_encrypted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationSelfInvitedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_nested()." [label="extra_nested", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_to_json()." [label="convert_to_json", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAnnouncementOnlyChangeUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact::NotRegistered`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Group`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GenericGroupUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/has_unknown_fields_top_level()." [label="has_unknown_fields_top_level", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::quote::QuotedAttachment`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." [label="chat_item_order", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/fill_buffer_from_reader()." [label="fill_buffer_from_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]validate_all()." [label="validate_all", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::ChatItem`]test_data_wrong_author()." [label="test_data_wrong_author", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_folder()." [label="add_chat_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/scramble_content_type()." [label="scramble_content_type", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Decode#" [label="Decode", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/varint_read_with_empty_target_slice()." [label="varint_read_with_empty_target_slice", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_truncated()." [label="read_length_delimited_truncated", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#Json#" [label="Json", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateDistributionListId#" [label="DuplicateDistributionListId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]collect_all()." [label="collect_all", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." [label="from_part", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::IncomingMessageDetails`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateSelfRecipient#" [label="DuplicateSelfRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[ReadError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_invalid_hmac()." [label="frame_from_raw_invalid_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::MobileCoinTxoIdentification`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_notification_profile()." [label="add_notification_profile", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupAttributeBlob`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 padded_length()." [label="padded_length", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::AccessControl`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<ValidateOnly>`]new_validator()." [label="new_validator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[M][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." [label="duplicate_contact_id", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ReferencedTypes#is_same_reference()." [label="is_same_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." [label="read_all_frames", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]has_unknown_fields()." [label="has_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/binary_proto_to_json()." [label="binary_proto_to_json", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::OutgoingMessageDetails`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." [label="add_frame_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[Error][`From<VerifyHmacError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StandardMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact::Registered`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Sent`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::Email`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[ValidateOnly][ReferencedTypes]is_same_reference()." [label="is_same_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#DeviceTransfer#" [label="DeviceTransfer", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[ValidateOnly][ReferencedTypes]color_reference()." [label="color_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/StickerError#InvalidId#" [label="InvalidId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::direct_story_reply_message::TextReply`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`FormatPath<&[PathPart]>`][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_from_json()." [label="convert_from_json", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/VerifyHmacError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Failed`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberLeftUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_string()." [label="extra_string", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SessionSwitchoverChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupSequenceOfRequestsAndCancelsUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sort_recipient_ids()." [label="sort_recipient_ids", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/hmac_sha256()." [label="hmac_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/PathPart#MapValue#" [label="MapValue", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#InvalidHmac#" [label="InvalidHmac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()." [label="parse_and_add_frame", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#TooShort#" [label="TooShort", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_repeated_message()." [label="extra_repeated_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][`Lookup<CustomColorId, <M as ReferencedTypes>::CustomColorReference>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_sticker_pack()." [label="add_sticker_pack", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Store][ReferencedTypes]is_same_reference()." [label="is_same_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#StickerError#" [label="StickerError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/VerifyHmacError#HmacMismatch#" [label="HmacMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Read`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[HmacMismatchError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()." [label="add_chat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::AttachmentLocator`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateCallLinkRootKey#" [label="DuplicateCallLinkRootKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_all_folder()." [label="rejects_duplicate_all_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseHexError#WrongNumberOfDigits#" [label="WrongNumberOfDigits", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/oneof_extra_int()." [label="oneof_extra_int", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_failed_decrypt()." [label="frame_failed_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberJoinedByLinkUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<Store>`]new_store()." [label="new_store", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberAddedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactAttachment`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()." [label="new_unencrypted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#EmptyArray#" [label="EmptyArray", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::MessageAttachment`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#RecipientError#" [label="RecipientError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#ProtoJsonParse#" [label="ProtoJsonParse", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." [label="duplicate_non_contact_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseHexError#InvalidHexCharacter#" [label="InvalidHexCharacter", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AdHocCall`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ExpirationTimerChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#I64#" [label="I64", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()." [label="derive", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#BackupInfoError#" [label="BackupInfoError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Field#" [label="Field", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingAllChatFolder#" [label="MissingAllChatFolder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DirectStoryReplyMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 export/hmac_checksum()." [label="hmac_checksum", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact::Name`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()." [label="read_next", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#" [label="String", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/likely_empty()." [label="likely_empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][`Lookup<PinOrder, <M as ReferencedTypes>::RecipientReference>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." [label="zero_recipient_id", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAdminStatusUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." [label="rejects_missing_all_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAvatarUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::Name`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberPendingAdminApproval`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_style::CustomChatColor`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()." [label="new_encrypted_compressed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ReferencedTypes#color_reference()." [label="color_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#ChatFolderError#" [label="ChatFolderError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DistributionListItem`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::TransactionDetails`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/parse_aci()." [label="parse_aci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][ReportUnusualTimestamp]report()." [label="report", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupSelfInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::Transaction`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingSelfRecipient#" [label="MissingSelfRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." [label="rejects_duplicate_id", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/StickerError#DuplicateId#" [label="DuplicateId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::RemoteDeletedMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateGroupMasterKey#" [label="DuplicateGroupMasterKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." [label="insert_or_error", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::PostalAddress`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_repeated_uint64()." [label="extra_repeated_uint64", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][`AsRef<BackupMeta>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_empty()." [label="read_length_delimited_empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#ProtoJsonPrint#" [label="ProtoJsonPrint", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_int64()." [label="extra_int64", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`][VerifyHmac]verify_hmac()." [label="verify_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateAllChatFolder#" [label="DuplicateAllChatFolder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`ForbidZeroLengthTargetReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ColorError#NotOpaque#" [label="NotOpaque", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/assert_valid()." [label="assert_valid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]next_username()." [label="next_username", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::DirectionlessMessageDetails`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SimpleChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberBanned`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::UsernameLink`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()." [label="replace_service_id", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/no_extra_fields()." [label="no_extra_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ViewOnceMessage`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_multiple_account_data()." [label="rejects_multiple_account_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." [label="allows_lone_all_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/unknown_fields_in_nested_message()." [label="unknown_fields_in_nested_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationDeclinedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateReleaseNotesRecipient#" [label="DuplicateReleaseNotesRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()." [label="add_account_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::BackupInfo`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[ConvertJsonError][`From<crate::parse::ParseError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/PathPart#Repeated#" [label="Repeated", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupUnknownInviteeUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Viewed`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_item()." [label="add_chat_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#U32#" [label="U32", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`ReadResult<R>`]and_then()." [label="and_then", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatStyle`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." [label="pni_matching_aci_is_okay", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`UnvalidatedHmacReader<R>`][VerifyHmac]verify_hmac()." [label="verify_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/TryFromWith#try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." [label="extra_map", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaProtoDescriptors<proto::TestMessage>`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`MessageAndLen<L, M>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Sticker`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ReleaseNotes`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_v0_known()." [label="message_backup_key_v0_known", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestCanceledUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()." [label="fake_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationAcceptedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_known()." [label="message_backup_key_known", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaProtoDescriptors<proto::TestMessageWithExtraFields>`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat()." [label="add_chat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[ValidateOnly][ReferencedTypes]recipient_reference()." [label="recipient_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/MetadataError#InvalidMediaRootBackupKey#" [label="InvalidMediaRootBackupKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#NoFrames#" [label="NoFrames", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()." [label="read_all", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`MacReader<R, CoreWrapper<HmacCore<CoreWrapper<CtVariableCoreWrapper<Sha256VarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, OidSha256>>>>>`]new_sha256()." [label="new_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/PadCompressed#NoPad#" [label="NoPad", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()." [label="owned_parts", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupSnapshot`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupCreationUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()." [label="try_into_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]collect_unknown_fields()." [label="collect_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerPack`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::PaymentNotification`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#U64#" [label="U64", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()." [label="add_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#ChatError#" [label="ChatError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/never_visits()." [label="never_visits", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#" [label="Branch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_round_trip()." [label="frame_round_trip", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Pending`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()." [label="fake", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[FoundUnknownField][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/missing_self()." [label="missing_self", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Reaction`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next_varint()." [label="read_next_varint", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#CallError#" [label="CallError", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SelfInvitedOtherUserToGroupUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#ProtoEncode#" [label="ProtoEncode", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[MetadataError][`From<TimestampError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#MultipleAccountData#" [label="MultipleAccountData", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#BackupValidation#" [label="BackupValidation", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Self_`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][`LookupPair<RecipientId, MinimalRecipientData, <M as ReferencedTypes>::RecipientReference>`]lookup_pair()." [label="lookup_pair", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::IndividualCall`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberJoinedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#InvalidProtobuf#" [label="InvalidProtobuf", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/parse_hex_bytes()." [label="parse_hex_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Text`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Store][ReferencedTypes]recipient_reference()." [label="recipient_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::AccountSettings`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatFolder`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkAdminApprovalUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_enum()." [label="extra_enum", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#Bool#" [label="Bool", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/uuid_bytes_to_aci()." [label="uuid_bytes_to_aci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." [label="zero_chat_id", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Repeated#" [label="Repeated", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationInvitedMembersUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 export/pad_gzipped_bucketed()." [label="pad_gzipped_bucketed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()." [label="add_frame", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Delivered`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 export/gzip_compress()." [label="gzip_compress", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::Phone`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#AccountData#" [label="AccountData", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_bytes()." [label="extra_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[S][ProtoWireCast]wire_cast_as()." [label="wire_cast_as", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]find_unknown_field()." [label="find_unknown_field", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ReferencedTypes#recipient_reference()." [label="recipient_reference", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupDescriptionUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Quote`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()." [label="by_parsing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::LocalLocator`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`MessageAndLen<L, M>`]into_reader()." [label="into_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::IAPSubscriberData`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationDroppedMembersUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/mismatched_hmac()." [label="mismatched_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`]check_for_duplicate_recipients()." [label="check_for_duplicate_recipients", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberPendingProfileKey`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#Parse#" [label="Parse", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ThreadMergeChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LinkPreview`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactE164#" [label="DuplicateContactE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]scramble()." [label="scramble", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LearnedProfileChatUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberRemovedUpdate`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Color][`TryFrom<u32>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." [label="accept", tooltip=""]
  }
  subgraph cluster_45 {
    label = "rust/message-backup/src/backup";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()." [label="test_value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Reaction#" [label="Reaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UpdateMessageShouldBeDirectionless#" [label="UpdateMessageShouldBeDirectionless", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[EnumAsString][`SerializeAs<E>`]serialize_as()." [label="serialize_as", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[`std::cell::RefCell<UnusualTimestampTracker>`][ReportUnusualTimestamp]report()." [label="report", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`proto::contact_attachment::Phone`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#DuplicateDay#" [label="DuplicateDay", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ThreadMergeNotFromAci#" [label="ThreadMergeNotFromAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/mistakenly_seconds()." [label="mistakenly_seconds", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#InvalidSubscriberId#" [label="InvalidSubscriberId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/StickerPackError#InvalidKey#" [label="InvalidKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_contact()." [label="destination_contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingTransitCdnKey#" [label="MissingTransitCdnKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Invalid#" [label="Invalid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#" [label="CallLink", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." [label="valid_account_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_hard_error()." [label="timestamp_hard_error", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." [label="valid_individual_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/local_locator()." [label="local_locator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Backup#" [label="Backup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[UsernameLink][`TryFrom<proto::account_data::UsernameLink>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MissingName#" [label="MissingName", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateUnknown#" [label="ChatUpdateUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Skipped#" [label="Skipped", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ThreadMergeNotInContactThread#" [label="ThreadMergeNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Ringing#" [label="Ringing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." [label="test_value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#PniWithoutE164#" [label="PniWithoutE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Sticker#" [label="Sticker", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidCallStarter#" [label="InvalidCallStarter", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderInvalidName#" [label="AllFolderInvalidName", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[`&T`][ReportUnusualTimestamp]report()." [label="report", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotInContactThread#" [label="ChatUpdateNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_voice_message_data()." [label="from_proto_voice_message_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/sticker_pack()." [label="sticker_pack", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#MissingDestination#" [label="MissingDestination", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotExcludeChats#" [label="AllFolderMustNotExcludeChats", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[ExpirationTooShort][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[Key][`TryFrom<Vec<u8>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_distribution_list()." [label="destination_distribution_list", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ReleaseNoteMessageNotInReleaseNoteChat#" [label="ReleaseNoteMessageNotInReleaseNoteChat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup][`From<CompletedBackup<Store>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/hashutil/impl#[`HashBytesAllAtOnce<[u8; N]>`][Hash]hash()." [label="hash", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/InvalidExpiration#TooShort#" [label="TooShort", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryFailureReason#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/attachment_locator()." [label="attachment_locator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Wednesday#" [label="Wednesday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/account_data_custom_colors_ordering()." [label="account_data_custom_colors_ordering", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LearnedProfileIsEmpty#" [label="LearnedProfileIsEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/with()." [label="with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#StickerMessage#" [label="StickerMessage", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Link#" [label="Link", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Joined#" [label="Joined", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#InvalidProfileKey#" [label="InvalidProfileKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Contact`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`From<Destination<FullRecipientData>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#InvalidUsername#" [label="InvalidUsername", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Payment#" [label="Payment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/impl#[ValidateOnly][Method]value()." [label="value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[FullRecipientData][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#Deleted#" [label="Deleted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Failed#" [label="Failed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UnexpectedUpdateInReleaseNotes#" [label="UnexpectedUpdateInReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectStoryReplyNotInContactThread#" [label="DirectStoryReplyNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallType#Video#" [label="Video", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/hashutil/impl#[AssumedRandomInputHasher]map_with_capacity()." [label="map_with_capacity", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingDigest#" [label="MissingDigest", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[NotificationProfileError][`From<ColorError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedMessageType#" [label="RevisionWithMismatchedMessageType", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#AllExcept#" [label="AllExcept", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListItemMissing#" [label="DistributionListItemMissing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberUnknown#" [label="ExcludedMemberUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedDirection#" [label="RevisionWithMismatchedDirection", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[IapSubscriberData][`TryFrom<proto::account_data::IAPSubscriberData>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#FilePointer#" [label="FilePointer", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<Recipient>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#SessionSwitchoverNotInContactThread#" [label="SessionSwitchoverNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectStoryReply#" [label="DirectStoryReply", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#" [label="NoLocator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotFromAci#" [label="ChatUpdateNotFromAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidCallLink#" [label="InvalidCallLink", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][ReportUnusualTimestamp]report()." [label="report", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/message_sticker()." [label="message_sticker", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[UsernameData][`TryFrom<(String, Option<proto::account_data::UsernameLink>)>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_accepted()." [label="timestamp_accepted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[IdentityKeyHex][`SerializeAs<libsignal_protocol::IdentityKey>`]serialize_as()." [label="serialize_as", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Tuesday#" [label="Tuesday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#Locator#" [label="Locator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ProfileChangeNotFromContact#" [label="ProfileChangeNotFromContact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`AdHocCall<R>`][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#" [label="DistributionList", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidExpiration#" [label="InvalidExpiration", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownType#" [label="UnknownType", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustIncludeGroupChats#" [label="AllFolderMustIncludeGroupChats", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MissingId#" [label="MissingId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DirectionDiscriminants#Directionless#" [label="Directionless", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#GiftBadge#" [label="GiftBadge", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#" [label="Group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Past#" [label="Past", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/impl#[Store][Method]value()." [label="value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#PaymentNotificationNotInContactThread#" [label="PaymentNotificationNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Directionless#" [label="Directionless", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#boxed_value()." [label="boxed_value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Pending#" [label="Pending", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInWrongIndividualChat#" [label="MessageFromContactInWrongIndividualChat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." [label="valid_chat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#UnknownType#" [label="UnknownType", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/IapSubscriptionId#PlayStorePurchaseToken#" [label="PlayStorePurchaseToken", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#OutgoingMessageFrom#" [label="OutgoingMessageFrom", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." [label="valid_chat_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidE164#" [label="InvalidE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Thursday#" [label="Thursday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Text#" [label="Text", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#OutgoingRing#" [label="OutgoingRing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInNoteToSelf#" [label="MessageFromContactInNoteToSelf", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Deref]deref()." [label="deref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`proto::contact_attachment::Email`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberDuplicate#" [label="DistributionListMemberDuplicate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[PackId][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[ChatItemMessageDiscriminants][`From<&ChatItemMessage<M>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()." [label="backup_from_frames", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." [label="valid_all_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#RemoteDeleted#" [label="RemoteDeleted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ViewOnce#" [label="ViewOnce", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LongText#" [label="LongText", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#PaymentNotification#" [label="PaymentNotification", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryFailureReason#Network#" [label="Network", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#VoiceMessage#" [label="VoiceMessage", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Transit#" [label="Transit", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupUpdate#" [label="GroupUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[CallLink]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_rejected()." [label="timestamp_rejected", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#" [label="Contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_contact()." [label="make_contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#MissingExpireTimerVersion#" [label="MissingExpireTimerVersion", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupChangeIsEmpty#" [label="GroupChangeIsEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidContactUsername#" [label="InvalidContactUsername", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[CallLink][`TryFromWith<proto::CallLink, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat()." [label="make_chat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#DuplicateId#" [label="DuplicateId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." [label="valid_call_link", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[E164][`TryFrom<u64>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." [label="valid_backup_locator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#MissingIapSubscriptionId#" [label="MissingIapSubscriptionId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidWeekday#" [label="InvalidWeekday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidRingerRecipient#" [label="InvalidRingerRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#MissingSettings#" [label="MissingSettings", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat_item()." [label="make_chat_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#" [label="ReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_sticker_pack()." [label="valid_sticker_pack", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/call_link()." [label="call_link", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidId#" [label="InvalidId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessageDiscriminants#RemoteDeleted#" [label="RemoteDeleted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#List#" [label="List", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`OutgoingSend<R>`][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." [label="valid_ad_hoc_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#" [label="Self_", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::DistributionListItem`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_voice_message_data()." [label="test_voice_message_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidRootKey#" [label="InvalidRootKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Quote#" [label="Quote", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[ContactData]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#InvalidPackId#" [label="InvalidPackId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#NoRingerRecipient#" [label="NoRingerRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#EmptyCurrency#" [label="EmptyCurrency", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingMediaName#" [label="MissingMediaName", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_duration_without_start()." [label="expiration_duration_without_start", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#" [label="Group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#" [label="Contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberUnknown#" [label="DistributionListMemberUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#ChatStyle#" [label="ChatStyle", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#NicknameIsPresentButEmpty#" [label="NicknameIsPresentButEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidId#" [label="InvalidId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()." [label="from_millis", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Read#" [label="Read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#ReleaseNotes#" [label="ReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/folder()." [label="folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidGroup#" [label="InvalidGroup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[TextRange][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/InvalidExpiration#TooSoon#" [label="TooSoon", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotFromContact#" [label="ChatUpdateNotFromContact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MemberWrongKind#" [label="MemberWrongKind", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingId#" [label="MissingId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NonStandardMessageHasRevisions#" [label="NonStandardMessageHasRevisions", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/mistakenly_microseconds()." [label="mistakenly_microseconds", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Sunday#" [label="Sunday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationNotStarted#" [label="ExpirationNotStarted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[ServiceIdAsString][`SerializeAs<T>`]serialize_as()." [label="serialize_as", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[ClockTime][`TryFrom<u32>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#DonationSubscription#" [label="DonationSubscription", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupUpdateNotFromContact#" [label="GroupUpdateNotFromContact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyInvalid#" [label="DistributionListPrivacyInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/requires_destination()." [label="requires_destination", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#DuplicatePinnedOrder#" [label="DuplicatePinnedOrder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryFailureReason#IdentityKeyMismatch#" [label="IdentityKeyMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#DistributionList#" [label="DistributionList", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NoDirection#" [label="NoDirection", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustShowMuted#" [label="AllFolderMustShowMuted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampOrForever#Timestamp#" [label="Timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Saturday#" [label="Saturday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#ContactHasNoIdentifiers#" [label="ContactHasNoIdentifiers", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#ViewOnce#" [label="ViewOnce", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberHasNoServiceIds#" [label="DistributionListMemberHasNoServiceIds", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IncomingMessageFromContactWithoutAciOrE164#" [label="IncomingMessageFromContactWithoutAciOrE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessageDiscriminants#Standard#" [label="Standard", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectionlessMessage#" [label="DirectionlessMessage", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#All#" [label="All", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Accepted#" [label="Accepted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Friday#" [label="Friday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/backup_locator()." [label="backup_locator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#Accepted#" [label="Accepted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DonationRequestNotFromReleaseNotesRecipient#" [label="DonationRequestNotFromReleaseNotesRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#OnlyWith#" [label="OnlyWith", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustIncludeIndividualChats#" [label="AllFolderMustIncludeIndividualChats", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_hours()." [label="from_hours", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#All#" [label="All", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]as_millis()." [label="as_millis", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LearnedProfileUpdateNotFromContact#" [label="LearnedProfileUpdateNotFromContact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<Self>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/validate_chat_recipient()." [label="validate_chat_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Standard#" [label="Standard", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BadUsernameEntropyLength#" [label="BadUsernameEntropyLength", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#CallStarterHasNoAci#" [label="CallStarterHasNoAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#" [label="Self_", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotShowOnlyUnread#" [label="AllFolderMustNotShowOnlyUnread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat()." [label="chat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownCallStarter#" [label="UnknownCallStarter", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`proto::contact_attachment::Name`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberWrongKind#" [label="DistributionListMemberWrongKind", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#SessionSwitchoverFromReleaseNotes#" [label="SessionSwitchoverFromReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_valid_sender_account()." [label="is_valid_sender_account", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_recipient()." [label="make_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#InvalidId#" [label="InvalidId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DirectionDiscriminants#Incoming#" [label="Incoming", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/individual_call()." [label="individual_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidAuthor#" [label="InvalidAuthor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." [label="distribution_id", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/all_folder()." [label="all_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/impl#[RecipientId][Renumbered]renumbered()." [label="renumbered", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Contact#" [label="Contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][`Lookup<CustomColorId, Arc<CustomChatColor>>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`AsRef<Self>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::Sticker`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedAuthor#" [label="RevisionWithMismatchedAuthor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidIdentityKey#" [label="InvalidIdentityKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#" [label="Group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/impl#[ChatId][Renumbered]renumbered()." [label="renumbered", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::CallLink`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]as_secs()." [label="as_secs", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Monday#" [label="Monday", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Registration#Registered#" [label="Registered", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationMismatch#" [label="ExpirationMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IndividualCallNotInContactThread#" [label="IndividualCallNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[BackupKeyHex][`SerializeAs<libsignal_account_keys::BackupKey>`]serialize_as()." [label="serialize_as", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidProfileKey#" [label="InvalidProfileKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`AsRef<MinimalRecipientData>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]test_recipient()." [label="test_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Future#" [label="Future", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Delivered#" [label="Delivered", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidId#" [label="InvalidId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyAllExceptWithEmptyMembers#" [label="DistributionListPrivacyAllExceptWithEmptyMembers", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#CallNotFromContact#" [label="CallNotFromContact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()." [label="minimal_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Update#" [label="Update", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/can_serialize()." [label="can_serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/ad_hoc_call()." [label="ad_hoc_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotHaveSpecificIncludes#" [label="AllFolderMustNotHaveSpecificIncludes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/standard_message()." [label="standard_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#InvalidUuid#" [label="InvalidUuid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BadUsernameServerIdLength#" [label="BadUsernameServerIdLength", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupChangeUpdateIsEmpty#" [label="GroupChangeUpdateIsEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, RecipientId>`]lookup_pair()." [label="lookup_pair", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#InvalidRecipient#" [label="InvalidRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[MessageSticker][`TryFromWith<proto::Sticker, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." [label="shuffled_chats_and_recipient_ids", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#MissedByNotificationProfile#" [label="MissedByNotificationProfile", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[E164][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#" [label="Self_", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#MissingDataPointer#" [label="MissingDataPointer", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[DirectionDiscriminants][`From<&Direction<Recipient>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingCdnKey#" [label="MissingCdnKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#" [label="ReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberDuplicate#" [label="IncludedMemberDuplicate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingName#" [label="MissingName", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#NotAccepted#" [label="NotAccepted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." [label="expiring_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationTimerChangeNotInContactThread#" [label="ExpirationTimerChangeNotInContactThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()." [label="test_data_contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()." [label="is_contact_with_aci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#CannotDeleteMyStory#" [label="CannotDeleteMyStory", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidServiceId#" [label="InvalidServiceId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#ContactRegistrationUnknown#" [label="ContactRegistrationUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#DuplicateMember#" [label="DuplicateMember", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#DataPointer#" [label="DataPointer", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." [label="shuffled_chat_item_frames_not_equal", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/impl#[`proto::NotificationProfile`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_release_notes()." [label="is_release_notes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::chat_item::OutgoingMessageDetails`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`proto::contact_attachment::PostalAddress`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/impl#[ValidateOnly][Method]boxed_value()." [label="boxed_value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[RecipientId][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[TestContext][ReportUnusualTimestamp]report()." [label="report", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/IapSubscriptionId#IosAppStoreOriginalTransactionId#" [label="IosAppStoreOriginalTransactionId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_group()." [label="destination_group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#Custom#" [label="Custom", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#" [label="Self_", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotFromSelf#" [label="ChatUpdateNotFromSelf", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#InvalidMediaName#" [label="InvalidMediaName", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberWrongKind#" [label="ExcludedMemberWrongKind", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#UnknownRecipient#" [label="UnknownRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Registration#NotRegistered#" [label="NotRegistered", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Invitee][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::AdHocCall`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#Style#" [label="Style", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Missed#" [label="Missed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::account_data::AccountSettings`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#" [label="ReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." [label="expiring_message_timer_not_started", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Attachment#" [label="Attachment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MemberIsBothIncludedAndExcluded#" [label="MemberIsBothIncludedAndExcluded", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#" [label="Contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Sent#" [label="Sent", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInReleaseNotes#" [label="MessageFromContactInReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[TimestampOrForever]from_millis()." [label="from_millis", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#" [label="Self_", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#EmojiIsPresentButEmpty#" [label="EmojiIsPresentButEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][`AsRef<BackupMeta>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[Subscription][`TryFrom<proto::account_data::SubscriberData>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Zero#" [label="Zero", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::BackupLocator`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IncomingMessageFromSelf#" [label="IncomingMessageFromSelf", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." [label="valid_notification_profile", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#" [label="Contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#" [label="UnknownState", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/group_call()." [label="group_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#TransitCdnMismatch#" [label="TransitCdnMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GiftBadge#" [label="GiftBadge", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[`StickerPack<M>`][`TryFrom<proto::StickerPack>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupUpdateNotInGroupThread#" [label="GroupUpdateNotInGroupThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#MissingIncrementalMac#" [label="MissingIncrementalMac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberWrongKind#" [label="IncludedMemberWrongKind", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_individual()." [label="is_individual", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Incoming#" [label="Incoming", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingKey#" [label="MissingKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#" [label="Contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/hashutil/impl#[AssumedRandomInputHasher][Hasher]write()." [label="write", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ProfileChangeMissingNames#" [label="ProfileChangeMissingNames", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupCallNotInGroupThread#" [label="GroupCallNotInGroupThread", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`proto::learned_profile_chat_update::PreviousName`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]all_folder_data()." [label="all_folder_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." [label="outgoing_sends_are_sorted_when_serialized", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/hashutil/impl#[AssumedRandomInputHasher][Hasher]finish()." [label="finish", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberUnknown#" [label="IncludedMemberUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/PhoneSharing#WithEverybody#" [label="WithEverybody", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[u64][`From<E164>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallType#Audio#" [label="Audio", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#NoRecipient#" [label="NoRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/non_hermetic_current_time()." [label="non_hermetic_current_time", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidClockTime#" [label="InvalidClockTime", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." [label="validate_all_chat_folder", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NoChatForItem#" [label="NoChatForItem", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::StickerPack`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#RingerHasNoAci#" [label="RingerHasNoAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidAdHocRecipient#" [label="InvalidAdHocRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BackupSubscription#" [label="BackupSubscription", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[ExpirationTooSoon][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Generic#" [label="Generic", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat_item()." [label="chat_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#InvalidPackKey#" [label="InvalidPackKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DonationRequestNotInReleaseNotesChat#" [label="DonationRequestNotInReleaseNotesChat", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#CallLink#" [label="CallLink", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationTimerChangeNotFromContact#" [label="ExpirationTimerChangeNotFromContact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]contact_recipient()." [label="contact_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::GroupCall`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." [label="validate_chat_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Local#" [label="Local", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#ColorNotOpaque#" [label="ColorNotOpaque", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_self()." [label="valid_destination_self", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#UsernameLinkWithoutUsername#" [label="UsernameLinkWithoutUsername", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_contact_with_aci()." [label="is_contact_with_aci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberDuplicate#" [label="ExcludedMemberDuplicate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#IncrementalMacMismatch#" [label="IncrementalMacMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidE164#" [label="InvalidE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#ChatItem#" [label="ChatItem", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#" [label="ReleaseNotes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#" [label="CallLink", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/profile()." [label="profile", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, FullRecipientData>`]lookup_pair()." [label="lookup_pair", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Viewed#" [label="Viewed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#StickerMessageMissingSticker#" [label="StickerMessageMissingSticker", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." [label="valid_group_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#UnknownPhoneNumberSharingMode#" [label="UnknownPhoneNumberSharingMode", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Outgoing#" [label="Outgoing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#value()." [label="value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/impl#[Store][Method]boxed_value()." [label="boxed_value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/file_pointer()." [label="file_pointer", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." [label="valid_destination_group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`Direction<R>`][`TryFromWith<proto::chat_item::DirectionalDetails, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#SubscriberCurrencyWithoutId#" [label="SubscriberCurrencyWithoutId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyUnknown#" [label="DistributionListPrivacyUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`ChatData<Store>`][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownDirection#" [label="UnknownDirection", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LongTextWithoutBody#" [label="LongTextWithoutBody", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/impl#[`proto::BackupInfo`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#" [label="Group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." [label="valid_distribution_list", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidRecipient#" [label="InvalidRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_start_without_duration()." [label="expiration_start_without_duration", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()." [label="to_string_pretty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ContactAttachment#" [label="ContactAttachment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::SendStatus`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." [label="valid_message_sticker", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UpdateIsEmpty#" [label="UpdateIsEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp][`Add<Duration>`]add()." [label="add", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#MissingIdentityKey#" [label="MissingIdentityKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/impl#[ValidateOnlyList][`Extend<T>`]extend()." [label="extend", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#Missed#" [label="Missed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Call#" [label="Call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." [label="valid_destination_contact", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampOrForever#Forever#" [label="Forever", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Outgoing#" [label="Outgoing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DuplicateRecipient#" [label="DuplicateRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#SendStatusMissing#" [label="SendStatusMissing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][Ord]cmp()." [label="cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[UnusualTimestampTracker]report()." [label="report", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#UnknownMember#" [label="UnknownMember", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." [label="valid_chat_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Declined#" [label="Declined", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MissingItem#" [label="MissingItem", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/impl#[`HashMap<K, V>`][`Lookup<Q, W>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyAllWithNonemptyMembers#" [label="DistributionListPrivacyAllWithNonemptyMembers", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#AuthorNotFound#" [label="AuthorNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Voice#" [label="Voice", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessageDiscriminants#DirectStoryReply#" [label="DirectStoryReply", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#MissedByNotificationProfile#" [label="MissedByNotificationProfile", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/PhoneSharing#WithNobody#" [label="WithNobody", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#StandardMessageIsEmpty#" [label="StandardMessageIsEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionContainsRevisions#" [label="RevisionContainsRevisions", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#DirectStoryReply#" [label="DirectStoryReply", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][`Lookup<PinOrder, FullRecipientData>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidDistributionId#" [label="InvalidDistributionId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`(StickerPackId, StickerPack<Store>)`][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()." [label="from_millis", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/hashutil/impl#[`HashBytesAllAtOnce<[u8; N]>`][`From<[u8; N]>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::IndividualCall`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#NoFilePointer#" [label="NoFilePointer", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#NoAdHocRecipient#" [label="NoAdHocRecipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidAdminKey#" [label="InvalidAdminKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#" [label="DistributionList", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData]is_same_reference()." [label="is_same_reference", tooltip=""]
  }
  subgraph cluster_46 {
    label = "rust/message-backup/src/backup/chat";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReleaseChannelDonationRequest#" [label="ReleaseChannelDonationRequest", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownCustomColorId#" [label="UnknownCustomColorId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::MobileCoinTxoIdentification`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#AuthorNotFound#" [label="AuthorNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#MessageRequestAccepted#" [label="MessageRequestAccepted", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactAttachment`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#SelfInvitedOtherUserToGroupUpdate#" [label="SelfInvitedOtherUserToGroupUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Auto#" [label="Auto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." [label="valid_contact_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`UnorderedList<Invitee>`][`ValidateFrom<Vec<group_invitation_revoked_update::Invitee>>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AttachmentThumbnail#" [label="AttachmentThumbnail", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[QuotedAttachment][`TryFromWith<proto::quote::QuotedAttachment, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`Option<SpecificServiceId<_>>`][`ValidateFrom<Option<Vec<u8>>>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/call_chat_update()." [label="call_chat_update", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_voice_message_data()." [label="test_voice_message_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#NoBubbleColor#" [label="NoBubbleColor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviteeAci#" [label="InviteeAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." [label="custom_color", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[`ContactMessage<R>`][`TryFromWith<proto::ContactMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[WallpaperPreset]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#UnexpectedField#" [label="UnexpectedField", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`Lookup<CustomColorId, <M as ReferencedTypes>::CustomColorReference>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#EmptyUrl#" [label="EmptyUrl", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Valid#" [label="Valid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." [label="valid_view_once_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#Quote#" [label="Quote", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupUnknownInviteeUpdate#" [label="GroupUnknownInviteeUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#DuplicateCustomChatColorId#" [label="DuplicateCustomChatColorId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupV2MigrationDroppedMembersUpdate#" [label="GroupV2MigrationDroppedMembersUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AuthorNotFound#" [label="AuthorNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentActivationRequest#" [label="PaymentActivationRequest", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Gradient#" [label="Gradient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#WrongAttachmentType#" [label="WrongAttachmentType", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/impl#[`proto::ViewOnceMessage`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/AccessLevel#Administrator#" [label="Administrator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ProfileChange#" [label="ProfileChange", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupSelfInvitationRevokedUpdate#" [label="GroupSelfInvitationRevokedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInvitationDeclinedUpdate#" [label="GroupInvitationDeclinedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#IndividualCall#" [label="IndividualCall", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#NoTransactionDetailsPayment#" [label="NoTransactionDetailsPayment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMemberAddedUpdate#" [label="GroupMemberAddedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInviteLinkAdminApprovalUpdate#" [label="GroupInviteLinkAdminApprovalUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleColorPreset]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_payment_notification()." [label="valid_payment_notification", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/neither()." [label="neither", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMemberLeftUpdate#" [label="GroupMemberLeftUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#WrongAttachmentsCount#" [label="WrongAttachmentsCount", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." [label="invitee_pni_service_id_binary", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMemberRemovedUpdate#" [label="GroupMemberRemovedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/transaction()." [label="transaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/impl#[`proto::StickerMessage`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::ChatStyle`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/payment_notification()." [label="payment_notification", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMemberJoinedByLinkUpdate#" [label="GroupMemberJoinedByLinkUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::Wallpaper`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/impl#[`StickerMessage<R>`][`TryFromWith<proto::StickerMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." [label="valid_voice_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#EmptyText#" [label="EmptyText", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[AccessLevel][`ValidateFrom<EnumOrUnknown<proto::GroupV2AccessLevel>>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionDetails#FailedTransaction#" [label="FailedTransaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupJoinRequestCanceledUpdate#" [label="GroupJoinRequestCanceledUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupJoinRequestUpdate#" [label="GroupJoinRequestUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInvitationRevokedUpdate#" [label="GroupInvitationRevokedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupCall#" [label="GroupCall", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionDetails#Transaction#" [label="Transaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/parse_mob_amount()." [label="parse_mob_amount", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityVerified#" [label="IdentityVerified", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[GroupChatUpdate][`TryFrom<proto::group_change_chat_update::update::Update>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#Transaction#" [label="Transaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AttachmentThumbnailWrongFlag#" [label="AttachmentThumbnailWrongFlag", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#" [label="EmptyEmoji", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupAdminStatusUpdate#" [label="GroupAdminStatusUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()." [label="try_from_proto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." [label="test_data_presentation", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/Wallpaper#Preset#" [label="Preset", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/ViewOnceMessageError#Attachment#" [label="Attachment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/group_member_added_inviter_table()." [label="group_member_added_inviter_table", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#LongText#" [label="LongText", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#Text#" [label="Text", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]bad_started_call()." [label="bad_started_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyContent#Emoji#" [label="Emoji", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Unblocked#" [label="Unblocked", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupV2MigrationSelfInvitedUpdate#" [label="GroupV2MigrationSelfInvitedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupChange#" [label="GroupChange", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#MentionInvalidAci#" [label="MentionInvalidAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#Avatar#" [label="Avatar", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AuthorHasNoAciOrE164#" [label="AuthorHasNoAciOrE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupV2MigrationInvitedMembersUpdate#" [label="GroupV2MigrationInvitedMembersUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#EmptyBody#" [label="EmptyBody", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityDefault#" [label="IdentityDefault", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/complex_gradient()." [label="complex_gradient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#Attachment#" [label="Attachment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." [label="valid_standard_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/Identification#Received#" [label="Received", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_sorts_when_serializing()." [label="custom_color_map_sorts_when_serializing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#WallpaperPhoto#" [label="WallpaperPhoto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#Text#" [label="Text", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/ranges_are_sorted_when_serialized()." [label="ranges_are_sorted_when_serialized", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#PhoneNumberMissingValue#" [label="PhoneNumberMissingValue", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/ValidateFrom#validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/test_session_switchover_validate_author()." [label="test_session_switchover_validate_author", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/view_once_message()." [label="view_once_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." [label="valid_transaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupDescriptionUpdate#" [label="GroupDescriptionUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#InvalidAuthor#" [label="InvalidAuthor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Duration][`ValidateFrom<u64>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/validated_invitees()." [label="validated_invitees", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/valid_text()." [label="valid_text", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#SessionSwitchover#" [label="SessionSwitchover", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#Reaction#" [label="Reaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#InvalidBubbleGradientPosition#" [label="InvalidBubbleGradientPosition", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`()`][`From<CustomChatColor>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupV2MigrationUpdate#" [label="GroupV2MigrationUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GenericGroupUpdate#" [label="GenericGroupUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#JoinedSignal#" [label="JoinedSignal", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#NoCustomColor#" [label="NoCustomColor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#Normal#" [label="Normal", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." [label="valid_gift_badge", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/Wallpaper#Photo#" [label="Photo", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#Simple#" [label="Simple", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." [label="validate_author", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#ChatColorNotOpaque#" [label="ChatColorNotOpaque", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupSequenceOfRequestsAndCancelsUpdate#" [label="GroupSequenceOfRequestsAndCancelsUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Failed#" [label="Failed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." [label="reactions_are_sorted_when_serialized", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeError#InvalidReceiptCredentialPresentation#" [label="InvalidReceiptCredentialPresentation", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Preset#" [label="Preset", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupAvatarUpdate#" [label="GroupAvatarUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." [label="validate_chat_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeError#FailedStateWithNonEmptyPresentation#" [label="FailedStateWithNonEmptyPresentation", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#ViewOnce#" [label="ViewOnce", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#Image#" [label="Image", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`CustomColorMap<M>`]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#TypeUnknown#" [label="TypeUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/valid_invitees()." [label="valid_invitees", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownPresetBubbleColor#" [label="UnknownPresetBubbleColor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#Missing#" [label="Missing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Invitee][`TryFrom<group_invitation_revoked_update::Invitee>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupCreationUpdate#" [label="GroupCreationUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_item()." [label="chat_update_message_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidAci#" [label="InvalidAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[ChatStyleError][`From<ColorError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReportedSpam#" [label="ReportedSpam", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupAnnouncementOnlyChangeUpdate#" [label="GroupAnnouncementOnlyChangeUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#InvalidCustomColorId#" [label="InvalidCustomColorId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/sticker_message()." [label="sticker_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/attachment()." [label="attachment", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/validate_field_value()." [label="validate_field_value", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_chat_style()." [label="valid_chat_style", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChangeNumber#" [label="ChangeNumber", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/contact_message()." [label="contact_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#AccessLevelInvalid#" [label="AccessLevelInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`std::num::NonZero<u32>`][`ValidateFrom<u32>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactMessage`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[MobAmount][FromStr]from_str()." [label="from_str", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_invalid_aci()." [label="invitee_invalid_aci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#GiftBadge#" [label="GiftBadge", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupAttributesAccessLevelChangeUpdate#" [label="GroupAttributesAccessLevelChangeUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`NoValidation<T>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentsActivated#" [label="PaymentsActivated", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[FailedTransaction][`TryFrom<proto::payment_notification::transaction_details::FailedTransaction>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInviteLinkEnabledUpdate#" [label="GroupInviteLinkEnabledUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/gift_badge()." [label="gift_badge", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/AccessLevel#Member#" [label="Member", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`NoValidation<T>`][`ValidateFrom<T>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<Recipient>`][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/story_reply_message()." [label="story_reply_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]no_started_call()." [label="no_started_call", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleGradientColor]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#InvalidAmount#" [label="InvalidAmount", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<Recipient>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::Quote`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#GradientLengthMismatch#" [label="GradientLengthMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/empty_gradient()." [label="empty_gradient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmailMissingValue#" [label="EmailMissingValue", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#Style#" [label="Style", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmptyAddress#" [label="EmptyAddress", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." [label="valid_reaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviterAci#" [label="InviterAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/invalid_gradient_position()." [label="invalid_gradient_position", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/Identification#Sent#" [label="Sent", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#CountMustBeNonzero#" [label="CountMustBeNonzero", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_duplicates()." [label="custom_color_map_rejects_duplicates", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#EndSession#" [label="EndSession", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#GradientEmpty#" [label="GradientEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()." [label="from_iter", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::Transaction`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentError][`From<TransactionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleGradientColor][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#EmptyEmoji#" [label="EmptyEmoji", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#SelfInvitedToGroupUpdate#" [label="SelfInvitedToGroupUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#MentionAci#" [label="MentionAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Redeemed#" [label="Redeemed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupNameUpdate#" [label="GroupNameUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reaction()." [label="reaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`SpecificServiceId<_>`][`ValidateFrom<Vec<u8>>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#UnknownType#" [label="UnknownType", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/text()." [label="text", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInviteLinkResetUpdate#" [label="GroupInviteLinkResetUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#MultipleReactions#" [label="MultipleReactions", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnsupportedGradient#" [label="UnsupportedGradient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#UnsupportedProtocolMessage#" [label="UnsupportedProtocolMessage", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`TryFromWith<Vec<proto::Reaction>, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#EmptyQuotedMessage#" [label="EmptyQuotedMessage", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_custom_chat_color()." [label="valid_custom_chat_color", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/duplicate_reactions_are_rejected()." [label="duplicate_reactions_are_rejected", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#InvalidFee#" [label="InvalidFee", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InviterMismatch#" [label="InviterMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[MobAmount][`TryFrom<String>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`]insert()." [label="insert", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmptyName#" [label="EmptyName", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/uneven_gradient()." [label="uneven_gradient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/ViewOnceMessageError#Reaction#" [label="Reaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[Identification]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/group_invitation_revoked_update_error_is_legible()." [label="group_invitation_revoked_update_error_is_legible", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#InvalidAuthor#" [label="InvalidAuthor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ThreadMerge#" [label="ThreadMerge", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#IdentificationContainsBoth#" [label="IdentificationContainsBoth", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/both()." [label="both", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Opened#" [label="Opened", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/chat_style()." [label="chat_style", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Solid#" [label="Solid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[`proto::Text`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#LearnedProfileUpdate#" [label="LearnedProfileUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." [label="valid_story_reply_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMembershipAccessLevelChangeUpdate#" [label="GroupMembershipAccessLevelChangeUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[TextRange][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`(CustomColorId, CustomChatColor)`][`TryFrom<proto::chat_style::CustomChatColor>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#Reaction#" [label="Reaction", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Unopened#" [label="Unopened", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviteePni#" [label="InviteePni", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupJoinRequestApprovalUpdate#" [label="GroupJoinRequestApprovalUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/standard_message()." [label="standard_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInvitationAcceptedUpdate#" [label="GroupInvitationAcceptedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#NoAssociatedValueForBodyRange#" [label="NoAssociatedValueForBodyRange", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#BadDecrypt#" [label="BadDecrypt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/voice_message()." [label="voice_message", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_gradient()." [label="valid_gradient", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[ContactAttachment]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#EmptyIdentification#" [label="EmptyIdentification", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidInvitee#" [label="InvalidInvitee", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownPresetWallpaper#" [label="UnknownPresetWallpaper", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/impl#[`VoiceMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/invalid_transaction_identification()." [label="invalid_transaction_identification", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#MissingReply#" [label="MissingReply", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[ServiceId][`ValidateFrom<Vec<u8>>`]validate_from()." [label="validate_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/quote()." [label="quote", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." [label="non_opaque_color", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMemberJoinedUpdate#" [label="GroupMemberJoinedUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/AccessLevel#Any#" [label="Any", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyContent#Text#" [label="Text", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::PaymentNotification`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Blocked#" [label="Blocked", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/impl#[`ViewOnceMessage<R>`][`TryFromWith<proto::ViewOnceMessage, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityUpdate#" [label="IdentityUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ExpirationTimerChange#" [label="ExpirationTimerChange", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::SimpleChatUpdate`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupExpirationTimerUpdate#" [label="GroupExpirationTimerUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#AuthorHasNoAciOrE164#" [label="AuthorHasNoAciOrE164", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/link_preview()." [label="link_preview", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Custom#" [label="Custom", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." [label="chat_update_message_no_item", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::quote::QuotedAttachment`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChatSessionRefresh#" [label="ChatSessionRefresh", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[CustomChatColor]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupInviteLinkDisabledUpdate#" [label="GroupInviteLinkDisabledUpdate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidServiceId#" [label="InvalidServiceId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[MobAmount][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_id_zero()." [label="custom_color_map_rejects_id_zero", tooltip=""]
  }
  subgraph cluster_47 {
    label = "rust/message-backup/src/backup/recipient";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." [label="valid_group", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#BlobMissingContent#" [label="BlobMissingContent", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberRoleUnknown#" [label="MemberRoleUnknown", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupData][`TryFromWith<proto::Group, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidMasterKey#" [label="InvalidMasterKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#" [label="MemberInvalidServiceId", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#" [label="MemberInvalidAci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidAccess#" [label="InvalidAccess", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." [label="group_member_lists_sorted_when_serializing", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MissingSnapshot#" [label="MissingSnapshot", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyHasProfileKey#" [label="MemberPendingProfileKeyHasProfileKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#BlobWrongContent#" [label="BlobWrongContent", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." [label="group_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidTimestamp#" [label="InvalidTimestamp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidProfileKey#" [label="MemberInvalidProfileKey", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[`proto::group::group_attribute_blob::Content`]field_name()." [label="field_name", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyWasInvitedBySelf#" [label="MemberPendingProfileKeyWasInvitedBySelf", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyMissingMember#" [label="MemberPendingProfileKeyMissingMember", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_snapshot()." [label="group_snapshot", tooltip=""]
  }
  subgraph cluster_48 {
    label = "rust/message-backup/src/backup/recipient/group";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMember]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." [label="valid_member", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_admin_approval()." [label="member_pending_admin_approval", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_profile_key()." [label="member_pending_profile_key", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." [label="valid_member_pending_admin_approval", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member()." [label="member", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_banned()." [label="member_banned", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingAdminApproval]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingAdminApproval`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::Member`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Default#" [label="Default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." [label="valid_member_pending_profile_key", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingProfileKey`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberBanned`]test_data()." [label="test_data", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Administrator#" [label="Administrator", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][SerializeOrder]serialize_cmp()." [label="serialize_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." [label="try_from_with", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." [label="valid_member_banned", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberBanned]from_proto_test_data()." [label="from_proto_test_data", tooltip=""]
  }
  subgraph cluster_49 {
    label = "rust/message-backup/src/backup/serialize";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/unordered_list/impl#[`UnorderedList<T>`]iter()." [label="iter", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/unordered_list/impl#[`UnorderedList<T>`][`FromIterator<T>`]from_iter()." [label="from_iter", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/unordered_list/impl#[`UnorderedList<T>`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/unordered_list/impl#[`UnorderedList<T>`]is_empty()." [label="is_empty", tooltip=""]
  }
  subgraph cluster_50 {
    label = "rust/message-backup/src/bin/support";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()." [label="into_key_or_default", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/AsyncReaderFactory#Cursor#" [label="Cursor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[FilenameOrContents][`From<clap_stdin::FileOrStdin>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/FilenameOrContents#Filename#" [label="Filename", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()." [label="into_key", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/AsyncReaderFactory#File#" [label="File", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/FilenameOrContents#Contents#" [label="Contents", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()." [label="make_reader", tooltip=""]
  }
  subgraph cluster_51 {
    label = "rust/message-backup/src/bin/validator";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_no_keys_plaintext_binproto()." [label="cli_parse_no_keys_plaintext_binproto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/print_pretty()." [label="print_pretty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." [label="main", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_key_parts()." [label="cli_parse_key_parts", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 print_unknown_fields()." [label="print_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_keys()." [label="cli_parse_derive_keys", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_account_entropy_requires_aci()." [label="cli_parse_account_entropy_requires_aci", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`MaybeEncryptedBackupReader<R>`]execute()." [label="execute", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." [label="async_main", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#None#" [label="None", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 MaybeEncryptedBackupReader#EncryptedCompressed#" [label="EncryptedCompressed", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/print_oneline()." [label="print_oneline", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity][`From<u8>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()." [label="into_visitor", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#PrintPretty#" [label="PrintPretty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#PrintOneLine#" [label="PrintOneLine", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_key_parts_all_required()." [label="cli_parse_key_parts_all_required", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 MaybeEncryptedBackupReader#PlaintextBinproto#" [label="PlaintextBinproto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_keys_legacy()." [label="cli_parse_derive_keys_legacy", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_empty()." [label="cli_parse_empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_key_flags_conflict_with_key_parts_flags()." [label="cli_parse_derive_key_flags_conflict_with_key_parts_flags", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_purpose()." [label="cli_parse_purpose", tooltip=""]
  }
  subgraph cluster_52 {
    label = "rust/message-backup/src/frame";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/exact_block_stream_valid()." [label="exact_block_stream_valid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/empty_without_padding()." [label="empty_without_padding", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/multiple_blocks()." [label="multiple_blocks", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/test/mac_read()." [label="mac_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/test/stream_passes_errors()." [label="stream_passes_errors", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/test/make_mac()." [label="make_mac", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/test/stream_decrypts()." [label="stream_decrypts", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/test/stream_empty()." [label="stream_empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, S>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/multiple()." [label="multiple", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, S>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_too_short()." [label="aes_reader_too_short", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, BlockStream<N, R>>`]from_reader()." [label="from_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/empty()." [label="empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_round_trip()." [label="aes_reader_round_trip", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`LimitedReaderFactory<R, N>`][ReaderFactory]make_reader()." [label="make_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/exact_block_stream_ragged_block()." [label="exact_block_stream_ragged_block", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/last_is_all_padding()." [label="last_is_all_padding", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/impl#[`CbcStreamDecryptor<C, S>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/exact_block_stream_converts_error()." [label="exact_block_stream_converts_error", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`LimitedReaderFactory<R, N>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/impl#[`std::io::Error`][`From<IntoIoError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`FileReaderFactory<P>`][ReaderFactory]make_reader()." [label="make_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<&B>`][ReaderFactory]make_reader()." [label="make_reader", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/single()." [label="single", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/empty()." [label="empty", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`RcReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_encrypted_bytes()." [label="aes_encrypted_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_inner_returns_pending()." [label="aes_reader_inner_returns_pending", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/impl#[`CountingReader<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/reader_returns_error()." [label="reader_returns_error", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/impl#[`CbcStreamDecryptor<C, S>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/reader_returns_pending()." [label="reader_returns_pending", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/impl#[`CountingReader<R>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
  }
  subgraph cluster_53 {
    label = "rust/message-backup/src/scramble";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()." [label="randomize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[u64][Randomize]randomize()." [label="randomize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`[u8]`][Randomize]randomize()." [label="randomize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<T>`][Randomize]randomize()." [label="randomize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()." [label="randomize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()." [label="randomize", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/random_uuid()." [label="random_uuid", tooltip=""]
  }
  subgraph cluster_54 {
    label = "rust/message-backup/src/unknown";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Vec<U>`][VisitContainerUnknownFields]visit_unknown_fields_within()." [label="visit_unknown_fields_within", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[U][Visitor]unknown_fields()." [label="unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()." [label="visit_child_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Option<U>`][VisitContainerUnknownFields]visit_unknown_fields_within()." [label="visit_unknown_fields_within", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`&V`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`HashMap<K, V>`][VisitContainerUnknownFields]visit_unknown_fields_within()." [label="visit_unknown_fields_within", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`EnumOrUnknown<E>`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[SpecialFields][VisitContainerUnknownFields]visit_unknown_fields_within()." [label="visit_unknown_fields_within", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_field()." [label="visit_field", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Box<E>`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[U][Visitor]unknown_enum()." [label="unknown_enum", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`MessageField<E>`][VisitUnknownFields]visit_unknown_fields()." [label="visit_unknown_fields", tooltip=""]
  }
  subgraph cluster_55 {
    label = "rust/message-backup/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-message-backup 0.1.0 encrypted_proto_matches_source()." [label="encrypted_proto_matches_source", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 serialized_account_settings_is_valid()." [label="serialized_account_settings_is_valid", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." [label="is_valid_encrypted_proto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 write_expected_output()." [label="write_expected_output", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_json_proto()." [label="is_valid_json_proto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 scrambler_smoke_test()." [label="scrambler_smoke_test", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 validator_command()." [label="validator_command", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_proto()." [label="validate_proto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 invalid_jsonproto()." [label="invalid_jsonproto", tooltip=""]
    "rust-analyzer cargo libsignal-message-backup 0.1.0 can_serialize_json_proto()." [label="can_serialize_json_proto", tooltip=""]
  }
  subgraph cluster_56 {
    label = "rust/net/examples";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 main()." [label="main", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 Transport#Doh#" [label="Doh", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 impl#[`LoggingNewHandshake<E>`][NewHandshake]new_handshake()." [label="new_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 Environment#Production#" [label="Production", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 RouteType#Direct#" [label="Direct", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi_lookup()." [label="cdsi_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cast_params()." [label="cast_params", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 Environment#Staging#" [label="Staging", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 test_connection()." [label="test_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 RouteType#ProxyF#" [label="ProxyF", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 Transport#Udp#" [label="Udp", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 RouteType#ProxyG#" [label="ProxyG", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 parse_target()." [label="parse_target", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 impl#[RouteType][IntoEnumIterator]iter()." [label="iter", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 impl#[`LoggingNewHandshake<E>`][EnclaveKind]url_path()." [label="url_path", tooltip=""]
  }
  subgraph cluster_57 {
    label = "rust/net/infra/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/Error#BadHostname#" [label="BadHostname", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteReceiveError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()." [label="example_connection_params", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Http#" [label="Http", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`url::Host<S>`][`From<Host<S>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 make_ws_config()." [label="make_ws_config", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]clear_proxy()." [label="clear_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." [label="connect_interleaves_resolved_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()." [label="as_header", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()." [label="map_domain", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()." [label="set_up_platform_verifier", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ToSend#" [label="ToSend", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToCreateRequest#" [label="FailedToCreateRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#" [label="Next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<(Ipv4Addr, Ipv6Addr)>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[FailedHandshakeReason][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()." [label="simulate_connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_ipv6_disabled()." [label="test_dns_lookup_ipv6_disabled", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ConnectionParams]with_confirmation_header()." [label="with_confirmation_header", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#" [label="FatalConnect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[RootCertificates]apply_to_connector()." [label="apply_to_connector", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#OneDomainPerProxy#" [label="OneDomainPerProxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketClientWriter<S, E>`]send()." [label="send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][`Sink<T>`]poll_close()." [label="poll_close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/respects_fused_is_terminated()." [label="respects_fused_is_terminated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." [label="multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()." [label="run_and_update_status", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[Message][`From<TextOrBinary>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[Error][`From<ErrorStack>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/CancellationReason#ExplicitDisconnect#" [label="ExplicitDisconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_handshaken_pair()." [label="new_handshaken_pair", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_successfull_attempts()." [label="single_route_successfull_attempts", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecoratorSeq]decorate_request()." [label="decorate_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/RetryError#WaitUntil#" [label="WaitUntil", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_local_inactivity()." [label="sends_ping_after_local_inactivity", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]update_after_attempt()." [label="update_after_attempt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WithoutResponseHeaders]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslError#" [label="SslError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ClientDisconnect#" [label="ClientDisconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/read_returns_inner_error()." [label="read_returns_inner_error", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#MessageTooLarge#" [label="MessageTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[`Vec<R>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." [label="single_route_manager_handles_too_many_failed_attempts", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/first_ok()." [label="first_ok", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#" [label="Utf8", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][`Sink<T>`]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#DnsOverHttpsLookup#" [label="DnsOverHttpsLookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[ClassifiableTestError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[FailingSingle][ConnectionManager]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][`Sink<T>`]start_send()." [label="start_send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/CancellationReason#ServiceError#" [label="ServiceError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]rx_is_closed()." [label="rx_is_closed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#AllDomains#" [label="AllDomains", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_shutdown()." [label="poll_shutdown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()." [label="validate_expected_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolverState][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Other#" [label="Other", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#Message#" [label="Message", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()." [label="fake_websocket", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/Error#BadCertificate#" [label="BadCertificate", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`SimpleRoute<TlsRouteFragment, DirectOrProxyRoute<TcpRoute<IpAddr>, ConnectionProxyRoute<IpAddr>>>`][`UsesTransport<Self>`]transport_part()." [label="transport_part", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedPingPong#" [label="ReceivedPingPong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[`SslStream<S>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#SslHandshakeFailed#" [label="SslHandshakeFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." [label="connect_slows_down_after_starting_a_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_request_joins_in_flight_request()." [label="test_request_joins_in_flight_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[Alpn][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[`Http2Connector<C>`][`Connector<crate::route::SimpleRoute<HttpRouteFragment, T>, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_path_prefix_decorator()." [label="test_path_prefix_decorator", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_ipv6_enabled()." [label="set_ipv6_enabled", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ServiceState#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_ignores_failed_futures()." [label="first_ok_ignores_failed_futures", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#" [label="ProxyProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." [label="connect_through_invalid", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#ServerSentInvalidUtf8#" [label="ServerSentInvalidUtf8", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTcp][`Connector<TcpRoute<IpAddr>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." [label="multi_route_manager_propagates_post_connection_failure", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/returns_write_error()." [label="returns_write_error", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or_else()." [label="next_or_else", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#AlreadyClosed#" [label="AlreadyClosed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or()." [label="next_or", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#InvalidConfiguration#" [label="InvalidConfiguration", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." [label="sends_outgoing_messages", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_via_rustls()." [label="verify_certificate_via_rustls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 test/connection_info_description()." [label="connection_info_description", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`SimpleRoute<TlsRouteFragment, DirectOrProxyRoute<TcpRoute<UnresolvedHost>, ConnectionProxyRoute<Host<UnresolvedHost>>>>`][`UsesTransport<Self>`]transport_part()." [label="transport_part", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][`Sink<T>`]poll_ready()." [label="poll_ready", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[ClassifiableTestError][ErrorClassifier]classify()." [label="classify", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslFailedHandshake#" [label="SslFailedHandshake", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]describe_for_logging()." [label="describe_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`&C`][ConnectionManager]describe_for_logging()." [label="describe_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ServiceConnectionInfo]description()." [label="description", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#PingFailed#" [label="PingFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/WriteBufferPolicy#NoBuffering#" [label="NoBuffering", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#UdpLookup#" [label="UdpLookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[FailedHandshakeReason][`From<HandshakeError<S>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ConnectError#AllRoutesFailed#" [label="AllRoutesFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_remote_close_with_error()." [label="handles_remote_close_with_error", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`SimpleRoute<TlsRouteFragment, DirectOrProxyRoute<TcpRoute<IpAddr>, ConnectionProxyRoute<IpAddr>>>`][`UsesTransport<Self>`]into_transport_part()." [label="into_transport_part", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_returns_none_if_all_failed()." [label="first_ok_returns_none_if_all_failed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." [label="receives_incoming_messages", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]route()." [label="route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#ProxyF#" [label="ProxyF", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/asserts_route_type()." [label="asserts_route_type", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#" [label="FromDer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<boring_signal::error::ErrorStack>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." [label="single_route_manager_resets_cooldown_count_on_network_changed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[Read][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/graceful_close()." [label="graceful_close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#ResponseTooLarge#" [label="ResponseTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<Ipv6Addr>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ConnectionIdle#" [label="ConnectionIdle", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_header_auth_decorator()." [label="test_header_auth_decorator", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]on_network_change()." [label="on_network_change", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext][RouteProviderContext]random_usize()." [label="random_usize", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ConnectError#RejectedByServer#" [label="RejectedByServer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_lookup_sequence()." [label="test_lookup_sequence", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()." [label="localhost_http_server", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[SingleRouteThrottlingConnectionManager][ConnectionManager]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/impl#[`TerminateStreamAfter<S>`][`Sink<T>`]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_until_and_catch_up()." [label="sleep_until_and_catch_up", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#" [label="MessageTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Intermittent#" [label="Intermittent", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." [label="sends_ping_after_remote_inactivity_then_time_out", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]parse_as_ip_or_domain()." [label="parse_as_ip_or_domain", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[SingleRouteThrottlingConnectionManager][ConnectionManager]describe_for_logging()." [label="describe_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_picks_the_result_from_earliest_finished_future()." [label="first_ok_picks_the_result_from_earliest_finished_future", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." [label="http2_client", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/future()." [label="future", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#" [label="Fatal", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[NoDelay][`RouteDelayPolicy<R>`]compute_delay()." [label="compute_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][`From<url::Host<S>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#" [label="WebSocketProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." [label="socks_proxy_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tls()." [label="connect_tls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`SimpleRoute<TlsRouteFragment, DirectOrProxyRoute<TcpRoute<UnresolvedHost>, ConnectionProxyRoute<Host<UnresolvedHost>>>>`][`UsesTransport<Self>`]into_transport_part()." [label="into_transport_part", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/terminates_gracefully_after_outgoing_close()." [label="terminates_gracefully_after_outgoing_close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/make_http_request_response_over()." [label="make_http_request_response_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_failure_via_rustls()." [label="verify_certificate_failure_via_rustls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][`From<&IpAddr>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()." [label="new_from_static_map", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator][`From<T>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/sleep_and_catch_up_showcase()." [label="sleep_and_catch_up_showcase", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ReceiveError#" [label="ReceiveError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#" [label="Text", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/CancellationReason#ProtocolError#" [label="ProtocolError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/impl#[`TerminateStreamAfter<S>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ClientAbort#" [label="ClientAbort", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]header()." [label="header", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketConfig]ws2_config()." [label="ws2_config", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Cache#" [label="Cache", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker][Wake]wake_by_ref()." [label="wake_by_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()." [label="as_deref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`ConnectError<E>`][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#" [label="Close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/TcpSslConnectorStream#Direct#" [label="Direct", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 extract_retry_later()." [label="extract_retry_later", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#IdleTimeout#" [label="IdleTimeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." [label="multi_route_manager_should_respect_retry_after", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`EndpointConnection<MultiRouteConnectionManager>`]new_multi()." [label="new_multi", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#" [label="Domain", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/test()." [label="test", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WithoutResponseHeaders<T>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#" [label="CapacityErrorMessageTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timeout()." [label="timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_without_fallback()." [label="test_dns_lookup_without_fallback", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/write_with_full_transport_send_queue()." [label="write_with_full_transport_send_queue", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#WebSocketProtocol#" [label="WebSocketProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#" [label="SentMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/impl#[`TerminateStreamAfter<S>`][`Sink<T>`]start_send()." [label="start_send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route_after_timed_out_route()." [label="multi_route_manager_picks_working_route_after_timed_out_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()." [label="new_custom", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" [label="StopService", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_all_in_cooldown()." [label="multi_route_manager_all_in_cooldown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#" [label="ServerIdleTimeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<TlsHandshakeTimeout>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." [label="multi_route_manager_should_short_circuit_on_fatal_errors", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Unexpected#" [label="Unexpected", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." [label="websocket_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_flag_value_used_from_the_time_of_request()." [label="test_flag_value_used_from_the_time_of_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[RetryLater][AsHttpHeader]header_value()." [label="header_value", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()." [label="no_network_change_events", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ConnectError#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#" [label="ConnectionClosed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#TimedOut#" [label="TimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketClientReader<S, E>`]next()." [label="next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`&C`][ConnectionManager]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ServerDisconnect#" [label="ServerDisconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#NextRouteAvailable#" [label="NextRouteAvailable", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToReadContentOfUnknownSize#" [label="FailedToReadContentOfUnknownSize", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." [label="http_client_e2e_test", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[Write][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." [label="start_connections_sooner_if_previous_ones_finish", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#CertError#" [label="CertError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[FailingSingle][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[SslErrorReasons][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`InMemoryWarpConnector<F>`][TransportConnector]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." [label="retry_connect_until_cooldown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/Read#ReadFromBlock#" [label="ReadFromBlock", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]log_request()." [label="log_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolverState][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[`FakeRoute<A>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_inner()." [label="connect_inner", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToReadContentOfKnownSize#" [label="FailedToReadContentOfKnownSize", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#" [label="Ip", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()." [label="timed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/tls_proxy_route()." [label="tls_proxy_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WithoutResponseHeaders<T>`][`Connector<(WebSocketRouteFragment, HttpRouteFragment), Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#SendKeepAlive#" [label="SendKeepAlive", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]logged_requests()." [label="logged_requests", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ServiceState#ConnectionTimedOut#" [label="ConnectionTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][ConnectionManager]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#SocksProxy#" [label="SocksProxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/Read#AwaitingBlock#" [label="AwaitingBlock", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`InMemoryWarpConnector<F>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#UnexpectedConnectionClose#" [label="UnexpectedConnectionClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<HandshakeError<S>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." [label="handles_error_from_remote", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<certs::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[RetryLater]duration()." [label="duration", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_resolved()." [label="connect_resolved", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/impl#[`TerminateStreamAfter<S>`][FusedStream]is_terminated()." [label="is_terminated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#DnsError#" [label="DnsError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/network_resets_consider_latest_attempt_time()." [label="network_resets_consider_latest_attempt_time", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#CloseFailed#" [label="CloseFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecoratorSeq]add()." [label="add", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()." [label="lookup_ip", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/send_and_receive()." [label="send_and_receive", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_proxy()." [label="set_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#" [label="SentPing", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#" [label="Finished", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#" [label="Capacity", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#" [label="Continue", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#NoResolvedRoutes#" [label="NoResolvedRoutes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/TcpSslConnectorStream#Proxy#" [label="Proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/basic_authorization()." [label="basic_authorization", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]with_custom_response()." [label="with_custom_response", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`&R`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#" [label="RemoteDisconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Delegated#" [label="Delegated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]start_or_join_lookup()." [label="start_or_join_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/assert_expected_result()." [label="assert_expected_result", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." [label="connect_to_server", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[NeverConnect][`Connector<R, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()." [label="handle_next_event", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[`Option<ConnectionProxyConfig>`][`TryFrom<&TcpSslConnector>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#" [label="WaitUntil", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." [label="spawn_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#" [label="Http2", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Test#" [label="Test", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." [label="connect_takes_first_successful", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_with_static_fallback()." [label="new_with_static_fallback", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." [label="http_client_invalid_hostname", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#" [label="TcpConnectionFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[InvalidProxyConfig][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpConnectError#HttpHandshake#" [label="HttpHandshake", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#ConnectionAttemptFinished#" [label="ConnectionAttemptFinished", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/outcome_record_for_testing()." [label="outcome_record_for_testing", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`StreamAndInfo<T>`]map_stream()." [label="map_stream", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`][`Connector<R, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/ssl_config()." [label="ssl_config", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#" [label="No", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]respond()." [label="respond", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." [label="send_request_aggregate_response", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][FusedStream]is_terminated()." [label="is_terminated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()." [label="attempt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]network_changed()." [label="network_changed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#" [label="ChannelClosed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#" [label="ReceivedMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[`FakeRoute<A>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/test/websocket_client_sends_pong_on_server_ping()." [label="websocket_client_sends_pong_on_server_ping", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#WriteBufferFull#" [label="WriteBufferFull", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]proxy()." [label="proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Direct#" [label="Direct", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker][Wake]wake()." [label="wake", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ServiceState#Inactive#" [label="Inactive", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]as_waker()." [label="as_waker", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType]from_host()." [label="from_host", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." [label="incoming_message_resets_server_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#SystemLookup#" [label="SystemLookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#" [label="Binary", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/pull_next_route_delay()." [label="pull_next_route_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()." [label="new_pair", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ServiceState#Active#" [label="Active", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#" [label="Static", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/StateError#Inactive#" [label="Inactive", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[TestError][ErrorClassifier]classify()." [label="classify", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_starting_new_lookup_if_previous_done()." [label="test_starting_new_lookup_if_previous_done", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()." [label="sleep_and_catch_up", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[FailingSingle][ConnectionManager]describe_for_logging()." [label="describe_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." [label="connect_tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Url#" [label="Url", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/StateError#ServiceUnavailable#" [label="ServiceUnavailable", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()." [label="decorate_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[AlwaysInCooldown][ConnectionManager]connect_or_wait()." [label="connect_or_wait", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]new_direct()." [label="new_direct", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#" [label="Native", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connection_proxy_on_top_of_websocket_route_is_provider()." [label="connection_proxy_on_top_of_websocket_route_is_provider", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]send_error()." [label="send_error", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#" [label="Test", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/impl#[`ConnectError<E>`][ErrorClassifier]classify()." [label="classify", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][`From<IpAddr>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[Stateless][`Connector<(WebSocketRouteFragment, HttpRouteFragment), Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][ConnectionManager]describe_for_logging()." [label="describe_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V6#" [label="V6", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_ipv6_enabled_flag_is_passed_with_request()." [label="test_ipv6_enabled_flag_is_passed_with_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#StartNextConnection#" [label="StartNextConnection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#SendRequestError#" [label="SendRequestError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecoratorSeq][`From<HttpRequestDecorator>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." [label="test_in_flight_requests_respect_ipv6_flag_value", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/RetryError#Fatal#" [label="Fatal", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector]with_proxy()." [label="with_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#ContentLengthHeaderInvalid#" [label="ContentLengthHeaderInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." [label="single_route_manager_resets_cooldown_on_network_changed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" [label="RemoteDisconnectedTimeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#Headers#" [label="Headers", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketStream<S>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ServiceState#Cooldown#" [label="Cooldown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[`FakeRoute<A>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/localhost_https_server_with_fake_response()." [label="localhost_https_server_with_fake_response", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." [label="single_route_alternating", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V4#" [label="V4", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#" [label="Http1_1", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." [label="multi_route_manager_retries_the_same_option_until_cooldown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_fallback_timing()." [label="test_fallback_timing", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/CancellationReason#RemoteClose#" [label="RemoteClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#HttpFormat#" [label="HttpFormat", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/impl#[`TerminateStreamAfter<S>`][`Sink<T>`]poll_close()." [label="poll_close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<Ipv4Addr>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Other#" [label="Other", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#Http2HandshakeFailed#" [label="Http2HandshakeFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]set_ipv6_enabled()." [label="set_ipv6_enabled", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[AlwaysInCooldown][ConnectionManager]describe_for_logging()." [label="describe_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#ProxyG#" [label="ProxyG", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#" [label="AllAttemptsFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#Generic#" [label="Generic", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]wake_count()." [label="wake_count", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#" [label="Expected", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#PathPrefix#" [label="PathPrefix", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpConnectError#Transport#" [label="Transport", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_fallback()." [label="test_dns_lookup_fallback", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/testutil/echo_forever()." [label="echo_forever", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()." [label="standard_responses", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." [label="single_route_manager_times_out_on_long_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_write()." [label="poll_write", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#TlsProxy#" [label="TlsProxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SendFailed#" [label="SendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ConnectionParams]with_decorator()." [label="with_decorator", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." [label="connect_succeeds_if_some_routes_hang_indefinitely", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()." [label="build_custom_resolver_cloudflare_doh", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#" [label="ConnectionAlreadyClosed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#" [label="AbnormalServerClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]was_woken()." [label="was_woken", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." [label="handles_error_on_failed_send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromStaticDers#" [label="FromStaticDers", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelIdleTooLong#" [label="ChannelIdleTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#Received#" [label="Received", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/impl#[`TerminateStreamAfter<S>`][`Sink<T>`]poll_ready()." [label="poll_ready", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" [label="LogStatus", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_invalid()." [label="set_invalid", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#" [label="Attempted", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route()." [label="multi_route_manager_picks_working_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#RetryAt#" [label="RetryAt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#" [label="LocalDisconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_stream_pair()." [label="new_stream_pair", tooltip=""]
  }
  subgraph cluster_58 {
    label = "rust/net/infra/src/dns";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_empty_label()." [label="invalid_name_empty_label", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." [label="respects_ipv6_filter_for_dns_server_itself", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." [label="cache_results_returned_if_not_expired", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#" [label="LookupFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][DnsTransport]send_queries()." [label="send_queries", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/request_allows_dot_at_the_end()." [label="request_allows_dot_at_the_end", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/validate_expected_order()." [label="validate_expected_order", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][`Connector<crate::route::SimpleRoute<crate::route::HttpRouteFragment, crate::route::SimpleRoute<crate::route::TlsRouteFragment, TcpRoute<IpAddr>>>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#RequestFailedWithErrorCode#" [label="RequestFailedWithErrorCode", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`SharedCacheWithGenerations<K, V>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." [label="next_dns_query_result1", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/impl#[Error][`From<io::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelEmpty#" [label="ProtocolErrorLabelEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnector][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#UnexpectedMessageId#" [label="UnexpectedMessageId", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#" [label="ProtocolErrorInvalidMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[TestDnsTransportFailingToConnect][`Connector<IpAddr, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()." [label="respond_after_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." [label="cache_ttl_limited", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." [label="lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[TestDnsTransportFailingToConnect][DnsTransport]send_queries()." [label="send_queries", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/compressed_name_format_handled_correctly()." [label="compressed_name_format_handled_correctly", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#AAAA#" [label="AAAA", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[StaticDnsMap][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[`&LookupResult`][IntoIterator]into_iter()." [label="into_iter", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()." [label="assert_lookup_result_content_equal", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." [label="returns_second_result_if_first_result_fails", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()." [label="create_request_with_id", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportRestricted#" [label="TransportRestricted", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]source()." [label="source", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][DnsTransport]send_queries()." [label="send_queries", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_response_parsed_correctly()." [label="valid_response_parsed_correctly", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]send_request()." [label="send_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]iter()." [label="iter", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_bytes()." [label="response_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<io::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/unexpected_resource_record_is_skipped()." [label="unexpected_resource_record_is_skipped", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." [label="returns_error_if_failed_to_connect_to_transport", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/lookup_result_iterates_in_the_right_order()." [label="lookup_result_iterates_in_the_right_order", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()." [label="get_id", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorNameTooLong#" [label="ProtocolErrorNameTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]is_empty()." [label="is_empty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." [label="send_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_label_too_long()." [label="invalid_name_label_too_long", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_a_record()." [label="parse_a_record", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[`CustomDnsResolver<R, T>`][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#DohRequestBadStatus#" [label="DohRequestBadStatus", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/unwrap_or_lookup_failed()." [label="unwrap_or_lookup_failed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][`Connector<IpAddr, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_with_no_answers_handled_correctly()." [label="response_with_no_answers_handled_correctly", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorUnexpectedValue#" [label="ProtocolErrorUnexpectedValue", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#RequestedIpTypeNotFound#" [label="RequestedIpTypeNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnector][`Connector<UdpRoute<IpAddr>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_only_returns_one_response()." [label="works_correctly_if_transport_only_returns_one_response", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." [label="works_correctly_if_transport_returns_third_response", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_transport_never_sends_results()." [label="returns_error_if_transport_never_sends_results", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#" [label="TransportFailure", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport][DnsTransport]send_queries()." [label="send_queries", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelTooLong#" [label="ProtocolErrorLabelTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnectorFactory][`ConnectorFactory<UdpRoute<IpAddr>>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()." [label="log_safe_domain", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name_to_vec()." [label="read_name_to_vec", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." [label="outcomes_recorded", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()." [label="custom_dns_resolver", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnectorFactory][`ConnectorFactory<crate::route::SimpleRoute<crate::route::HttpRouteFragment, crate::route::SimpleRoute<crate::route::TlsRouteFragment, TcpRoute<IpAddr>>>>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`SharedCacheWithGenerations<K, V>`]clear_and_advance()." [label="clear_and_advance", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." [label="do_lookup_task_body", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/div_duration()." [label="div_duration", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_data()." [label="invalid_message_error_parsing_data", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()." [label="transport_and_custom_dns_resolver", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." [label="outstanding_lookups_before_network_event_do_not_end_up_in_cache", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#RequestFailedWithErrorCode#" [label="RequestFailedWithErrorCode", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#" [label="A", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." [label="cache_cleared_on_network_event", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()." [label="ok_query_result_ipv6", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidNameCharacters#" [label="ProtocolErrorInvalidNameCharacters", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name()." [label="read_name", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]queries_count()." [label="queries_count", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." [label="results_cached_even_if_received_late", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." [label="works_correctly_when_second_response_is_after_resolution_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_too_long()." [label="invalid_name_too_long", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/compressed_name_format_handles_errors()." [label="compressed_name_format_handles_errors", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_aaaa_record()." [label="parse_aaaa_record", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/write_name()." [label="write_name", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()." [label="test_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()." [label="localhost", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[`CustomDnsResolver<R, T>`][DnsLookup]on_network_change()." [label="on_network_change", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." [label="works_correctly_when_both_results_are_within_resolution_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#MessageTooLong#" [label="MessageTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`MakeConnectorByCloning<T>`][`ConnectorFactory<R>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]cache_get()." [label="cache_get", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_id()." [label="invalid_message_error_parsing_id", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[SystemDnsLookup][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()." [label="ok_query_result_ipv4", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/DnsLookup#on_network_change()." [label="on_network_change", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()." [label="parse_response", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." [label="returns_error_if_both_results_fail", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]on_network_change()." [label="on_network_change", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#NoData#" [label="NoData", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_requests_identical()." [label="valid_requests_identical", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#NoData#" [label="NoData", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/error_response_code_handled_correctly()." [label="error_response_code_handled_correctly", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." [label="record_with_invalid_data_is_skipped", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]send_dns_queries()." [label="send_dns_queries", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()." [label="into_iter", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorFailedToParseResourceRecord#" [label="ProtocolErrorFailedToParseResourceRecord", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Protocol#" [label="Protocol", tooltip=""]
  }
  subgraph cluster_59 {
    label = "rust/net/infra/src/route";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/impl#[FakeProvider][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyProvider#Proxy#" [label="Proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][Hash]hash()." [label="hash", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/eagerly_resolve_each()." [label="eagerly_resolve_each", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/resolve_hostnames_in_real_route()." [label="resolve_hostnames_in_real_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tcp()." [label="proxy_from_parts_signal_tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`SimpleRoute<TlsRouteFragment, T>`][SetAlpn]set_alpn()." [label="set_alpn", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`ConnectionOutcomes<R>`]record_outcome()." [label="record_outcome", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." [label="as_replacer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TcpProxy][AsReplacer]as_replacer()." [label="as_replacer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`WithLoggableDescription<R, D>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[DomainFrontRouteProvider][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." [label="proxy_from_parts_signal_socks5", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]next()." [label="next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_failing_route()." [label="connection_outcomes_delays_failing_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription]fake()." [label="fake", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][FusedStream]is_terminated()." [label="is_terminated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/min_kvq_stream_debounce()." [label="min_kvq_stream_debounce", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`ComposedConnector<A, B, Error>`][`Connector<super::SimpleRoute<TlsRouteFragment, T>, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()." [label="maybe_proxied", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." [label="socks_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ResolveWithSavedDescription<R>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]locally_resolved_hostnames()." [label="locally_resolved_hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#ReturnNextIndividualRoute#" [label="ReturnNextIndividualRoute", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Http#" [label="Http", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/impl#[`Vec<R>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[TlsRouteFragment][SetAlpn]set_alpn()." [label="set_alpn", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TlsProxy][AsReplacer]as_replacer()." [label="as_replacer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`Schedule<S, R, SP>`]as_stream()." [label="as_stream", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#filter_routes()." [label="filter_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]reset()." [label="reset", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http2#" [label="Http2", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResolvedRoutes<R>`][IntoIterator]into_iter()." [label="into_iter", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[DirectTcpRouteProvider][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." [label="describe_for_log", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." [label="from_parts", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#" [label="Direct", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tls()." [label="proxy_from_parts_signal_tls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ConnectionOutcomeParams]compute_delay()." [label="compute_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`WithLoggableDescription<R, D>`][`UsesTransport<super::SimpleRoute<super::TlsRouteFragment, DirectOrProxyRoute<TcpRoute<IpAddr>, ConnectionProxyRoute<IpAddr>>>>`]transport_part()." [label="transport_part", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`DescribedRouteConnector<C>`][`Connector<WithLoggableDescription<R, D>, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()." [label="as_replacer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[RouteIpVersion]update_from()." [label="update_from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/impl#[`Map<R, F>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http1_1#" [label="Http1_1", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ResolveMeta][SequentialKey]seq_next()." [label="seq_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/impl#[`Vec<R>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResettingConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()." [label="compute_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()." [label="apply_outcome_updates", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`&mut P`][`RouteDelayPolicy<R>`]wants_recalculation()." [label="wants_recalculation", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportPasswords#" [label="SchemeDoesNotSupportPasswords", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#V4#" [label="V4", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/testutils/impl#[`ConnectFn<F>`][`ConnectorFactory<R>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`VariableTlsTimeoutConnector<A, B, Error>`][`Connector<super::SimpleRoute<TlsRouteFragment, T>, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#UnsupportedScheme#" [label="UnsupportedScheme", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`SwapPairStream<S>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ScheduleStatus][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tcp#" [label="Tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]hostname()." [label="hostname", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Socks#" [label="Socks", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/impl#[`Vec<A>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks4()." [label="proxy_from_parts_signal_socks4", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`TlsRouteProvider<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_reset_by_cutoff()." [label="connection_outcomes_reset_by_cutoff", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#" [label="Tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_decrease_over_time()." [label="connection_outcomes_delays_decrease_over_time", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_invalid()." [label="proxy_from_parts_invalid", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResettingConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]wants_recalculation()." [label="wants_recalculation", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRouteProvider<P>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[`WebSocketProvider<P>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`HttpsProvider<F, P>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[`WebSocketProvider<P>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/ws_config_hash()." [label="ws_config_hash", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]for_oneshot()." [label="for_oneshot", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRoute<R>`][`ReplaceFragment<Self>`]replace()." [label="replace", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/single_resolved_route_e2e()." [label="single_resolved_route_e2e", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/impl#[`HashMap<&str, LookupResult>`][Resolver]lookup_ip()." [label="lookup_ip", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, P>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`TlsRouteProvider<P>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." [label="runs_resolutions_in_parallel", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/schedule_respects_order_of_routes_in_groups()." [label="schedule_respects_order_of_routes_in_groups", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[DomainFrontRouteProvider]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[`SimpleRoute<WebSocketRouteFragment, R>`][`ReplaceFragment<S>`]replace()." [label="replace", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyProvider#Direct#" [label="Direct", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_http()." [label="proxy_from_parts_signal_http", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#map_routes()." [label="map_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." [label="http_provider_route_order", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[`TcpRoute<Host<D>>`][`From<TcpRoute<IpAddr>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`WithLoggableDescription<R, D>`][`UsesTransport<super::SimpleRoute<super::TlsRouteFragment, DirectOrProxyRoute<TcpRoute<IpAddr>, ConnectionProxyRoute<IpAddr>>>>`]into_transport_part()." [label="into_transport_part", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[Alpn][`From<HttpVersion>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`DelayBasedOnTransport<T>`][`RouteDelayPolicy<R>`]wants_recalculation()." [label="wants_recalculation", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/as_resolved_group()." [label="as_resolved_group", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[`TcpRoute<IpAddr>`][`TryFrom<std::net::SocketAddr>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tls#" [label="Tls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[IpAddr][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." [label="as_replacer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#" [label="ResolvedRemotely", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`SwapPairStream<S>`][FusedStream]is_terminated()." [label="is_terminated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`SimpleRoute<TlsRouteFragment, R>`][`ReplaceFragment<S>`]replace()." [label="replace", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`SimpleRoute<HttpRouteFragment, R>`][`ReplaceFragment<S>`]replace()." [label="replace", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/multiple_resolved_routes_e2e()." [label="multiple_resolved_routes_e2e", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#" [label="Proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#" [label="ResolvedLocally", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ResolveWithSavedDescription<R>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#None#" [label="None", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcome_delay_bounds()." [label="connection_outcome_delay_bounds", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver][Resolver]lookup_ip()." [label="lookup_ip", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()." [label="resolve_route", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`&C`][`Connector<R, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/RouteDelayPolicy#wants_recalculation()." [label="wants_recalculation", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`DelayBasedOnTransport<T>`][`RouteDelayPolicy<R>`]compute_delay()." [label="compute_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportUsernames#" [label="SchemeDoesNotSupportUsernames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Host<A>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#MissingHost#" [label="MissingHost", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]replace_locally_resolved()." [label="replace_locally_resolved", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()." [label="compute_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[usize][SequentialKey]seq_next()." [label="seq_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/testutils/impl#[`ConnectFn<F>`][`Connector<R, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/testutils/impl#[DummyDelayConnector][`Connector<R, T>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#V6#" [label="V6", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/impl#[`Filter<R, F>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`&mut P`][`RouteDelayPolicy<R>`]compute_delay()." [label="compute_delay", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[DirectTcpRouteProvider]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" [label="RecalculateDelays", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#Mixed#" [label="Mixed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`Host<H>`][`From<&SimpleRoute<TlsRouteFragment, T>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[`Host<D>`][`From<&TcpRoute<IpAddr>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Either<L, R>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Host<A>`][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`ComposedConnector<A, B, Error>`][`Connector<super::SimpleRoute<WebSocketRouteFragment, super::SimpleRoute<HttpRouteFragment, T>>, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`SwapPairStream<S>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/udp/impl#[StatelessUdpConnector][`Connector<UdpRoute<IpAddr>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][`AsMut<Self>`]as_mut()." [label="as_mut", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#" [label="Socks", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#" [label="Tls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[UnresolvedHost][ResolveHostnames]resolve()." [label="resolve", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRouteProvider<P>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/schedule_waits_for_first()." [label="schedule_waits_for_first", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/ws_config_eq()." [label="ws_config_eq", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[DnsResolver][Resolver]lookup_ip()." [label="lookup_ip", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#" [label="Https", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[UnresolvedHost][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/returns_error_on_resolution_failure()." [label="returns_error_on_resolution_failure", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResettingConnectionOutcomes<R>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`HttpsProvider<F, P>`][RouteProvider]routes()." [label="routes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#PulledFromResolver#" [label="PulledFromResolver", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[`TcpRoute<A>`][`ReplaceFragment<Self>`]replace()." [label="replace", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]respond()." [label="respond", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolvedRoute]immediate_target()." [label="immediate_target", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ProxyTarget<Host<UnresolvedHost>>`]as_informational_host()." [label="as_informational_host", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]status()." [label="status", tooltip=""]
  }
  subgraph cluster_60 {
    label = "rust/net/infra/src/route/connect";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_min_timeout_failure()." [label="test_min_timeout_failure", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_slow_connection()." [label="test_slow_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_log_tag()." [label="test_log_tag", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<C>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/ReasonToCheck#NetworkChangeEvent#" [label="NetworkChangeEvent", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[DefaultGetCurrentInterface][GetCurrentInterface]get_interface_for()." [label="get_interface_for", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()." [label="save_preconnected", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()." [label="test_factory", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]into_connectors()." [label="into_connectors", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/connect_without_wrapper_ignores_saved()." [label="connect_without_wrapper_ignores_saved", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`AsMut<S>`]as_mut()." [label="as_mut", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, E>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`][`ConnectorFactory<UsePreconnect<R>>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_ref()." [label="as_pin_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]project_ref()." [label="project_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[DefaultGetCurrentInterface][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/respects_should_field()." [label="respects_should_field", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]poll_ready()." [label="poll_ready", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceMonitor<Inner, F>`][`Connector<R, Over>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`AsRef<S>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_log_tag()." [label="test_log_tag", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]connect_inner_then_outer_with_timeout()." [label="connect_inner_then_outer_with_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, E>`]into_connectors()." [label="into_connectors", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#Other#" [label="Other", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()." [label="as_pin_mut", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/try_connection()." [label="try_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/network_change_timeout()." [label="network_change_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_variable_timeout_failure()." [label="test_variable_timeout_failure", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]poll_close()." [label="poll_close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncWrite]poll_write()." [label="poll_write", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/only_one_success_is_saved()." [label="only_one_success_is_saved", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`][`Connector<R, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]start_send()." [label="start_send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_success()." [label="test_success", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, Err>`][`Connector<DirectOrProxyRoute<DR, PR>, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceMonitor<Inner>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/successes_are_used_unless_timed_out()." [label="successes_are_used_unless_timed_out", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()." [label="pre", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/failure_preserves_saved_connection()." [label="failure_preserves_saved_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]connect_inner_then_outer()." [label="connect_inner_then_outer", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#InterfaceChanged#" [label="InterfaceChanged", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/success_clears_saved_connection()." [label="success_clears_saved_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/impl#[F][GetCurrentInterface]get_interface_for()." [label="get_interface_for", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`][`Connector<R, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncWrite]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingConnector<R, C>`][`Connector<UsePreconnect<R>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`][`ConnectorFactory<R>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]replace_connector()." [label="replace_connector", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/passthrough()." [label="passthrough", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_fast_connection()." [label="test_fast_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncWrite]poll_shutdown()." [label="poll_shutdown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]into_connectors_and_min_timeout()." [label="into_connectors_and_min_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/ReasonToCheck#Poll#" [label="Poll", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceChangedOr<E>`]into_inner_or_else()." [label="into_inner_or_else", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/connection_can_still_finish_normally()." [label="connection_can_still_finish_normally", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]poll_flush()." [label="poll_flush", tooltip=""]
  }
  subgraph cluster_61 {
    label = "rust/net/infra/src/service";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_before_clone_is_visible()." [label="cancel_before_clone_is_visible", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancelled_is_idempotent()." [label="cancelled_is_idempotent", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]is_cancelled()." [label="is_cancelled", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." [label="cancel_unblocks_cancelled_future", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_is_visible()." [label="cancel_is_visible", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/first_cancel_wins()." [label="first_cancel_wins", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()." [label="cancelled", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()." [label="cancel", tooltip=""]
  }
  subgraph cluster_62 {
    label = "rust/net/infra/src/tcp_ssl";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()." [label="bind_localhost", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]into_listener()." [label="into_listener", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tcp_proxy()." [label="localhost_tcp_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[`Either<L, R>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[TcpStream][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[`ProxyServer<S>`]proxy()." [label="proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()." [label="localhost_tls_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/parse_sni_from_stream()." [label="parse_sni_from_stream", tooltip=""]
  }
  subgraph cluster_63 {
    label = "rust/net/infra/src/tcp_ssl/proxy";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/authorization_rejected()." [label="authorization_rejected", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#InvalidUri#" [label="InvalidUri", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()." [label="parse_host_for_tls_opt_out", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." [label="connect_through_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#Transport#" [label="Transport", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[ErrorForLog][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/successful_connect()." [label="successful_connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/TargetAddressType#IpTarget#" [label="IpTarget", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncWrite]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." [label="socks5_server_basic_e2e", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#InvalidRequest#" [label="InvalidRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new_tcp()." [label="new_tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/impl#[ProxyService][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncWrite]poll_shutdown()." [label="poll_shutdown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[Protocol]connect_to_proxy()." [label="connect_to_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Authentication][Auth]as_handshake_method()." [label="as_handshake_method", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Tcp#" [label="Tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncWrite]poll_write()." [label="poll_write", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#No#" [label="No", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/TargetAddressType#HostnameTarget#" [label="HostnameTarget", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/SocksStream#Socks5#" [label="Socks5", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]set_proxy()." [label="set_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]accept()." [label="accept", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#" [label="ResolveRemotely", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyAuth][AsHttpHeader]header_value()." [label="header_value", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpUpgradeFailed#" [label="HttpUpgradeFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpRequestFailed#" [label="HttpRequestFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/Auth#Authenticated#" [label="Authenticated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Http#" [label="Http", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[ProtocolKind][`From<&Protocol>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Authentication][Auth]execute()." [label="execute", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#" [label="Socks5", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()." [label="connect_https11_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." [label="connect_through_unencrypted_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Socks#" [label="Socks", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/Auth#Unauthenticated#" [label="Unauthenticated", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks4#" [label="Socks4", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveLocally#" [label="ResolveLocally", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpRequestRejected#" [label="HttpRequestRejected", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/spawn_localhost_proxy()." [label="spawn_localhost_proxy", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." [label="server_rejects_authentication", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`super::StatelessProxied`][`Connector<SocksRoute<IpAddr>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/make_connect_request()." [label="make_connect_request", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`LogSafeHyperError<E>`][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Tls#" [label="Tls", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`SocksStream<TcpStream>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/impl#[ProxyService][`Service<Request<Incoming>>`]call()." [label="call", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/SocksStream#Socks4#" [label="Socks4", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`Socks5Stream<TcpStream>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`Socks4Stream<TcpStream>`][Connection]transport_info()." [label="transport_info", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpConnectionFailed#" [label="HttpConnectionFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#Yes#" [label="Yes", tooltip=""]
  }
  subgraph cluster_64 {
    label = "rust/net/infra/src/utils";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_for_multiple_receivers()." [label="oneshot_broadcast_completes_for_multiple_receivers", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]peek()." [label="peek", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][`Extend<T>`]extend()." [label="extend", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`KeyValue<K, V>`][`PartialOrd<Self>`]partial_cmp()." [label="partial_cmp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/impl#[`SomeOrPending<F>`][`From<Option<F>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]is_empty()." [label="is_empty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_receiver_cloned_after_completion()." [label="oneshot_broadcast_completes_receiver_cloned_after_completion", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`KeyValue<K, V>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]pop()." [label="pop", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]is_empty()." [label="is_empty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]push()." [label="push", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()." [label="channel", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]len()." [label="len", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]len()." [label="len", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_ordering()." [label="min_heap_ordering", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_can_be_used_multiple_times()." [label="oneshot_broadcast_can_be_used_multiple_times", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/results_within_interval()." [label="results_within_interval", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][`Extend<(K, V)>`]extend()." [label="extend", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/impl#[`SomeOrPending<F>`][Future]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`KeyValue<K, V>`][Ord]cmp()." [label="cmp", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_ordering()." [label="min_kv_queue_ordering", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]peek()." [label="peek", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_receiver_error_if_sender_dropped()." [label="oneshot_broadcast_receiver_error_if_sender_dropped", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#is_empty()." [label="is_empty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`]val()." [label="val", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`]recalculate_keys()." [label="recalculate_keys", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/impl#[`SomeOrPending<F>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]pop()." [label="pop", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_extend_peek_empty()." [label="min_heap_extend_peek_empty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_sender_error_if_no_receivers()." [label="oneshot_broadcast_sender_error_if_no_receivers", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_extend_peek_empty()." [label="min_kv_queue_extend_peek_empty", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]push()." [label="push", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Sender<T>`]send()." [label="send", tooltip=""]
  }
  subgraph cluster_65 {
    label = "rust/net/infra/src/ws";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#HeaderValue#" [label="HeaderValue", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[IoError][`From<TransportError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]start_send()." [label="start_send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#" [label="WebSocketError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][`From<std::io::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()." [label="into_io_error", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[SpaceError][`From<tungstenite::error::CapacityError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#HeaderName#" [label="HeaderName", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#Method#" [label="Method", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Url#" [label="Url", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#" [label="Transport", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<tungstenite::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]poll_ready()." [label="poll_ready", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Space#" [label="Space", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Http#" [label="Http", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#Capacity#" [label="Capacity", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]poll_close()." [label="poll_close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#UnexpectedTlsError#" [label="UnexpectedTlsError", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#Uri#" [label="Uri", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#StatusCode#" [label="StatusCode", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[ProtocolError][`From<tungstenite::error::ProtocolError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/TransportError#UnexpectedTextFrame#" [label="UnexpectedTextFrame", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#HttpFormat#" [label="HttpFormat", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[UnexpectedCloseError][`From<Option<CloseFrame<'_>>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#SendQueueFull#" [label="SendQueueFull", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#BadUtf8#" [label="BadUtf8", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[ProtocolError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/TransportError#UnexpectedClose#" [label="UnexpectedClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Closed#" [label="Closed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#UriParts#" [label="UriParts", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[UnexpectedCloseError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][Stream]poll_next()." [label="poll_next", tooltip=""]
  }
  subgraph cluster_66 {
    label = "rust/net/infra/src/ws2";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()." [label="receive_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Attestation#" [label="Attestation", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]write()." [label="write", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()." [label="run_attested_server", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/impl#[`NextOrClose<T>`]unwrap_next()." [label="unwrap_next", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#UnexpectedConnectionClose#" [label="UnexpectedConnectionClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()." [label="run_attested_echo_server", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." [label="read", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedTextMessage#" [label="UnexpectedTextMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send_bytes()." [label="send_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#UnexpectedClose#" [label="UnexpectedClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#ServerIdleTooLong#" [label="ServerIdleTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[TextOrBinary]try_into_binary()." [label="try_into_binary", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#ProtobufDecode#" [label="ProtobufDecode", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#ConnectionClosed#" [label="ConnectionClosed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedConnectionClose#" [label="UnexpectedConnectionClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#SendFailed#" [label="SendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<attest::client_connection::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<mpsc::error::SendError<T>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#WebSocket#" [label="WebSocket", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#ServerIdleTooLong#" [label="ServerIdleTooLong", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/fail_to_handshake()." [label="fail_to_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#ReceivedInvalidUtf8#" [label="ReceivedInvalidUtf8", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." [label="attested_connection_invalid_decode", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." [label="attested_connection_happy_path", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#WebSocketSend#" [label="WebSocketSend", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#TextFrame#" [label="TextFrame", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." [label="spawned_task_body", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]handshake_hash()." [label="handshake_hash", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#AbnormalServerClose#" [label="AbnormalServerClose", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<oneshot::error::RecvError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection][`AsMut<Self>`]as_mut()." [label="as_mut", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#WebSocketProtocol#" [label="WebSocketProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." [label="authenticate", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#WebSocketReceive#" [label="WebSocketReceive", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send()." [label="send", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/run_attested_interaction()." [label="run_attested_interaction", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#WebSocketProtocol#" [label="WebSocketProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]close()." [label="close", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#MessageTooLarge#" [label="MessageTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_handshake()." [label="attested_connection_invalid_handshake", tooltip=""]
  }
  subgraph cluster_67 {
    label = "rust/net/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#ConnectionTimedOut#" [label="ConnectionTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_captcha()." [label="submit_captcha", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]new_complete()." [label="new_complete", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()." [label="route_provider", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()." [label="with_libsignal_version", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_id()." [label="session_id", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." [label="monitor_and_search_no_search_needed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#ServerInternalError#" [label="ServerInternalError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 svr/impl#[`SvrConnection<Kind>`][IntoAttestedConnection]into_labeled_connection()." [label="into_labeled_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#ServerUnavailable#" [label="ServerUnavailable", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]and_then()." [label="and_then", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." [label="html_status_tests", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/EnclaveKind#url_path()." [label="url_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#RateLimitExceeded#" [label="RateLimitExceeded", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." [label="send_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`(Result<A, Error>, Result<B, Error>, Result<C, Error>)`][IntoConnectionResults]into_connection_results()." [label="into_connection_results", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_request()." [label="submit_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/test/live_resolve_eq_static_resolution()." [label="live_resolve_eq_static_resolution", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[E164][FixedLengthSerializable]serialize_into()." [label="serialize_into", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." [label="preconnect_same_route", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, E>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]check_svr2_credentials()." [label="check_svr2_credentials", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/username_hash()." [label="username_hash", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_verification_code()." [label="submit_verification_code", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#" [label="RateLimited", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]network_changed()." [label="network_changed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt][KtApi]search()." [label="search", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." [label="large_request_split", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()." [label="test_account_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ConnectionInfo][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()." [label="into_handler_with_close_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." [label="verify_chat_search_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/impl#[KtUnauthChatConnection][UnauthenticatedChat]send_unauthenticated()." [label="send_unauthenticated", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_verification_code()." [label="request_verification_code", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_e164()." [label="for_e164", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/test/chat_has_confirmation_header()." [label="chat_has_confirmation_header", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#" [label="InvalidRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][AsChatValue]as_chat_value()." [label="as_chat_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`()`][`AsRaftConfig<'a>`]as_raft_config()." [label="as_raft_config", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[ConnectionLabel]from_log_safe()." [label="from_log_safe", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry][FixedLengthSerializable]serialize_into()." [label="serialize_into", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[ConnectionLabel][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_username_hash()." [label="for_username_hash", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." [label="monitor", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][SearchKey]as_search_key()." [label="as_search_key", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/distinguished_integration_test()." [label="distinguished_integration_test", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/BumpVersionFor#E164#" [label="E164", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[It][CollectSerialized]collect_serialized()." [label="collect_serialized", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()." [label="preconnect_and_save", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingTokenAck#" [label="AwaitingTokenAck", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#" [label="InvalidArgument", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<TC>`]snapshot()." [label="snapshot", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<prost::DecodeError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 svr/impl#[`SvrConnection<E>`]connect()." [label="connect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[`Env<'a>`]static_fallback()." [label="static_fallback", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[PendingChatConnection]disconnect()." [label="disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_push_challenge()." [label="request_push_challenge", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]resume_session()." [label="resume_session", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/collect_test_data()." [label="collect_test_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." [label="unexpected_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." [label="prompt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()." [label="new_multi", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/cmp_by_key()." [label="cmp_by_key", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/extract_value_as()." [label="extract_value_as", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection][`AsMut<AttestedConnection>`]as_mut()." [label="as_mut", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSerializedResponse][`TryFrom<chat::Response>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." [label="distinguished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][SearchKey]as_search_key()." [label="as_search_key", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[NetConfig][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<std::result::Result<T, E>>`]transpose()." [label="transpose", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]from_websocket_error()." [label="from_websocket_error", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/err_for_close()." [label="err_for_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[`Auth<S>`][AsHttpHeader]header_value()." [label="header_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()." [label="direct_connection_params", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/validate_invalid_data()." [label="validate_invalid_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[SendError][`From<ResponseProtoInvalidError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." [label="monitor_and_search_monitor_error_is_returned", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`chat::Request`][`From<RawChatMonitorRequest>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]otp()." [label="otp", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." [label="monitor_and_search_e164_changed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/BumpVersionFor#UsernameHash#" [label="UsernameHash", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/common_headers()." [label="common_headers", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]into_inner()." [label="into_inner", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SearchValue<'_>`]payload()." [label="payload", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[AuthenticatedChatHeaders][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#UsernameHash#" [label="UsernameHash", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." [label="resume_session_and_make_requests", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." [label="simple_chat_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Cdsi][EnclaveKind]url_path()." [label="url_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]map()." [label="map", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#Finished#" [label="Finished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#" [label="CdsiProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedMonitorResponse]from_untyped()." [label="from_untyped", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/proto_into_response_works_with_valid_data_and_no_body()." [label="proto_into_response_works_with_valid_data_and_no_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/parse_lookup_response_entries()." [label="parse_lookup_response_entries", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][SearchKey]as_search_key()." [label="as_search_key", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." [label="monitor_and_search_search_success", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." [label="lookup_success", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]register_account()." [label="register_account", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#" [label="EnclaveProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][`TryFrom<SearchValue<'_>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest]into_client_request()." [label="into_client_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[Uuid][FixedLengthSerializable]serialize_into()." [label="serialize_into", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[DefaultConnectorFactory][`ConnectorFactory<R>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." [label="create_session", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry]try_parse_from()." [label="try_parse_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ReceiveStories][AsHttpHeader]header_value()." [label="header_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/submit_request_impl()." [label="submit_request_impl", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()." [label="aci", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, C>`]ws2_config()." [label="ws2_config", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#" [label="RejectedByServer", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]invalid_proxy_configuration()." [label="invalid_proxy_configuration", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_stored_account_data()." [label="test_stored_account_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`(Result<A, Error>, Result<B, Error>)`][IntoConnectionResults]into_connection_results()." [label="into_connection_results", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." [label="search_does_not_return_requested_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[ConnectState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." [label="websocket_invalid_token_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/non_nil_uuid()." [label="non_nil_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent][AsHttpHeader]header_value()." [label="header_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][AsChatValue]as_chat_value()." [label="as_chat_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()." [label="aci_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt][KtApi]distinguished()." [label="distinguished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedSearchResponse]from_untyped()." [label="from_untyped", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingLookupRequest#" [label="AwaitingLookupRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]send()." [label="send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#E164#" [label="E164", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#InvalidArgument#" [label="InvalidArgument", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SearchValue<'a>`][`TryFrom<&VerifiedSearchResult>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." [label="search_returns_data_not_requested", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." [label="websocket_rejected_with_http_429_too_many_requests", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." [label="search_for_deleted_account", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/test/classify_errors()." [label="classify_errors", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#" [label="WebSocket", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][`From<Vec<u8>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/proto_into_response_works_and_headers_parsed_correctly()." [label="proto_into_response_works_and_headers_parsed_correctly", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." [label="websocket_close_with_rate_limit_exceeded_after_initial_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#" [label="ParseError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiCloseCode][`TryFrom<u16>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_push_challenge()." [label="submit_push_challenge", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[PendingChatConnection]connection_info()." [label="connection_info", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/serialize_acis_and_access_keys()." [label="serialize_acis_and_access_keys", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequestDebugInfo][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteInfo][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt][KtApi]monitor()." [label="monitor", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#" [label="ConnectTransport", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/test/impl#[`ConnectOnlyOnce<C>`][ConnectChat]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]route_type()." [label="route_type", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/decode_response()." [label="decode_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#InvalidToken#" [label="InvalidToken", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[Error][`From<DecodeError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." [label="client_abort_transport_error_is_fatal", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()." [label="test_distinguished_tree", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/serialize_e164s()." [label="serialize_e164s", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." [label="search", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EndpointParams<'a, E>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]with_net_config()." [label="with_net_config", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_aci()." [label="for_aci", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." [label="websocket_close_with_rate_limit_exceeded_after_token_ack", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`(AttestedConnection, ConnectionLabel)`][IntoAttestedConnection]into_labeled_connection()." [label="into_labeled_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()." [label="new_with_transport_connector", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()." [label="monitor_and_search", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/NewHandshake#new_handshake()." [label="new_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/test/impl#[`ConnectOnlyOnce<testutil::FakeChatConnect>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/test/cdsi_has_no_confirmation_header()." [label="cdsi_has_no_confirmation_header", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#AttestationError#" [label="AttestationError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<LookupResponseParseError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'a>`]from_slice()." [label="from_slice", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]timeout()." [label="timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#VerificationFailed#" [label="VerificationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`chat::Request`][`From<RawChatSearchRequest>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/encode_response()." [label="encode_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." [label="connect_ws_successful", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiProtocolError#NoTokenInResponse#" [label="NoTokenInResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]shuffled_connection_params()." [label="shuffled_connection_params", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteInfo]fake()." [label="fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]into_listener()." [label="into_listener", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()." [label="make_kt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()." [label="connection_params_with_fallback", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`][`From<T>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupResponseParseError#InvalidNumberOfBytes#" [label="InvalidNumberOfBytes", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_single_search_response()." [label="verify_single_search_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_state()." [label="session_state", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`ConnectChatFn<'a, F>`][ConnectChat]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`chat::Request`][`From<RawChatDistinguishedRequest>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`Result<A, Error>`][IntoConnectionResults]into_connection_results()." [label="into_connection_results", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][AsChatValue]as_chat_value()." [label="as_chat_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]connection_info()." [label="connection_info", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#" [label="AttestationError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][`From<Box<[u8]>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." [label="preconnect_records_outcomes", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_search_response()." [label="test_search_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." [label="connect_ws_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[IdentityKey][`TryFrom<SearchValue<'_>>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler()." [label="into_handler", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#" [label="InvalidToken", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/proto_into_response_fails_for_invalid_data()." [label="proto_into_response_fails_for_invalid_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt]for_monitor()." [label="for_monitor", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[FakeChatConnect][ConnectChat]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()." [label="receive_frame", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." [label="connect_config_routes_enable_domain_fronting", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." [label="monitor_permutations_integration_test", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." [label="random_usize", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/has_version_changed_between()." [label="has_version_changed_between", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." [label="start_connect_with_transport", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." [label="connect_attested_ws", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." [label="classify", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]finish_connect()." [label="finish_connect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." [label="resume_session", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[AciAndAccessKey][FixedLengthSerializable]serialize_into()." [label="serialize_into", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[Response][`TryFrom<proto::chat_websocket::WebSocketResponseMessage>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." [label="cooldowns_reset_on_network_change_even_during_connect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/match_optional_fields()." [label="match_optional_fields", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Cdsi][NewHandshake]new_handshake()." [label="new_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`ConnectChatFn<'_, F>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/add_user_agent_header()." [label="add_user_agent_header", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'a>`]into_vec()." [label="into_vec", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[SgxPreQuantum][NewHandshake]new_handshake()." [label="new_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`&RaftConfig`][`AsRaftConfig<'a>`]as_raft_config()." [label="as_raft_config", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#" [label="ConnectionTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#ChatSendError#" [label="ChatSendError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." [label="connect_ws", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]hostnames()." [label="hostnames", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[DomainConfig]static_fallback()." [label="static_fallback", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#WebSocket#" [label="WebSocket", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[SgxPreQuantum][EnclaveKind]url_path()." [label="url_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()." [label="connect_with", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." [label="route_provider", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/values_to_vec()." [label="values_to_vec", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." [label="collect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()." [label="endpoint_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#" [label="RequestFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()." [label="make_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." [label="search_for_account_that_isnt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#" [label="Server", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[PublicConfig][`From<KeyTransConfig>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponse][`TryFrom<ClientResponse>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]disconnect()." [label="disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequestDebugInfo][`From<&LookupRequest>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#DecodingFailed#" [label="DecodingFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." [label="search_permutations_integration_test", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#" [label="Connect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]create_session()." [label="create_session", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/reregister_account()." [label="reregister_account", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]send()." [label="send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/test/proto_into_response_works_with_valid_data()." [label="proto_into_response_works_with_valid_data", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]from_uid_and_secret()." [label="from_uid_and_secret", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#WebSocketConnect#" [label="WebSocketConnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with()." [label="start_connect_with", tooltip=""]
  }
  subgraph cluster_68 {
    label = "rust/net/src/chat";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_listener_close_on_remote_disconnect()." [label="sends_listener_close_on_remote_disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#ResponseMissingId#" [label="ResponseMissingId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#Finished#" [label="Finished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[IntoFakeInnerConnection][IntoInnerConnection]into_inner_connection()." [label="into_inner_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_id_wraps_around()." [label="request_id_wraps_around", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#" [label="Disconnected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#Finished#" [label="Finished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<TungsteniteSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/ReceiveRequestError#InvalidWebsocketMessageType#" [label="InvalidWebsocketMessageType", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEventError#UnexpectedVerb#" [label="UnexpectedVerb", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#" [label="RequestHasInvalidHeader", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/disconnects_server_on_client_disconnect()." [label="disconnects_server_on_client_disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]report_alerts()." [label="report_alerts", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Alerts#" [label="Alerts", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`FakeInnerConnection<R>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#SentRequest#" [label="SentRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." [label="send_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." [label="spawned_task_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`OutcomeOrPanic<C, F>`][`From<Outcome<C, F>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ListenerState]send_event_blocking()." [label="send_event_blocking", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." [label="is_not_connected_after_remote_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_one_event()." [label="handle_one_event", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`libsignal_net_infra::ws2::Connection<S, R>`][InnerConnection]handle_next_event()." [label="handle_next_event", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ListenerState]send_event()." [label="send_event", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()." [label="new_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#RequestMissingId#" [label="RequestMissingId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." [label="websocket_close_code_maps_to_correct_error", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#" [label="ConnectedElsewhere", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendIo#" [label="SendIo", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]poll_ready()." [label="poll_ready", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/SendError#Noise#" [label="Noise", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()." [label="new_inner", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]project()." [label="project", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#" [label="WebSocket", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Protocol#" [label="Protocol", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Stopped#" [label="Stopped", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#" [label="InvalidConnectionConfiguration", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#" [label="Response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TransportConnectError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#InvalidRequest#" [label="InvalidRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessage#Request#" [label="Request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[InFlightRequests]finish_send()." [label="finish_send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#" [label="AllAttemptsFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#UnknownMessageType#" [label="UnknownMessageType", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()." [label="send_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessage#Response#" [label="Response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Outgoing#" [label="Outgoing", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#" [label="Disconnected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" [label="Incoming", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#IncomingMessage#" [label="IncomingMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#QueueEmpty#" [label="QueueEmpty", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#SendFailed#" [label="SendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#ResponseHasRequest#" [label="ResponseHasRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/ReceiveRequestError#GotResponse#" [label="GotResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." [label="handle_inner_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_request()." [label="send_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`FakeInnerConnection<R>`][InnerConnection]handle_next_event()." [label="handle_next_event", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#" [label="Finished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()." [label="is_connected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()." [label="new_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/IncomingEvent#ReceivedRequest#" [label="ReceivedRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/impl#[`std::io::Error`][`From<SendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws/response_for_code()." [label="response_for_code", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEventError#MissingPath#" [label="MissingPath", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/SendError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendTooLarge#" [label="SendTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." [label="send_error_if_server_disconnected_before_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_during_task_panic_doesnt_abort()." [label="listener_panic_during_task_panic_doesnt_abort", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." [label="decode_and_validate", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]start_send()." [label="start_send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()." [label="send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][Stream]poll_next()." [label="poll_next", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#" [label="ReceivedMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#" [label="WebSocket", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#ResponseToIncoming#" [label="ResponseToIncoming", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskSendError#StreamSendFailed#" [label="StreamSendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." [label="convert_received_message", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()." [label="disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ReceiveRequestError][`From<ws2::ChatProtoDataError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." [label="sends_requests_and_receives_responses", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat_with_config()." [label="new_chat_with_config", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." [label="request_succeeds_even_if_followed_immediately_by_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<TaskSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#MaybeStillRunning#" [label="MaybeStillRunning", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#MessageTooLarge#" [label="MessageTooLarge", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/wait_for_task_to_finish()." [label="wait_for_task_to_finish", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#IntentionalPanic#" [label="IntentionalPanic", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#InvalidProtobuf#" [label="InvalidProtobuf", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#" [label="IncomingDataInvalid", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#DataError#" [label="DataError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/reports_alerts()." [label="reports_alerts", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendProtocol#" [label="SendProtocol", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`(S, libsignal_net_infra::ws2::Config)`][IntoInnerConnection]into_inner_connection()." [label="into_inner_connection", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[OutgoingRequest]make_message()." [label="make_message", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#InvalidMessageType#" [label="InvalidMessageType", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/response_for_status()." [label="response_for_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#MissingPayload#" [label="MissingPayload", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#ReceiveFailed#" [label="ReceiveFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." [label="receives_incoming_server_requests_and_responds", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/client_disconnect_twice()." [label="client_disconnect_twice", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#ReceivedTextMessage#" [label="ReceivedTextMessage", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#" [label="RequestTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." [label="continues_on_invalid_incoming_message", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Responder]send_response()." [label="send_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." [label="listener_panic_on_receive_incoming", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#WebsocketError#" [label="WebsocketError", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#RequestHasResponse#" [label="RequestHasResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#" [label="Request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[TextOrBinary][`From<crate::proto::chat_websocket::WebSocketMessage>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#UnexpectedConnectionClose#" [label="UnexpectedConnectionClose", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#" [label="ConnectionInvalidated", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#SignaledToEnd#" [label="SignaledToEnd", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#Error#" [label="Error", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[InFlightRequests]record_send()." [label="record_send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/ReceiveRequestError#InvalidProto#" [label="InvalidProto", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()." [label="receive_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." [label="send_failure_causes_disconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]poll_close()." [label="poll_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#" [label="DeviceDeregistered", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#LocalDisconnect#" [label="LocalDisconnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEventError#UnrecognizedPath#" [label="UnrecognizedPath", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws/impl#[`ResponseSender<S>`]send_response()." [label="send_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_close()." [label="send_close", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/InvalidRequestError#InvalidHeader#" [label="InvalidHeader", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#" [label="ReceivedAlerts", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[`mpsc::UnboundedSender<ListenerEvent>`][IntoEventListener]into_event_listener()." [label="into_event_listener", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ListenerState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#AbnormalServerClose#" [label="AbnormalServerClose", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#Panic#" [label="Panic", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Io#" [label="Io", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskSendError#InvalidResponse#" [label="InvalidResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#Continue#" [label="Continue", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#" [label="AppExpired", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#ServerIdleTooLong#" [label="ServerIdleTooLong", tooltip=""]
  }
  subgraph cluster_69 {
    label = "rust/net/src/chat/noise";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/SendRequest#InitialSend#" [label="InitialSend", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers][`AsRef<Waker>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`][Future]poll()." [label="poll", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Handshake#" [label="Handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." [label="encrypted_stream_authenticated_handshake_success", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/read_only_stream_after_handshake()." [label="read_only_stream_after_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Established#" [label="Established", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_reader()." [label="wake_reader", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuthKind#IK#" [label="IK", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." [label="poll_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#IK#" [label="IK", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]save_from()." [label="save_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." [label="send_starts_after", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]wake_if_some()." [label="wake_if_some", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/anonymous_server_handshake()." [label="anonymous_server_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_writer()." [label="wake_writer", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." [label="poll_write", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#SendRequest#" [label="SendRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/SendRequest#FlushSent#" [label="FlushSent", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." [label="start_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Nascent#" [label="Nascent", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[InitialPayloadAuth]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_reader_from()." [label="save_reader_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[SendRequest]poll_send_and_flush()." [label="poll_send_and_flush", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_shutdown()." [label="poll_shutdown", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#" [label="Anonymous", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#ReadResponse#" [label="ReadResponse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[HandshakeAuthKind][`From<&HandshakeAuth<'k>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[HandshakeAuthKind]handshake_message_len()." [label="handshake_message_len", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner]with_lock()." [label="with_lock", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/half_close_during_handshake()." [label="half_close_during_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#NK#" [label="NK", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_writer_from()." [label="save_writer_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuthKind#NK#" [label="NK", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." [label="early_read_gets_woken_up", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." [label="wake_count_during_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Authenticated#" [label="Authenticated", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/NascentBuffer#NoInitialPayload#" [label="NoInitialPayload", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." [label="poll_read", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner][Wake]wake()." [label="wake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_anonymous_handshake_success()." [label="encrypted_stream_anonymous_handshake_success", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." [label="poll_shutdown", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/authenticating_server_handshake()." [label="authenticating_server_handshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." [label="new", tooltip=""]
  }
  subgraph cluster_70 {
    label = "rust/net/src/registration";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnexpectedData#" [label="UnexpectedData", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_chat_disconnect_results_in_failed_request()." [label="spawned_chat_disconnect_results_in_failed_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnrecognizedStatus#" [label="UnrecognizedStatus", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#PushChallenge#" [label="PushChallenge", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/request_sent_to_task_cancelled_before_send()." [label="request_sent_to_task_cancelled_before_send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionErrorDiscriminants#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SignedPreKeyBody<T>`]as_deref()." [label="as_deref", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#Unexpected#" [label="Unexpected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`LanguageList<'_>`][AsHttpHeader]header_value()." [label="header_value", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Request#request_path()." [label="request_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<RetryLater>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/CollectSortedStatuses#sorted_statuses()." [label="sorted_statuses", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#RequestTimedOut#" [label="RequestTimedOut", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][`TryFrom<String>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/SessionValidation#SessionId#" [label="SessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[VerificationTransport][FromStr]from_str()." [label="from_str", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#" [label="UnrecognizedStatus", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidRequest#" [label="InvalidRequest", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<UpdateSessionError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionErrorDiscriminants#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RequestError<E>`][`From<FatalConnectError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_type_from_status()." [label="error_type_from_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ProvidedAccountAttributes<'_>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`RequestVerificationCode<'_>`][Request]request_path()." [label="request_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_fails_on_timeout()." [label="send_request_fails_on_timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidJson#" [label="InvalidJson", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get()." [label="get", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationResponse]into_websocket_response()." [label="into_websocket_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushTokenType#Apn#" [label="Apn", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationLock]from_response()." [label="from_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`DebugAsStrOrBytes<'_>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_for_status()." [label="error_for_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`][`From<CreateSession>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#" [label="Other", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/e()." [label="e", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]connect_and_send()." [label="connect_and_send", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Request]to_json_body()." [label="to_json_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#MissingBody#" [label="MissingBody", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/test/log_safe_session_id()." [label="log_safe_session_id", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`][`From<RegistrationRequest<'s, R>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/VerificationTransport#Sms#" [label="Sms", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[GetSession][Request]request_path()." [label="request_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Gcm#" [label="Gcm", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_get_session_request_as_chat_request()." [label="registration_get_session_request_as_chat_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/test/parse()." [label="parse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[CheckSvr2CredentialsErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionErrorDiscriminants#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_request_verification_as_chat_request()." [label="registration_request_verification_as_chat_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/check_svr2_credentials_request()." [label="check_svr2_credentials_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[VerificationCodeNotDeliverable]from_response()." [label="from_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RegisterAccountErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#CodeNotDeliverable#" [label="CodeNotDeliverable", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RegistrationRecoveryVerificationFailed#" [label="RegistrationRecoveryVerificationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[SubmitVerificationErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`RequestVerificationCode<'_>`][Request]to_json_body()." [label="to_json_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SignedPreKeyBody<&[u8]>`][`From<&T>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." [label="send_request_to_connected_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." [label="send_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[VerificationTransport][`TryFrom<String>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#" [label="RequestWasNotValid", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/SessionValidation#RecoveryPassword#" [label="RecoveryPassword", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[ResumeSessionErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionErrorDiscriminants#Rejected#" [label="Rejected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnexpectedContentType#" [label="UnexpectedContentType", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<RetryLater>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." [label="spawn_connected_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." [label="try_into_response", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RetryLater>`][`From<RetryLater>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[UpdateSessionErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#ApnRegistrationId#" [label="ApnRegistrationId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#Captcha#" [label="Captcha", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`]register_account()." [label="register_account", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#DeviceTransferIsPossibleButNotSkipped#" [label="DeviceTransferIsPossibleButNotSkipped", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." [label="register_account_request_fetches_messages_no_push_tokens", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushTokenType#Fcm#" [label="Fcm", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SignedPreKeyBody<T>`]to_owned()." [label="to_owned", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`RequestVerificationCode<'_>`][Request]headers()." [label="headers", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_task_exits_after_inactivity()." [label="spawned_task_exits_after_inactivity", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get_mut()." [label="get_mut", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]submit_chat_request()." [label="submit_chat_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/test/url_safe_base64_is_valid()." [label="url_safe_base64_is_valid", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_response_parse()." [label="register_account_response_parse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#RegistrationRecoveryVerificationFailed#" [label="RegistrationRecoveryVerificationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_response_deserialize()." [label="registration_response_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[MappedToTrue][`SerializeAs<HashSet<T>>`]serialize_as()." [label="serialize_as", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<InvalidSessionId>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#SendFailed#" [label="SendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/DisconnectTime#AfterRequestSent#" [label="AfterRequestSent", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionErrorDiscriminants#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CheckSvr2CredentialsError#CredentialsCouldNotBeParsed#" [label="CredentialsCouldNotBeParsed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/check_svr2_credentials_response_parse()." [label="check_svr2_credentials_response_parse", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Incoming#" [label="Incoming", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[T][CollectSortedStatuses]sorted_statuses()." [label="sorted_statuses", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Request#headers()." [label="headers", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<RetryLater>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()." [label="from_str", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Request]request_path()." [label="request_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" [label="GcmRegistrationId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Svr2CredentialsResult#NoMatch#" [label="NoMatch", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." [label="register_account_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Svr2CredentialsResult#Invalid#" [label="Invalid", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[PublicKeyBytes][`From<&PublicKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<E>`][`From<RequestError<SessionRequestError>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<InvalidSessionId>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SubmitVerificationCode<'_>`][Request]request_path()." [label="request_path", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#RequestFinished#" [label="RequestFinished", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<SessionRequestError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." [label="round_trip_all_variants", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Svr2CredentialsResult#Match#" [label="Match", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]as_url_path_segment()." [label="as_url_path_segment", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[`RequestError<E>`][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SendFailed#" [label="SendFailed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/VerificationTransport#Voice#" [label="Voice", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawned_task_body()." [label="spawned_task_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#NotReadyForVerification#" [label="NotReadyForVerification", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`][`From<CheckSvr2CredentialsRequest<'_>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#" [label="Timeout", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/start_request()." [label="start_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#InvalidConfiguration#" [label="InvalidConfiguration", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[CreateSessionErrorDiscriminants][AsStatus]as_status()." [label="as_status", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#DeviceTransferIsPossibleButNotSkipped#" [label="DeviceTransferIsPossibleButNotSkipped", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`NewMessageNotification<S>`]as_deref()." [label="as_deref", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#RegistrationLock#" [label="RegistrationLock", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." [label="send_request_retries_connect_on_transient_failure", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CheckSvr2CredentialsErrorDiscriminants#CredentialsCouldNotBeParsed#" [label="CredentialsCouldNotBeParsed", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Disconnected#" [label="Disconnected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#RetryLater#" [label="RetryLater", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#ConnectionLost#" [label="ConnectionLost", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegisterResponseEntitlements][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[GetSession][Request]to_json_body()." [label="to_json_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<ResponseError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#WillFetchMessages#" [label="WillFetchMessages", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_update_session_request_as_chat_request()." [label="registration_update_session_request_as_chat_request", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionErrorDiscriminants#InvalidSessionId#" [label="InvalidSessionId", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RegistrationLock#" [label="RegistrationLock", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/DisconnectTime#AfterConnectionSpawned#" [label="AfterConnectionSpawned", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<ResponseError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Apn#" [label="Apn", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_type_status_mapping()." [label="error_type_status_mapping", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SubmitVerificationCode<'_>`][Request]to_json_body()." [label="to_json_body", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#Rejected#" [label="Rejected", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#CodeNotDeliverable#" [label="CodeNotDeliverable", tooltip=""]
  }
  subgraph cluster_71 {
    label = "rust/net/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." [label="direct_connect_fails_after_30s_but_proxies_reachable", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." [label="connect_again_skips_timed_out_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 get_enclave_secret()." [label="get_enclave_secret", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." [label="only_proxies_are_reachable", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 impl#[DnsLookupThatNeverCompletes][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 parse_auth_secret()." [label="parse_auth_secret", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." [label="first_tls_hangs_then_fallback_succeeds", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 custom_dns_failure()." [label="custom_dns_failure", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." [label="can_connect_to_cdsi_staging", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 impl#[DnsLookupThatRunsSlowly][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 udp_dns_lookup()." [label="udp_dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 impl#[DnsLookupThatFailsSlowly][DnsLookup]dns_lookup()." [label="dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 dns_over_https_lookup()." [label="dns_over_https_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 system_dns_lookup()." [label="system_dns_lookup", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 all_routes_connect_hangs_forever()." [label="all_routes_connect_hangs_forever", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." [label="runs_one_tls_handshake_at_a_time", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." [label="transport_connects_but_websocket_never_responds", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 init_logger()." [label="init_logger", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." [label="slow_dns", tooltip=""]
  }
  subgraph cluster_72 {
    label = "rust/net/tests/fake_transport";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Unreachable#" [label="Unreachable", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/fake_ips_for_names()." [label="fake_ips_for_names", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<ConnectionProxyRoute<IpAddr>, Box<dyn AsyncDuplexStream>>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#Start#" [label="Start", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#ReturnStream#" [label="ReturnStream", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." [label="allow_domain_fronting", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[ReplacingConnectorFactory][`ConnectorFactory<UsePreconnect<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>>>`]make()." [label="make", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#" [label="Tcp", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][`From<TcpRoute<IpAddr>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#" [label="Tls", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#End#" [label="End", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Fail#" [label="Fail", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()." [label="static_ip_map", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()." [label="allow_all_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." [label="connect_chat", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<TlsRouteFragment, S>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[`FakeConnector<C>`][`Connector<UsePreconnect<libsignal_net_infra::route::SimpleRoute<TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<TcpRoute<IpAddr>, ConnectionProxyRoute<IpAddr>>>>, ()>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TlsHandshake#" [label="TlsHandshake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<TcpRoute<IpAddr>, Box<dyn AsyncDuplexStream>>`]connect_over()." [label="connect_over", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." [label="connect_with_events", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TcpConnect#" [label="TcpConnect", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." [label="from_proxy_route", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()." [label="connect_websockets_on_incoming", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()." [label="apply", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Delay#" [label="Delay", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/error_all_hosts_after()." [label="error_all_hosts_after", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()." [label="only_direct_routes", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#TcpThroughProxy#" [label="TcpThroughProxy", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#DelayForever#" [label="DelayForever", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()." [label="set_behaviors", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]replaced_stateless()." [label="replaced_stateless", tooltip=""]
  }
  subgraph cluster_73 {
    label = "rust/net/tests/fake_transport/connector";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`VariableTlsTimeoutConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`DirectOrProxy<D, P, E>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`libsignal_net_infra::tcp_ssl::StatelessTcp`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`libsignal_net_infra::tcp_ssl::proxy::StatelessProxied`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`libsignal_net_infra::tcp_ssl::StatelessTls`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`LoggingConnector<C>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`ThrottlingConnector<C>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
    "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`ComposedConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." [label="replace_with_fake", tooltip=""]
  }
  subgraph cluster_74 {
    label = "rust/poksho/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo poksho 0.7.0 bench_poksho_api()." [label="bench_poksho_api", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 bench_poksho_api_mac_sha256()." [label="bench_poksho_api_mac_sha256", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 bench_poksho_api_sha256()." [label="bench_poksho_api_sha256", tooltip=""]
  }
  subgraph cluster_75 {
    label = "rust/poksho/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points()." [label="sort_points", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()." [label="add", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#ABSORBING#" [label="ABSORBING", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsWrongNumberOfPointArgs#" [label="BadArgsWrongNumberOfPointArgs", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#shohash()." [label="shohash", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]squeeze_and_ratchet_into()." [label="squeeze_and_ratchet_into", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice()." [label="from_slice", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()." [label="ratchet", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()." [label="squeeze_and_ratchet", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/tests/test_vectors()." [label="test_vectors", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction()." [label="homomorphism_with_subtraction", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgs#" [label="BadArgs", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes()." [label="to_bytes", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]absorb()." [label="absorb", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()." [label="new", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb()." [label="absorb", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()." [label="absorb_and_ratchet", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 sign/sign()." [label="sign", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]squeeze_and_ratchet_into()." [label="squeeze_and_ratchet_into", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#RATCHETED#" [label="RATCHETED", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point()." [label="add_point", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#new()." [label="new", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/tests/test_statement_encoding()." [label="test_statement_encoding", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes()." [label="to_bytes", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/tests/test_vectors()." [label="test_vectors", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_wide()." [label="scalar_from_slice_wide", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#RATCHETED#" [label="RATCHETED", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." [label="prove", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_canonical()." [label="scalar_from_slice_canonical", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()." [label="new", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsMissingPointArg#" [label="BadArgsMissingPointArg", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars()." [label="sort_scalars", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar()." [label="add_scalar", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()." [label="add", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#VerificationFailure#" [label="VerificationFailure", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 sign/tests/test_signature()." [label="test_signature", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]ratchet()." [label="ratchet", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsWrongNumberOfScalarArgs#" [label="BadArgsWrongNumberOfScalarArgs", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." [label="test_complex_statement", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()." [label="new", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()." [label="new", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()." [label="add", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#ABSORBING#" [label="ABSORBING", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." [label="verify_proof", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()." [label="squeeze_and_ratchet_as_array", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()." [label="new", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#ProofCreationVerificationFailure#" [label="ProofCreationVerificationFailure", tooltip=""]
    "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsMissingScalarArg#" [label="BadArgsMissingScalarArg", tooltip=""]
  }
  subgraph cluster_76 {
    label = "rust/protocol/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward()." [label="ratchet_forward", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." [label="v1", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt()." [label="session_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt()." [label="session_encrypt_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet()." [label="ratchet", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." [label="session_encrypt_decrypt_result", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." [label="ratchet_forward_result", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." [label="bench_kem", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." [label="v2", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." [label="session_encrypt_result", tooltip=""]
  }
  subgraph cluster_77 {
    label = "rust/protocol/examples";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 main()." [label="main", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Generate#" [label="Generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Decapsulate#" [label="Decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 KeyType#Kyber#" [label="Kyber", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 impl#[`libsignal_protocol::kem::KeyType`][`From<KeyType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Encapsulate#" [label="Encapsulate", tooltip=""]
  }
  subgraph cluster_78 {
    label = "rust/protocol/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." [label="calculate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#" [label="InvalidState", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]sender_uuid()." [label="sender_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()." [label="derive_keys_with_label", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." [label="process_sender_key_distribution_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[KeyPair][`From<IdentityKeyPair>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()." [label="to_proto", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/test/aes_ctr_test()." [label="aes_ctr_test", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#" [label="InvalidRegistrationId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()." [label="create_signal_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#" [label="InvalidSessionStructure", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." [label="process_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadCiphertext#" [label="BadCiphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()." [label="sign_alternate_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()." [label="sender_e164", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMacKeyLength#" [label="InvalidMacKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMCiphertextLength#" [label="BadKEMCiphertextLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()." [label="signed_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()." [label="set_sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]signing_key()." [label="signing_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]ciphertext_length()." [label="ciphertext_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#" [label="InvalidSealedSenderMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." [label="finalize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]certificate()." [label="certificate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." [label="append_session_summary", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#" [label="Whisper", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`From<KeyPair>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." [label="fingerprint_test_v2", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." [label="validating_simple_test", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]key_id()." [label="key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." [label="test_signal_message_serialize_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()." [label="registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." [label="add_second_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." [label="aes256_ctr_hmacsha256_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Secret][KeyKind]key_length()." [label="key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#" [label="InvalidKyberPreKeyId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/advance()." [label="advance", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]distribution_id()." [label="distribution_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." [label="fingerprint_mismatching_identifiers", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#" [label="SenderKeyMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." [label="get_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()." [label="parse", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()." [label="new_incremental", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." [label="sealed_sender_multi_recipient_encrypt_impl", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]pre_key_id()." [label="pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]body()." [label="body", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]pending_bytes_size()." [label="pending_bytes_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." [label="validating_returns_right_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_of_shared_bytes()." [label="offset_of_shared_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." [label="decrypt_message_with_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FfiBindingError#" [label="FfiBindingError", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()." [label="group_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()." [label="aes256_ctr_hmacsha256_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()." [label="sealed_sender_multi_recipient_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()." [label="get_fingerprint", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#" [label="PlaintextContent", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()." [label="verify_alternate_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_pre_key_id()." [label="kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]ciphertext()." [label="ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()." [label="identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()." [label="update", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#" [label="SealedSenderSelfSend", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." [label="compute_authentication_tag", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[`std::time::SystemTime`][`From<Timestamp>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut()." [label="sender_key_state_mut", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()." [label="derive_e", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#" [label="DuplicatedMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`RandomChunks<'_, T, R>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()." [label="identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()." [label="received_message_parts_for_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#" [label="InvalidArgument", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()." [label="hmac_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#" [label="UnrecognizedCiphertextVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[u32][`From<ContentHint>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed()." [label="seed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyType#" [label="BadKEMKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key()." [label="remove_sender_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[`rand::distributions::Standard`][`Distribution<Timestamp>`]sample()." [label="sample", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]key()." [label="key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_id()." [label="chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." [label="next", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#" [label="CiphertextMessageTooShort", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#" [label="InvalidSenderKeySession", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." [label="create_sender_key_distribution_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." [label="process_prekey_impl", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/read5_mod_100k()." [label="read5_mod_100k", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()." [label="sender_key_state_for_chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][ConstantTimeEq]ct_eq()." [label="ct_eq", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." [label="produce_and_validate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_size_zero()." [label="chunk_size_zero", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`RandomChunks<'a, T, R>`][Iterator]next()." [label="next", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()." [label="assert_number_of_states", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()." [label="chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_key()." [label="chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." [label="incremental_macs_are_valid", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#" [label="Plaintext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#" [label="Implicit", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." [label="test_kyber1024_kem", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()." [label="value", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()." [label="parameters", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#" [label="UnknownSealedSenderVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." [label="final_result_should_be_equal_to_non_incremental_hmac", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()." [label="sender_ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." [label="apply_agreement_xor", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]range_for_recipient_key_material()." [label="range_for_recipient_key_material", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#" [label="BadKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." [label="to_u32", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." [label="when_exceed_maximum_states_then_oldest_is_ejected", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." [label="when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()." [label="contents", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]sender_e164()." [label="sender_e164", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()." [label="add_sender_key_state_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#" [label="Default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]message()." [label="message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." [label="for_original", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update_chunk()." [label="update_chunk", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/EncryptionError#BadKeyOrIv#" [label="BadKeyOrIv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()." [label="validating", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." [label="fingerprint_mismatching_fingerprints", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#" [label="UntrustedIdentity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/impl#[PreKeysUsed][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()." [label="msg_type", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." [label="test_identity_key_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." [label="decrypt_message_with_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." [label="test_lossless_round_trip", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_ciphertext()." [label="kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()." [label="device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#" [label="ApplicationCallbackError", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()." [label="decode", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]device_id()." [label="device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/assert_signal_message_equals()." [label="assert_signal_message_equals", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()." [label="sender_device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." [label="process_prekey_bundle", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." [label="fingerprint_mismatching_versions", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyKind#key_length()." [label="key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." [label="test_serialize_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." [label="message_type", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()." [label="signing_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]certificate()." [label="certificate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf()." [label="as_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]body()." [label="body", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." [label="sealed_sender_decrypt_to_usmc", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." [label="initialize_alice_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()." [label="ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." [label="test_agreement_and_authentication", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha512()." [label="chunk_sizes_sha512", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`From<PublicKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()." [label="from_epoch_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha256()." [label="chunk_sizes_sha256", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Current#" [label="Current", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging()." [label="chain_ids_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." [label="message_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_encodings()." [label="fingerprint_encodings", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#" [label="LegacyCiphertextVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#" [label="FingerprintParsingError", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." [label="test_decryption_error_message_for_plaintext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." [label="message_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#" [label="Kyber1024", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." [label="message_decrypt_signal", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." [label="test_sender_key_message_serialize_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]expiration()." [label="expiration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]display_string()." [label="display_string", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintVersionMismatch#" [label="FingerprintVersionMismatch", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()." [label="calculate_chunk_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/create_decryption_failure_log()." [label="create_decryption_failure_log", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." [label="extract_decryption_error_message_from_serialized_content", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()." [label="update", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#" [label="UnrecognizedMessageVersion", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf()." [label="from_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]shared_secret_length()." [label="shared_secret_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]distribution_id()." [label="distribution_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/impl#[CurrentOrPrevious][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()." [label="assert_record_order", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()." [label="verify_mac", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." [label="sealed_sender_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[InvalidSessionError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." [label="compute_mac", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." [label="when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." [label="test_agreement_and_authentication", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." [label="sealed_sender_encrypt_from_usmc", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/total_digest_size_is_never_too_big()." [label="total_digest_size_is_never_too_big", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." [label="fingerprint_matching_identifiers", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_k()." [label="derive_k", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#" [label="NoSenderKeyState", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()." [label="sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#" [label="NoKeyTypeIdentifier", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Unknown#" [label="Unknown", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]signer()." [label="signer", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]chain_id()." [label="chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." [label="group_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]public_key_length()." [label="public_key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()." [label="initialize_bob_session_record", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." [label="when_sender_chain_key_iteration_overflows", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()." [label="sender_uuid", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." [label="add_sender_key_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V1#" [label="V1", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()." [label="epoch_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()." [label="chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private()." [label="signing_key_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()." [label="content_hint", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()." [label="counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." [label="test_kyber768_keypair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()." [label="sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#" [label="SessionNotFound", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]sub_millis()." [label="sub_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." [label="decode_varint", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." [label="fingerprint_test_v1", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." [label="initialize_bob_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_raw_kem()." [label="test_raw_kem", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." [label="simple_test", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#" [label="Kyber768", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()." [label="sender_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key()." [label="add_sender_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#" [label="InvalidPreKeyId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." [label="message_decrypt_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." [label="test_serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." [label="sealed_sender_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." [label="aes_256_ctr_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." [label="test_alternate_identity_signing", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]to_protobuf()." [label="to_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#" [label="InvalidMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()." [label="derive_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." [label="test_dyn_parameters_consts", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." [label="assert_records_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Public][KeyKind]key_length()." [label="key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()." [label="new_empty", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#" [label="PreKeySignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`[T]`][`RandomChunksIterator<T>`]random_chunks()." [label="random_chunks", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#" [label="InvalidProtobufEncoding", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()." [label="aes_256_ctr_encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#" [label="SenderKey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#" [label="PreKey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." [label="when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." [label="iteration", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." [label="test_pre_key_signal_message_serialize_deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." [label="test_decryption_error_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#" [label="SignatureValidationFailed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." [label="get_or_create_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_within_full_message()." [label="offset_within_full_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." [label="test_kyber1024_keypair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyLength#" [label="BadKEMKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv()." [label="iv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/get_encoded_string()." [label="get_encoded_string", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`AsRef<[u8]>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]key_type()." [label="key_type", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id()." [label="remove_states_with_chain_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#" [label="BadKeyLength", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()." [label="compare", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#" [label="InvalidSignedPreKeyId", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()." [label="calculate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#" [label="WrongKEMKeyType", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()." [label="add_millis", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]secret_key_length()." [label="secret_key_length", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadKeyOrIv#" [label="BadKeyOrIv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/total_digest_size()." [label="total_digest_size", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()." [label="random_public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()." [label="serialized", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]message_version()." [label="message_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." [label="add_single_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V2#" [label="V2", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()." [label="timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#" [label="SignalMessage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." [label="get_or_create_message_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()." [label="for_application_callback", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]base_key()." [label="base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()." [label="get_derivative", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state()." [label="sender_key_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." [label="group_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key()." [label="cipher_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Previous#" [label="Previous", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf()." [label="from_protobuf", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#" [label="Resendable", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()." [label="remove_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()." [label="initialize_alice_session_record", tooltip=""]
  }
  subgraph cluster_79 {
    label = "rust/protocol/src/kem";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]encapsulate()." [label="encapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]decapsulate()." [label="decapsulate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]encapsulate()." [label="encapsulate", tooltip=""]
  }
  subgraph cluster_80 {
    label = "rust/protocol/src/ratchet";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_signed_pre_key()." [label="their_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()." [label="mac_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]key()." [label="key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()." [label="with_their_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_ratchet_key_pair()." [label="our_ratchet_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#" [label="Keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_kyber_pre_key()." [label="set_their_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_identity_key_pair()." [label="our_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_one_time_pre_key()." [label="their_one_time_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_base_key()." [label="their_base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_kyber_ciphertext()." [label="their_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." [label="into_pb", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()." [label="calculate_base_material", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]counter()." [label="counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_kyber_pre_key()." [label="their_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]new_from_seed()." [label="new_from_seed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()." [label="index", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_one_time_pre_key()." [label="set_their_one_time_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]derive_keys()." [label="derive_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_one_time_pre_key()." [label="with_their_one_time_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#" [label="Seed", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()." [label="next_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_identity_key_pair()." [label="our_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()." [label="iv", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()." [label="from_pb", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()." [label="key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()." [label="cipher_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_signed_pre_key_pair()." [label="our_signed_pre_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()." [label="create_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_identity_key()." [label="their_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_base_key_pair()." [label="our_base_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_ratchet_key()." [label="their_ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()." [label="message_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_identity_key()." [label="their_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." [label="test_chain_key_derivation", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_kyber_pre_key_pair()." [label="our_kyber_pre_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_one_time_pre_key_pair()." [label="our_one_time_pre_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." [label="generate_keys", tooltip=""]
  }
  subgraph cluster_81 {
    label = "rust/protocol/src/state";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_kyber_ciphertext()." [label="set_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]identity_key()." [label="identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState][`From<SessionStructure>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()." [label="sender_ratchet_key_for_logging", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_old_session()." [label="promote_old_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." [label="remote_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." [label="get_receiver_chain_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]get_private()." [label="get_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()." [label="get_sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_pre_key_message()." [label="set_unacknowledged_pre_key_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." [label="has_session_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#id()." [label="id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()." [label="key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[KyberPreKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()." [label="pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()." [label="unacknowledged_pre_key_message_items", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." [label="get_sender_chain_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()." [label="signed_pre_key_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]get_private()." [label="get_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()." [label="root_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()." [label="archive_current_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]signed_pre_key_id()." [label="signed_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()." [label="get_sender_chain_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_pre_key_id()." [label="kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]device_id()." [label="device_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionStructure][`From<SessionState>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PublicKey][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_kyber_ciphertext()." [label="get_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()." [label="get_receiver_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()." [label="with_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle][`TryFrom<PreKeyBundleContent>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]has_kyber_pre_key()." [label="has_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]has_usable_sender_chain()." [label="has_usable_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#from_storage()." [label="from_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_registration_id()." [label="remote_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." [label="get_kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()." [label="remote_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_private_key()." [label="sender_ratchet_private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]all_receiver_chain_logging_info()." [label="all_receiver_chain_logging_info", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundleContent][`From<PreKeyBundle>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeySerde#deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_public()." [label="pre_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_id()." [label="signed_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]pre_key_id()." [label="pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]previous_counter()." [label="previous_counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_previous_counter()." [label="set_previous_counter", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_public()." [label="signed_pre_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()." [label="previous_session_states", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()." [label="session_with_self", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." [label="alice_base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord][GenericSignedPreKey]from_storage()." [label="from_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PrivateKey][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord][GenericSignedPreKey]get_storage()." [label="get_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." [label="remote_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_signature()." [label="kyber_pre_key_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()." [label="has_usable_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]set_session_state()." [label="set_session_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()." [label="local_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." [label="set_receiver_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[SignedPreKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]modify()." [label="modify", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_receiver_chain()." [label="with_receiver_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PrivateKey][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_registration_id()." [label="local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()." [label="promote_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()." [label="set_sender_chain_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." [label="local_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()." [label="session_state", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SignalProtocolError][`From<InvalidSessionError>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]alice_base_key()." [label="alice_base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]base_key()." [label="base_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_id()." [label="kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()." [label="remote_identity_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]current_ratchet_key_matches()." [label="current_ratchet_key_matches", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()." [label="set_message_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]id()." [label="id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]clear_unacknowledged_pre_key_message()." [label="clear_unacknowledged_pre_key_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionStructure][`From<&SessionState>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()." [label="with_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]get_public()." [label="get_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord][GenericSignedPreKey]get_storage()." [label="get_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()." [label="new_fresh", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]from_session_structure()." [label="from_session_structure", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_public()." [label="kyber_pre_key_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()." [label="local_identity_key_bytes", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyId][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_root_key()." [label="set_root_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." [label="local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()." [label="sender_ratchet_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/zip3()." [label="zip3", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." [label="add_receiver_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]registration_id()." [label="registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()." [label="get_message_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_kyber_pre_key_id()." [label="set_unacknowledged_kyber_pre_key_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]secret_key()." [label="secret_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PublicKey][KeySerde]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#signature()." [label="signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." [label="set_sender_chain", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_remote_registration_id()." [label="set_remote_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]key_pair()." [label="key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#timestamp()." [label="timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord][GenericSignedPreKey]from_storage()." [label="from_storage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]get_public()." [label="get_public", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state_mut()." [label="session_state_mut", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_local_registration_id()." [label="set_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeyPairSerde#from_public_and_private()." [label="from_public_and_private", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[InvalidSessionError][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()." [label="archive_current_state_inner", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]timestamp()." [label="timestamp", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_ciphertext()." [label="kyber_ciphertext", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()." [label="get_receiver_chain", tooltip=""]
  }
  subgraph cluster_82 {
    label = "rust/protocol/src/storage";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()." [label="all_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#" [label="Receiving", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()." [label="all_kyber_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]get_kyber_pre_key()." [label="get_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#" [label="Sending", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()." [label="load_existing_sessions", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]all_pre_key_ids()." [label="all_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]all_signed_pre_key_ids()." [label="all_signed_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()." [label="load_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()." [label="mark_kyber_pre_key_used", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]load_sender_key()." [label="load_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()." [label="get_local_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]store_session()." [label="store_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()." [label="get_identity_key_pair", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]reset()." [label="reset", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()." [label="store_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()." [label="save_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]all_kyber_pre_key_ids()." [label="all_kyber_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]get_signed_pre_key()." [label="get_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity()." [label="get_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]store_sender_key()." [label="store_sender_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]get_pre_key()." [label="get_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()." [label="save_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]is_trusted_identity()." [label="is_trusted_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]save_identity()." [label="save_identity", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]remove_pre_key()." [label="remove_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]save_pre_key()." [label="save_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()." [label="all_signed_pre_key_ids", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][Default]default()." [label="default", tooltip=""]
  }
  subgraph cluster_83 {
    label = "rust/protocol/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 run()." [label="run", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." [label="group_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." [label="test_sender_key_in_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." [label="group_no_recv_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." [label="group_late_join", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." [label="test_bad_message_bundle", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." [label="test_sealed_sender_multi_recipient_encrypt_with_archived_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." [label="test_signedprekey_not_saved", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." [label="test_chain_jump_over_limit_with_self", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." [label="group_message_key_limit", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." [label="group_too_far_in_the_future", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." [label="test_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." [label="run_interaction", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." [label="test_server_cert", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." [label="test_basic_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." [label="group_basic_ratchet", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." [label="test_zero_is_a_valid_prekey_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." [label="test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." [label="test_ratcheting_session_as_alice", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." [label="test_basic_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." [label="test_ratcheting_session_as_bob", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." [label="test_message_key_limits", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." [label="test_repeat_bundle_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." [label="group_large_messages", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." [label="group_no_send_session", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." [label="test_unacknowledged_sessions_eventually_expire", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." [label="test_sender_cert", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." [label="test_optional_one_time_prekey", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 parse_empty_multi_recipient_sealed_sender()." [label="parse_empty_multi_recipient_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." [label="group_out_of_order", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." [label="test_revoked_server_cert", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." [label="group_sealed_sender_multiple_devices", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." [label="test_simultaneous_initiate_lost_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." [label="run_session_interaction", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." [label="test_simultaneous_initiate_lost_message_repeated_messages", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." [label="test_sealed_sender_multi_recipient", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." [label="test_bad_signed_pre_key_signature", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." [label="test_simultaneous_initiate_with_lossage", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." [label="test_chain_jump_over_limit", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." [label="test_sealed_sender_multi_recipient_redundant_empty_devices", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." [label="test_alice_and_bob_agree_on_chain_keys_with_kyber", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." [label="test_basic_simultaneous_initiate", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 is_session_id_equal()." [label="is_session_id_equal", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 init_logger()." [label="init_logger", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." [label="test_simultaneous_initiate_repeated_messages", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." [label="group_basic_encrypt_decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." [label="test_decryption_error_in_sealed_sender", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." [label="group_sealed_sender_multiple_devices_and_excluded_recipients", tooltip=""]
  }
  subgraph cluster_84 {
    label = "rust/protocol/tests/support";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()." [label="with_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()." [label="new", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()." [label="test_in_memory_protocol_store", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." [label="create_pre_key_bundle", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#" [label="Random", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." [label="make_bundle_with_latest_keys", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]next_id()." [label="next_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." [label="gen_id", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()." [label="with_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()." [label="extract_single_ssv2_received_message", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." [label="initialize_sessions_v4", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]from_store()." [label="from_store", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()." [label="with_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." [label="add_signed_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#" [label="Next", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." [label="add_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder][HasSessionVersion]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()." [label="session_version", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." [label="add_kyber_pre_key", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." [label="initialize_sessions_v3", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Exactly#" [label="Exactly", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." [label="sign", tooltip=""]
    "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[IdChoice][`From<u32>`]from()." [label="from", tooltip=""]
  }
  subgraph cluster_85 {
    label = "rust/usernames";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo usernames 0.1.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_86 {
    label = "rust/usernames/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo usernames 0.1.0 bench_usernames()." [label="bench_usernames", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_hash()." [label="username_hash", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_proof()." [label="username_proof", tooltip=""]
  }
  subgraph cluster_87 {
    label = "rust/usernames/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#BadCiphertext#" [label="BadCiphertext", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotHaveLeadingZeros#" [label="DiscriminatorCannotHaveLeadingZeros", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_should_produce_scalar()." [label="valid_usernames_should_produce_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames()." [label="valid_usernames", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]format_parts()." [label="format_parts", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()." [label="verify_proof", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/happy_case()." [label="happy_case", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeZero#" [label="DiscriminatorCannotBeZero", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_decrypted_data_bad_structure()." [label="username_link_decrypted_data_bad_structure", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadDiscriminatorCharacter#" [label="BadDiscriminatorCharacter", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/hkdf()." [label="hkdf", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_hmac_no_match()." [label="username_link_data_hmac_no_match", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_too_short()." [label="username_link_data_too_short", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/valid_nickname_scalar()." [label="valid_nickname_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()." [label="new", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/input_data_too_long()." [label="input_data_too_long", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotBeEmpty#" [label="NicknameCannotBeEmpty", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#" [label="NicknameTooLong", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/validate_prefix()." [label="validate_prefix", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nickname_limits()." [label="invalid_nickname_limits", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#" [label="MissingSeparator", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/gen_range()." [label="gen_range", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()." [label="candidates_from", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." [label="decrypt_username", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit()." [label="from_parts_without_soft_limit", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#" [label="InvalidEntropyDataLength", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/prost_ignores_unknown_fields_and_handles_missing_ones()." [label="prost_ignores_unknown_fields_and_handles_missing_ones", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/hmac()." [label="hmac", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 constants/test/generate_points()." [label="generate_points", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#" [label="BadNicknameCharacter", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/make_scalars()." [label="make_scalars", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/reuse_entropy()." [label="reuse_entropy", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_scalar_args()." [label="make_scalar_args", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()." [label="new", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/discriminator_scalar()." [label="discriminator_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeSingleDigit#" [label="DiscriminatorCannotBeSingleDigit", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." [label="many_random_makes_valid_usernames", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/validate_nickname()." [label="validate_nickname", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." [label="validate_discriminator", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/longest_valid_username()." [label="longest_valid_username", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()." [label="hash", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotStartWithDigit#" [label="NicknameCannotStartWithDigit", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]validate()." [label="validate", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()." [label="nickname_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/char_to_byte()." [label="char_to_byte", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." [label="invalid_discriminators", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()." [label="create_for_username", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/valid_nicknames_should_produce_scalar()." [label="valid_nicknames_should_produce_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/no_discriminator()." [label="no_discriminator", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/valid_characters_mapping()." [label="valid_characters_mapping", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_bad_ciphertext()." [label="username_link_data_bad_ciphertext", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/random_discriminators()." [label="random_discriminators", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username_links/random_bytes()." [label="random_bytes", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeEmpty#" [label="DiscriminatorCannotBeEmpty", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooShort#" [label="NicknameTooShort", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/username_sha_scalar()." [label="username_sha_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/nicknames_exceeding_soft_limits()." [label="nicknames_exceeding_soft_limits", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidDecryptedDataStructure#" [label="InvalidDecryptedDataStructure", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/to_base_37_scalar()." [label="to_base_37_scalar", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/discriminator_scalar_is_defined_on_range()." [label="discriminator_scalar_is_defined_on_range", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username][Display]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/too_few_ranges()." [label="too_few_ranges", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InputDataTooLong#" [label="InputDataTooLong", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_point_args()." [label="make_point_args", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()." [label="proof", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify()." [label="valid_usernames_proof_and_verify", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#UsernameLinkDataTooShort#" [label="UsernameLinkDataTooShort", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorTooLarge#" [label="DiscriminatorTooLarge", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#HmacMismatch#" [label="HmacMismatch", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/nickname_limits()." [label="nickname_limits", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." [label="invalid_nicknames", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()." [label="from_parts", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash_from_scalars()." [label="hash_from_scalars", tooltip=""]
    "rust-analyzer cargo usernames 0.1.0 username/test/generate_discriminators()." [label="generate_discriminators", tooltip=""]
  }
  subgraph cluster_88 {
    label = "rust/zkcredential/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkcredential 0.1.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." [label="key_derivation", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 impl#[InverseDomain][Domain]G_a()." [label="G_a", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attribute_key_inversion()." [label="attribute_key_inversion", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." [label="endorsement_flow", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 impl#[ExampleDomain][Domain]G_a()." [label="G_a", tooltip=""]
  }
  subgraph cluster_89 {
    label = "rust/zkcredential/src";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][`From<attributes::KeyPair<D>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/tests/test_system()." [label="test_system", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute()." [label="for_first_point_of_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()." [label="get_scalar", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()." [label="get_point", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[RistrettoPoint][RevealedAttribute]as_point()." [label="as_point", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/impl#[ExampleDomain][Domain]G_a()." [label="G_a", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`][ConstantTimeEq]ct_eq()." [label="ct_eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()." [label="add_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core()." [label="credential_core", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()." [label="as_points", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement()." [label="proof_statement", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 impl#[`PrintAsHex<&[u8]>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][MayHavePublicKey]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair]without_public_key()." [label="without_public_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair][`From<CredentialPrivateKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." [label="default_is_identity", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<CompressedRistretto>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute_without_verified_key()." [label="add_attribute_without_verified_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<R>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw()." [label="to_token_raw", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPublicKey]I()." [label="I", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]with_authenticated_message()." [label="with_authenticated_message", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]with_authenticated_message()." [label="with_authenticated_message", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8]`][PublicAttribute]hash_into()." [label="hash_into", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." [label="present", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()." [label="add_public_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw()." [label="from_raw", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()." [label="add_public_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]inverse_of()." [label="inverse_of", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]id()." [label="id", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyPublicKey][`From<attributes::PublicKey<D>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 impl#[`PrintAsHex<&curve25519_dalek::ristretto::CompressedRistretto>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_works()." [label="derive_default_generator_points_works", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute_without_verified_key()." [label="add_attribute_without_verified_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_scalar_args()." [label="prepare_scalar_args", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." [label="combining_endorsements", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]with_authenticated_message()." [label="with_authenticated_message", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/Domain#G_a()." [label="G_a", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/tests/round_trip_key_pair()." [label="round_trip_key_pair", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[u32][PublicAttribute]hash_into()." [label="hash_into", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_revealed_attribute()." [label="add_revealed_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 impl#[`PrintAsHex<&[curve25519_dalek::ristretto::CompressedRistretto]>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[u64][PublicAttribute]hash_into()." [label="hash_into", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_default_generator_points()." [label="derive_default_generator_points", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]combine_with()." [label="combine_with", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#PublicKey#" [label="PublicKey", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<CompressedRistretto>`]decompress()." [label="decompress", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]prepare_non_attribute_point_args()." [label="prepare_non_attribute_point_args", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_impl()." [label="derive_impl", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token()." [label="to_token", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][ConstantTimeEq]ct_eq()." [label="ct_eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." [label="round_trip", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_revealed_attribute()." [label="add_revealed_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]get_hardcoded()." [label="get_hardcoded", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()." [label="prepare_point_args", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`PublicKey<D>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar()." [label="from_blinding_scalar", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds()." [label="derive_default_generator_points_checks_for_reuse_in_debug_builds", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar()." [label="derive_key_from_tag_scalar", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()." [label="generate_weights_for_proof", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]decrypt_to_second_point()." [label="decrypt_to_second_point", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]finalize_public_attrs()." [label="finalize_public_attrs", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()." [label="derive_from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]with_authenticated_message()." [label="with_authenticated_message", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][MayHavePublicKey]id()." [label="id", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." [label="default_flow", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`PublicKey<D>`][ConstantTimeEq]ct_eq()." [label="ct_eq", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/serialized_representations()." [label="serialized_representations", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]finalize_public_attrs()." [label="finalize_public_attrs", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#Id#" [label="Id", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair][`Deserialize<'de>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<Storage>`][Default]default()." [label="default", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt_arbitrary_attribute()." [label="encrypt_arbitrary_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()." [label="derive_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress()." [label="compress", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_public_attribute()." [label="add_public_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]remove()." [label="remove", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()." [label="derive_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]from_raw()." [label="from_raw", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPublicKey][`From<&CredentialPrivateKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]from_scalars()." [label="from_scalars", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()." [label="add_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]combine()." [label="combine", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8; LEN]`][PublicAttribute]hash_into()." [label="hash_into", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()." [label="add_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()." [label="add_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[RistrettoPoint; 2]`][Attribute]as_points()." [label="as_points", tooltip=""]
  }
  subgraph cluster_90 {
    label = "rust/zkcredential/src/issuance";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_scalar_args()." [label="prepare_scalar_args", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPublicKey][`From<&BlindingPrivateKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()." [label="add_blinded_revealed_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindedAttribute][`From<BlindedAttribute<WithNonce>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind()." [label="blind", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_point_args()." [label="prepare_point_args", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]private_key()." [label="private_key", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair][`From<BlindingPrivateKey>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_attribute()." [label="add_blinded_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]add_blinded_revealed_attribute()." [label="add_blinded_revealed_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindedPoint][`From<BlindedPoint<WithNonce>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair()." [label="round_trip_key_pair", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]finalize_public_attrs()." [label="finalize_public_attrs", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]add_blinded_attribute()." [label="add_blinded_attribute", tooltip=""]
    "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()." [label="generate", tooltip=""]
  }
  subgraph cluster_91 {
    label = "rust/zkgroup/benches";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 bench_server_param_serialization()." [label="bench_server_param_serialization", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." [label="benchmark_group_send_endorsements", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 benches()." [label="benches", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." [label="benchmark_integration_auth", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." [label="benchmark_integration_profile", tooltip=""]
  }
  subgraph cluster_92 {
    label = "rust/zkgroup/src/api";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[EndorsementPublicKey][`AsRef<zkcredential::endorsements::ServerRootPublicKey>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()." [label="create_receipt_credential_presentation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]check_auth_credential_redemption_time()." [label="check_auth_credential_redemption_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()." [label="get_public_params", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams][`AsRef<zkcredential::endorsements::ServerRootKeyPair>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation()." [label="verify_expiring_profile_key_credential_presentation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature()." [label="verify_signature", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign()." [label="sign", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." [label="issue_expiring_profile_key_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()." [label="create_receipt_credential_request_context", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()." [label="verify_auth_credential_presentation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()." [label="create_expiring_profile_key_credential_presentation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()." [label="verify_profile_key_credential_presentation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." [label="create_profile_key_credential_request_context", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]get_endorsement_public_key()." [label="get_endorsement_public_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams][`AsRef<zkcredential::endorsements::ServerRootPublicKey>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()." [label="get_public_params", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()." [label="issue_receipt_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[EndorsementServerRootKeyPair]public_key()." [label="public_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." [label="receive_expiring_profile_key_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_endorsement_root_key_pair()." [label="get_endorsement_root_key_pair", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation()." [label="verify_receipt_credential_presentation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()." [label="receive_receipt_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[EndorsementServerRootKeyPair][`AsRef<zkcredential::endorsements::ServerRootKeyPair>`]as_ref()." [label="as_ref", tooltip=""]
  }
  subgraph cluster_93 {
    label = "rust/zkgroup/src/api/auth";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_redemption_time()." [label="get_redemption_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/PresentationVersion#V4#" [label="V4", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#" [label="V4", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniVersion#Zkc#" [label="Zkc", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present()." [label="present", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_pni_ciphertext()." [label="get_pni_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPni#Zkc#" [label="Zkc", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniVersion][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_aci_ciphertext()." [label="get_aci_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniResponse#Zkc#" [label="Zkc", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[PresentationVersion][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()." [label="new", tooltip=""]
  }
  subgraph cluster_94 {
    label = "rust/zkgroup/src/api/auth/auth_credential_with_pni";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential()." [label="issue_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]redemption_time()." [label="redemption_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]aci_ciphertext()." [label="aci_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()." [label="present_for_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." [label="receive_for_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]pni_ciphertext()." [label="pni_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." [label="issue_receive_present", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()." [label="verify_for_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present()." [label="present", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()." [label="issue_credential_for_key", tooltip=""]
  }
  subgraph cluster_95 {
    label = "rust/zkgroup/src/api/backups";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." [label="test_server_verify_wrong_receipt_level", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupLevel>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." [label="test_server_verify_expiration", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." [label="test_client_enforces_timestamp", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]backup_level()." [label="backup_level", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()." [label="server_secret_params", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupLevel][`TryFrom<u64>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupCredentialType][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]backup_id()." [label="backup_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint][RevealedAttribute]as_point()." [label="as_point", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupLevel][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]credential_type()." [label="credential_type", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." [label="test_client_enforces_timestamp_granularity", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupCredentialType>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." [label="test_server_verify_wrong_redemption", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupCredentialType#Media#" [label="Media", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupCredentialType#Messages#" [label="Messages", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()." [label="get_request", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_serialization()." [label="test_backup_level_serialization", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]backup_level()." [label="backup_level", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupCredentialType][`TryFrom<u64>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]backup_id()." [label="backup_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Paid#" [label="Paid", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#" [label="Free", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id()." [label="test_server_verify_wrong_backup_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." [label="generate_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_validation()." [label="test_backup_level_validation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()." [label="present", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]credential_type()." [label="credential_type", tooltip=""]
  }
  subgraph cluster_96 {
    label = "rust/zkgroup/src/api/call_links";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()." [label="issue_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams][`AsRef<zkcredential::attributes::KeyPair<uid_encryption::UidEncryptionDomain>>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid()." [label="encrypt_uid", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()." [label="present", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()." [label="derive_from_root_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid_struct()." [label="encrypt_uid_struct", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." [label="receive", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." [label="present", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint][RevealedAttribute]as_point()." [label="as_point", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid()." [label="decrypt_uid", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]get_user_id()." [label="get_user_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]get_user_id()." [label="get_user_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]get_public_params()." [label="get_public_params", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]get_request()." [label="get_request", tooltip=""]
  }
  subgraph cluster_97 {
    label = "rust/zkgroup/src/api/groups";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob()." [label="encrypt_blob", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_with_padding()." [label="encrypt_blob_with_padding", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob()." [label="decrypt_blob", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[`GroupSendEndorsement<curve25519_dalek_signal::ristretto::CompressedRistretto>`][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]default_expiration()." [label="default_expiration", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]expiration()." [label="expiration", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec2()." [label="test_aesgcmsiv_vec2", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]remove()." [label="remove", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key()." [label="encrypt_profile_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec1()." [label="test_aesgcmsiv_vec1", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[`GroupSendEndorsement<curve25519_dalek_signal::ristretto::CompressedRistretto>`]decompress()." [label="decompress", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key()." [label="decrypt_profile_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key_bytes()." [label="encrypt_profile_key_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()." [label="get_public_params", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token()." [label="to_token", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendToken][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupPublicParams]get_group_identifier()." [label="get_group_identifier", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]expiration()." [label="expiration", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()." [label="receive_with_service_ids_single_threaded", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()." [label="receive_with_ciphertexts", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()." [label="issue", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams][`AsRef<zkcredential::attributes::KeyPair<uid_encryption::UidEncryptionDomain>>`]as_ref()." [label="as_ref", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]sort_points()." [label="sort_points", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()." [label="encrypt_service_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()." [label="derive_from_master_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()." [label="combine", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()." [label="for_expiration", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_aesgcmsiv()." [label="decrypt_blob_aesgcmsiv", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_group_identifier()." [label="get_group_identifier", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_encrypt_with_padding()." [label="test_encrypt_with_padding", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_master_key()." [label="get_master_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id()." [label="decrypt_service_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]compress()." [label="compress", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()." [label="derive_public_signing_key_from_expiration", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_with_padding()." [label="decrypt_blob_with_padding", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()." [label="receive_with_service_ids", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendToken]into_full_token()." [label="into_full_token", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_uid_struct()." [label="encrypt_uid_struct", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]tag_info()." [label="tag_info", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_aesgcmsiv()." [label="encrypt_blob_aesgcmsiv", tooltip=""]
  }
  subgraph cluster_98 {
    label = "rust/zkgroup/src/api/profiles";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_bytes()." [label="get_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation]get_uuid_ciphertext()." [label="get_uuid_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_profile_key_version()." [label="get_profile_key_version", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." [label="get_uuid_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]derive_access_key()." [label="derive_access_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." [label="get_profile_key_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV2]get_uuid_ciphertext()." [label="get_uuid_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V1#" [label="V1", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V2#" [label="V2", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()." [label="to_structurally_valid_v1_presentation_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_request_context/impl#[ProfileKeyCredentialRequestContext]get_request()." [label="get_request", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/expiring_profile_key_credential/impl#[ExpiringProfileKeyCredential]get_expiration_time()." [label="get_expiration_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/tests/access_key_kat()." [label="access_key_kat", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation]get_expiration_time()." [label="get_expiration_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]create()." [label="create", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V3#" [label="V3", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_uuid_ciphertext()." [label="get_uuid_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation]get_profile_key_ciphertext()." [label="get_profile_key_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV2][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey][Debug]fmt()." [label="fmt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()." [label="get_commitment", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/expiring_profile_key_credential/impl#[ExpiringProfileKeyCredential]aci()." [label="aci", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_version/impl#[ProfileKeyVersion][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_profile_key_ciphertext()." [label="get_profile_key_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV2]get_profile_key_ciphertext()." [label="get_profile_key_ciphertext", tooltip=""]
  }
  subgraph cluster_99 {
    label = "rust/zkgroup/src/api/receipts";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_struct()." [label="get_receipt_struct", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_level()." [label="get_receipt_level", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential/impl#[ReceiptCredential]get_receipt_level()." [label="get_receipt_level", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_expiration_time()." [label="get_receipt_expiration_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential/impl#[ReceiptCredential]get_receipt_expiration_time()." [label="get_receipt_expiration_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()." [label="get_request", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_serial_bytes()." [label="get_receipt_serial_bytes", tooltip=""]
  }
  subgraph cluster_100 {
    label = "rust/zkgroup/src/bin";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 main()." [label="main", tooltip=""]
  }
  subgraph cluster_101 {
    label = "rust/zkgroup/src/common";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_sub_seconds()." [label="checked_sub_seconds", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/collect_permutation()." [label="collect_permutation", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_permute_scramble_and_unscramble()." [label="test_permute_scramble_and_unscramble", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_add_seconds()." [label="checked_add_seconds", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[`rand::distributions::Standard`][`Distribution<Timestamp>`]sample()." [label="sample", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()." [label="from_epoch_seconds", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/version_byte_error_message()." [label="version_byte_error_message", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point_single_elligator()." [label="get_point_single_elligator", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()." [label="is_day_aligned", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`[T; LEN]`][`ArrayLike<T>`]create()." [label="create", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()." [label="squeeze_as_array", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/version_byte_wrong()." [label="version_byte_wrong", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/round_trip()." [label="round_trip", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/impl#[u8][`From<VersionByte<C>>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/encode_redemption_time()." [label="encode_redemption_time", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]iter()." [label="iter", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]to_be_bytes()." [label="to_be_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[`std::time::SystemTime`][`From<Timestamp>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<T>`][`Index<usize>`]index()." [label="index", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/impl#[`VersionByte<C>`][`TryFrom<u8>`]try_from()." [label="try_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()." [label="sub_seconds", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes()." [label="encode_receipt_serial_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]create()." [label="create", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp][PublicAttribute]hash_into()." [label="hash_into", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()." [label="as_mut", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`[T; LEN]`][`ArrayLike<T>`]iter()." [label="iter", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/tests/test_encode_scalar()." [label="test_encode_scalar", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/impl#[`WithLeadingByte<T>`]test_value()." [label="test_value", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()." [label="add_seconds", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/impl#[`VersionByte<C>`][Serialize]serialize()." [label="serialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]saturating_seconds_since()." [label="saturating_seconds_since", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_permute_simple()." [label="test_permute_simple", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_one_based_indexing()." [label="test_one_based_indexing", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/ArrayLike#create()." [label="create", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]absorb_and_ratchet()." [label="absorb_and_ratchet", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_one_based_indexing_with_zero()." [label="test_one_based_indexing_with_zero", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()." [label="get_scalar", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/zkgroup_bincode_options()." [label="zkgroup_bincode_options", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()." [label="get_point", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/serialization/impl#[`VersionByte<C>`][`Deserialize<'de>`]deserialize()." [label="deserialize", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupVerificationFailure][`From<VerificationFailure>`]from()." [label="from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_one_based_indexing_past_end()." [label="test_one_based_indexing_past_end", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]epoch_seconds()." [label="epoch_seconds", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_one_based_iter()." [label="test_one_based_iter", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze()." [label="squeeze", tooltip=""]
  }
  subgraph cluster_102 {
    label = "rust/zkgroup/src/crypto";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]decrypt_blinded_receipt_credential()." [label="decrypt_blinded_receipt_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()." [label="get_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]get_public_key()." [label="get_public_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct][ConditionallySelectable]conditional_select()." [label="conditional_select", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature()." [label="test_signature", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." [label="test_uid_encryption", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_system()." [label="test_system", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]get_public_key()." [label="get_public_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]calc_M3()." [label="calc_M3", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment()." [label="test_commitment", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()." [label="calc_M1", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()." [label="get_hardcoded", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()." [label="from_service_id", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[BlindedReceiptCredentialWithSecretNonce]get_blinded_receipt_credential()." [label="get_blinded_receipt_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." [label="test_mac", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." [label="test_profile_key_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain][Domain]G_a()." [label="G_a", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct()." [label="convert_to_points_receipt_struct", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()." [label="get_ciphertext", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential()." [label="test_room_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." [label="as_point", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()." [label="calc_m1_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialPresentationProofV1]from_invalid_proof()." [label="from_invalid_proof", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()." [label="calc_m_from", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign()." [label="sign", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." [label="test_profile_key_encryption", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response()." [label="test_request_response", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m()." [label="calc_m", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[BlindedExpiringProfileKeyCredentialWithSecretNonce]get_blinded_expiring_profile_key_credential()." [label="get_blinded_expiring_profile_key_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_system()." [label="test_system", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()." [label="create_blinded_expiring_profile_key_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct][Attribute]as_points()." [label="as_points", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]get_profile_key_commitment()." [label="get_profile_key_commitment", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." [label="test_pni_encryption", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." [label="test_mac_generic_without_verifying_encryption_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`][Clone]clone()." [label="clone", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." [label="test_inverse_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt()." [label="encrypt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]credential_core()." [label="credential_core", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]get_public_key()." [label="get_public_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3()." [label="calc_j3", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]get_hardcoded()." [label="get_hardcoded", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()." [label="new", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()." [label="create_blinded_receipt_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain][Domain]G_a()." [label="G_a", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]to_bytes()." [label="to_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]get_public_key()." [label="get_public_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]decrypt_blinded_expiring_profile_key_credential()." [label="decrypt_blinded_expiring_profile_key_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`][`PartialEq<Self>`]eq()." [label="eq", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[InverseUidDecryptionKey][Domain]G_a()." [label="G_a", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes()." [label="convert_to_point_M2_receipt_serial_bytes", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct][Attribute]as_points()." [label="as_points", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." [label="test_mac_generic", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]get_hardcoded()." [label="get_hardcoded", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]get_poksho_statement()." [label="get_poksho_statement", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]generate()." [label="generate", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]get_hardcoded()." [label="get_hardcoded", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." [label="verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." [label="test_profile_key_credential_only_verifying_one_encryption_key", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt()." [label="decrypt", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1()." [label="calc_m1", tooltip=""]
  }
  subgraph cluster_103 {
    label = "rust/zkgroup/tests";
    style=filled;
    color=lightgrey;
    fontname=Helvetica;
    "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_presentation_v1_is_rejected()." [label="test_auth_credential_presentation_v1_is_rejected", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." [label="test_request_response", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." [label="test_endorsement", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." [label="test_profile_key_credential_presentation_v1_does_not_verify", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." [label="test_integration_expiring_profile", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_blob_encryption()." [label="test_blob_encryption", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." [label="test_auth_credential", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." [label="test_single_member_group", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." [label="test_create_call_link_enforces_timestamp_granularity", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." [label="test_profile_key_credential_presentation_expiring_as_v1", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_server_sigs()." [label="test_server_sigs", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_lizard()." [label="test_lizard", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." [label="test_backup_auth_request_response", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_api()." [label="test_api", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v2_as_v1()." [label="test_profile_key_credential_presentation_v2_as_v1", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." [label="test_client_rejects_bad_expirations", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." [label="test_auth_credential_enforces_timestamp_granularity", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." [label="test_create_call_link_request_response", tooltip=""]
    "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." [label="test_integration_auth_zkc", tooltip=""]
  }

  "rust-analyzer cargo poksho 0.7.0 bench_poksho_api()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#new()."
  "rust-analyzer cargo poksho 0.7.0 bench_poksho_api()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo poksho 0.7.0 bench_poksho_api()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsWrongNumberOfPointArgs#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsMissingPointArg#"
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_scalar_args()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_scalar_args()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_scalar_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveEcKey()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_ec_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/HKDF_DeriveSecrets()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]modify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder][HasSessionVersion]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 is_session_id_equal()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]save_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]get_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#BlobMissingContent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/likely_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#BlobWrongContent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidAccess#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[`proto::group::group_attribute_blob::Content`]field_name()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Agree()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Agree()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetMsgType()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupExpirationTimerUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_captcha()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_captcha()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_request()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_SendRawServerResponse()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<String>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/authorization_rejected()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/authorization_rejected()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/authorization_rejected()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/spawn_localhost_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/authorization_rejected()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Test#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_uuid()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_uuid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_uuid()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_uuid()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_uuid()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]into_listener()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_empty_label()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_empty_label()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_empty_label()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelEmpty#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_save_signed_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_save_signed_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_save_signed_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_GetType()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]credential_type()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SubmitCaptcha()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_captcha()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`url::Host<S>`][`From<Host<S>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`url::Host<S>`][`From<Host<S>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_listener_close_on_remote_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_listener_close_on_remote_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_listener_close_on_remote_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_listener_close_on_remote_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[`mpsc::UnboundedSender<ListenerEvent>`][IntoEventListener]into_event_listener()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_listener_close_on_remote_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]new()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]bind_settle_promise()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_save_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_save_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_save_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[`std::cell::RefCell<UnusualTimestampTracker>`][ReportUnusualTimestamp]report()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[UnusualTimestampTracker]report()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respects_ipv6_filter_for_dns_server_itself()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][AsChatValue]as_chat_value()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][AsChatValue]as_chat_value()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][AsChatValue]as_chat_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#I32#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#I64#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#Bool#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#U32#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/impl#[`MapKey<'a>`][`From<ReflectValueRef<'a>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#U64#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]signing_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]distribution_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]iteration()."
  "rust-analyzer cargo attest 0.1.0 error/tests/d1()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 error/tests/d1()." -> "rust-analyzer cargo attest 0.1.0 error/tests/error()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][`From<attributes::KeyPair<D>>`]from()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#PublicKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[u8]>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_chat_disconnect_results_in_failed_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_chat_disconnect_results_in_failed_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/DisconnectTime#AfterConnectionSpawned#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_chat_disconnect_results_in_failed_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/DisconnectTime#AfterRequestSent#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_chat_disconnect_results_in_failed_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_close()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[`WebSocketProvider<P>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/EnclaveKind#url_path()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ForOriginalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ForOriginalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedMutableSliceOf<T>`]as_slice_mut()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupChangeChatUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#ChatItem#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]as_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NoChatForItem#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_invalid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_invalid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_invalid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/fake_ips_for_names()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/fake_ips_for_names()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/fake_ips_for_names()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]hostnames()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<SanitizerError<ParseError>>`]from()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<SanitizerError<ParseError>>`]from()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Parse#"
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_should_produce_scalar()." -> "rust-analyzer cargo usernames 0.1.0 username/username_sha_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/tests/test_system()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]generate()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/right_step()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/node_width()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_constant_time_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/constant_time_cmp()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceIdKind][Display]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceIdKind][Display]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_EncryptUserId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_EncryptUserId()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Contact`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureCompleter<T>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[KeyPair][`From<IdentityKeyPair>`]from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/request_sent_to_task_cancelled_before_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/request_sent_to_task_cancelled_before_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/request_sent_to_task_cancelled_before_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationResponse]into_websocket_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/request_sent_to_task_cancelled_before_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/request_sent_to_task_cancelled_before_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException][Debug]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]class_name()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException][Debug]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]message()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ServerMessageAck_SendStatus()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[ServerMessageAck]take()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ServerMessageAck_SendStatus()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][Hash]hash()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/ws_config_hash()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_master_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V0>`]derive_from_master_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_master_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_master_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_DecryptUsername()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_DecryptUsername()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]from_backup_info_frame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u16][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[u32][`From<ContentHint>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AttachmentThumbnailWrongFlag#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AttachmentThumbnail#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#NoFilePointer#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_no_search_needed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt]for_monitor()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException][Finalize]finalize()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#Object#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]send_future()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`FutureTask<F>`]poll()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Invalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#InvalidMediaName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Backup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingMediaName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#TransitCdnMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingTransitCdnKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingCdnKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Local#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Transit#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingDigest#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<ConnectionProxyRoute<IpAddr>, Box<dyn AsyncDuplexStream>>`]connect_over()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<ConnectionProxyRoute<IpAddr>, Box<dyn AsyncDuplexStream>>`]connect_over()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/CreateOTPFromBase64()." -> "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]otp()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/CreateOTPFromBase64()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Socks#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/CreateOTPFromBase64()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Http#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Vec<U>`][VisitContainerUnknownFields]visit_unknown_fields_within()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Repeated#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Vec<U>`][VisitContainerUnknownFields]visit_unknown_fields_within()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/eagerly_resolve_each()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/catch_unwind()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedPanic#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_EstablishedSend()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_send()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CheckSvr2CredentialsError#CredentialsCouldNotBeParsed#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CheckSvr2CredentialsError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/error_all_hosts_after()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 direct_connect_fails_after_30s_but_proxies_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Chat`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_before_clone_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_before_clone_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_before_clone_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_before_clone_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_before_clone_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]is_cancelled()."
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[Claims]from_attestation_data()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/node_width()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/parent_step()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::BackupLocator`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::BackupLocator`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#PhoneNumberMissingValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ContactAttachment#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmailMissingValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#Avatar#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[ContactAttachment]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Reaction#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmptyName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#Missing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmptyAddress#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/valid_contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/test/aes_ctr_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<asn1::Enumerated>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/SgxType#Standard#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<asn1::Enumerated>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<asn1::Enumerated>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/SgxType#Scalable#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt_arbitrary_attribute()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`UnorderedList<Invitee>`][`ValidateFrom<Vec<group_invitation_revoked_update::Invitee>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#CountMustBeNonzero#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`UnorderedList<Invitee>`][`ValidateFrom<Vec<group_invitation_revoked_update::Invitee>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidInvitee#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_multiple_messages()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`MessageAndLen<L, M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_multiple_messages()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/assert_valid()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_multiple_messages()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`MessageAndLen<L, M>`]into_reader()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_multiple_messages()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_multiple_messages()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#MissingIapSubscriptionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#MissingSettings#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#EmptyCurrency#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#UsernameLinkWithoutUsername#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BackupSubscription#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#InvalidSubscriberId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#ChatStyle#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownCustomColorId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#InvalidUsername#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#DonationSubscription#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/valid_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#InvalidProfileKey#"
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_no_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_no_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_no_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]empty_crl()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_no_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&str`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[IoError][`From<TransportError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/TransportError#UnexpectedTextFrame#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[IoError][`From<TransportError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/TransportError#UnexpectedClose#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkEnabledUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Serialized<T>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]route()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]hostname()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_interleaves_resolved_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_for_multiple_receivers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_for_multiple_receivers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Sender<T>`]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_for_multiple_receivers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_for_multiple_receivers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`]val()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_AciSearchKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][InputStream]skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_skip()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_id_wraps_around()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat_with_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_id_wraps_around()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_id_wraps_around()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_id_wraps_around()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_id_wraps_around()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ArgTypeInfo<'storage, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/ArgTypeInfo#load_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]queries_count()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_results_returned_if_not_expired()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ServiceIdString()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/resolve_hostnames_in_real_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/resolve_hostnames_in_real_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/resolve_hostnames_in_real_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Missed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Generic#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#CallStarterHasNoAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidRingerRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownCallStarter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#NoRingerRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Joined#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Ringing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#MissedByNotificationProfile#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidCallStarter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#OutgoingRing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Accepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#RingerHasNoAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`GroupCall<R>`][`TryFromWith<proto::GroupCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Declined#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_Create()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_aesgcmsiv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType]value()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net 0.1.0 svr/impl#[`SvrConnection<Kind>`][IntoAttestedConnection]into_labeled_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[ConnectionLabel]from_log_safe()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/Error#BadHostname#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/make_http_request_response_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_domain_config_with_port_and_cert()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, E>`]new()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_domain_config_with_port_and_cert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_with_padding()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PublicKey_Deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 encrypted_proto_matches_source()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 encrypted_proto_matches_source()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 encrypted_proto_matches_source()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 encrypted_proto_matches_source()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 write_expected_output()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 encrypted_proto_matches_source()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AccountData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AccountData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AccountData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]next_username()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AccountData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ProfileChangeChatUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`AsyncArgTypeInfo<'a>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/FfiDirection#Sending#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/FfiDirection#Receiving#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_DeriveAccessKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]derive_access_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_GetPublicKey()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]start_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState][`From<SessionStructure>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]from_session_structure()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Sign()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/test/parse_hex_bytes()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/parse_hex_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_GetEndorsementPublicKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]get_endorsement_public_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_GetEndorsementPublicKey()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmailMissingValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmptyName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#UnknownType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#EmptyAddress#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#Avatar#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[ContactAttachment][`TryFromWith<proto::ContactAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#PhoneNumberMissingValue#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniVersion#Zkc#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniVersion][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPni#Zkc#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`TryFrom<ServiceId>`]try_from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/conversions()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_without_finalize()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Initialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_without_finalize()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/find_drop_log()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac_and_segment()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_only()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_only()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac_and_segment_and_parse()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 decrypt_and_decompress_and_hmac_and_segment_and_parse_and_validate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_using_full_backup_reader()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validation()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 hmac_only()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithSize#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithRoot#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/check_consistency_metadata()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#Absent#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#NoVerificationNeeded#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Error#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithTimestamp#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/get_consistency_verifier_permutations()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#"
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_codehash_mismatch()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]initial_request()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_codehash_mismatch()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]complete()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_codehash_mismatch()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_hard_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/html_status_tests()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/test/encode_response()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`AsyncArgTypeInfo<'storage>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#FinalizedByNeon#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#SessionNotFound#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/signal_init_logger()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/next_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/first_parent_to_the_right()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#Image#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#EmptyUrl#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#Accepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallType#Video#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::IndividualCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownDirection#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#InvalidSessionId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SessionNotFound#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]version()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`SimpleRoute<TlsRouteFragment, T>`][SetAlpn]set_alpn()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[TlsRouteFragment][SetAlpn]set_alpn()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]init_listener()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey][`From<[u8; PRIVATE_KEY_LENGTH]>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Serialized<T>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_IdentityKeyPair_1Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidMasterKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MissingSnapshot#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupData][`TryFromWith<proto::Group, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/valid_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/Fingerprint_ScannableEncoding()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/Fingerprint_ScannableEncoding()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]display_string()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/exact_block_stream_valid()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, S>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/local_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/local_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/local_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[QuotedAttachment][`TryFromWith<proto::quote::QuotedAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[QuotedAttachment][`TryFromWith<proto::quote::QuotedAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AttachmentThumbnailWrongFlag#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]describe()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_old_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_no_keys_plaintext_binproto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Paid#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_env_with_ports()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_domain_config_with_port_and_cert()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`ConnectionOutcomes<R>`]record_outcome()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<(Ipv4Addr, Ipv6Addr)>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<(Ipv4Addr, Ipv6Addr)>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`Option<SpecificServiceId<_>>`][`ValidateFrom<Option<Vec<u8>>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`Option<SpecificServiceId<_>>`][`ValidateFrom<Option<Vec<u8>>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/uuid_bytes_to_aci()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_min_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]connect_inner_then_outer_with_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_min_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslFailedHandshake#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_min_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_log_tag()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_min_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[UsernameLink][`TryFrom<proto::account_data::UsernameLink>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BadUsernameEntropyLength#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[UsernameLink][`TryFrom<proto::account_data::UsernameLink>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BadUsernameServerIdLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<u8>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`][`From<Box<[T]>>`]from()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#VerificationFailure#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_point_args()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::CallLink`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::CallLink`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::CallLink`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_redemption_time()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_redemption_time()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]redemption_time()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_ReceiveIncomingRequest()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TcpProxy][AsReplacer]as_replacer()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TlsProxy][AsReplacer]as_replacer()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Default#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_slow_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`][`Connector<R, Inner>`]connect_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_slow_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_log_tag()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_slow_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]into_unauthenticated()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#"
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]pck_crl()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]crl()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_again_skips_timed_out_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]write()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<mpsc::error::SendError<T>>`]from()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_body()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/extract_arg_names_and_types()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_ts_signature_comment()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_async_body()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/call_chat_update()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Call#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/call_chat_update()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/call_chat_update()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Qe#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Success#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Isv#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]attest_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#Yes#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#No#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tcp_proxy()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 serialized_account_settings_is_valid()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 serialized_account_settings_is_valid()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 serialized_account_settings_is_valid()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 serialized_account_settings_is_valid()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup][`From<CompletedBackup<Store>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TcpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TcpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TcpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_too_short()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_too_short()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_too_short()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#TooShort#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_voice_message_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_voice_message_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_voice_message_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`usernames::ProofVerificationFailure`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#VerificationFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid_struct()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_ipv6_disabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_ipv6_disabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_ipv6_disabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#RequestedIpTypeNotFound#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_ipv6_disabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_ipv6_disabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#AAAA#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialWithPni_CheckValidContents()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`[u8; LEN]`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingAccountData#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveMediaId()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_media_id()."
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 test/has_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_visit_unknown_fields_impl()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientEncrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolvedRoute]immediate_target()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolvedRoute]immediate_target()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolvedRoute]immediate_target()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolvedRoute]immediate_target()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest]into_client_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiProtocolError#NoTokenInResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequestDebugInfo][`From<&LookupRequest>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send_bytes()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or_else()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/err_for_close()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/check_consistency_metadata()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/check_consistency_metadata()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]check_auth_credential_redemption_time()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]check_auth_credential_redemption_time()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_add_seconds()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]all_pre_key_ids()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_UpdateWithOffset()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialPresentation_GetReceiptLevel()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_level()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_CreateSession()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]create_session()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::Member`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]verify_tag()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]verify_tag()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]verify_tag()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Registration#Registered#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[CallLink]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[ContactData]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#CallLink#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_SignAlternateIdentity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_SignAlternateIdentity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_SignAlternateIdentity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`]project()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientEncryptNode()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RequestInvalid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[`RequestError<E>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()."
  "rust-analyzer cargo device-transfer 0.1.0 create_self_signed_cert()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#"
  "rust-analyzer cargo device-transfer 0.1.0 create_self_signed_cert()." -> "rust-analyzer cargo device-transfer 0.1.0 build_cert()."
  "rust-analyzer cargo device-transfer 0.1.0 create_self_signed_cert()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#KeyDecodingFailed#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Warn#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Info#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Debug#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Trace#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Error#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SendFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/session_not_found()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/not_ready_for_verification()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[RequestVerificationCodeError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[RootCertificates]apply_to_connector()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[RootCertificates]apply_to_connector()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[RootCertificates]apply_to_connector()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromStaticDers#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[RootCertificates]apply_to_connector()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]locally_resolved_hostnames()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[U][Visitor]unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[U][Visitor]unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Compare()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]into_listener()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_foreign_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_foreign_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#NoBubbleColor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownCustomColorId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#WallpaperPhoto#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownPresetBubbleColor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownPresetWallpaper#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]test_data()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_InputStreamReadIntoZeroLengthSlice()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/request_allows_dot_at_the_end()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/request_allows_dot_at_the_end()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/impl#[ExampleDomain][Domain]G_a()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_default_generator_points()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<RetryLater>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<RetryLater>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Timeout#"
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_presentation_v1_is_rejected()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/make_route_provider()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/make_route_provider()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/make_route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#TlsProxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/make_http_request_response_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[PinError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#DecodingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[PinError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#MrenclaveLookupError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[PinError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#Argon2Error#"
  "rust-analyzer cargo poksho 0.7.0 benches()." -> "rust-analyzer cargo poksho 0.7.0 bench_poksho_api_sha256()."
  "rust-analyzer cargo poksho 0.7.0 benches()." -> "rust-analyzer cargo poksho 0.7.0 bench_poksho_api_mac_sha256()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportPasswords#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#UnsupportedScheme#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#MissingHost#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportUsernames#"
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[BlindedReceiptCredentialWithSecretNonce]get_blinded_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]decrypt_blinded_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_save_kyber_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`][IntoIterator]into_iter()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse_single_chunk()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptProfileKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptProfileKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/array_prepend()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_tcb_status()." -> "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_tcb_status()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/validate_expected_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/validate_expected_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/validate_expected_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeAliceSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeAliceSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeAliceSession()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeAliceSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeAliceSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#GradientEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#GradientLengthMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnsupportedGradient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Solid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Color][`TryFrom<u32>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Gradient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[CustomChatColor][`TryFrom<proto::chat_style::custom_chat_color::Color>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleGradientColor]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[DomainFrontRouteProvider][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_save_identity()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/live_resolve_eq_static_resolution()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[DomainConfig]static_fallback()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/live_resolve_eq_static_resolution()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/live_resolve_eq_static_resolution()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/live_resolve_eq_static_resolution()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/live_resolve_eq_static_resolution()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][`Connector<crate::route::SimpleRoute<crate::route::HttpRouteFragment, crate::route::SimpleRoute<crate::route::TlsRouteFragment, TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][`Connector<crate::route::SimpleRoute<crate::route::HttpRouteFragment, crate::route::SimpleRoute<crate::route::TlsRouteFragment, TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#DnsOverHttpsLookup#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][`Connector<crate::route::SimpleRoute<crate::route::HttpRouteFragment, crate::route::SimpleRoute<crate::route::TlsRouteFragment, TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[E164][FixedLengthSerializable]serialize_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]to_be_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/custom_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/serialize()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/custom_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/custom_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/test_claims()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_voice_message_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_test_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[AuthenticatedChatHeaders][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/preconnect_same_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][Debug]fmt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketClientWriter<S, E>`]send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketClientWriter<S, E>`]send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&T>`][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]check_search_consistency()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_path()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]check_search_consistency()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::StickerPack`]test_data()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/happy_case()." -> "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/happy_case()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_invitation_revoked_update::Invitee`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`][`Sink<T>`]poll_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/basic_authorization()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[ExpirationTooShort][Display]fmt()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]as_secs()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username_hash()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username_proof()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 bench_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 sgx_session/SgxClientState_EstablishedRecv()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_recv()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]pending_bytes_size()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[`ContactMessage<R>`][`TryFromWith<proto::ContactMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/impl#[`ContactMessage<R>`][`TryFromWith<proto::ContactMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/ContactAttachmentError#Missing#"
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/from_bytes()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkResetUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_most_recent()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/frontier()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::DistributionListItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/attach_and_log_on_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_ec_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_ec_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#SendFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#ServerSentInvalidUtf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#ReceivedInvalidUtf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/curve_error_impls_std_error()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMember]from_proto_test_data()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMember]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Default#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#UnsupportedScheme#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportPasswords#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#MissingHost#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportUsernames#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks5()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/GroupCipher_DecryptMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]project()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/InvalidExpiration#TooShort#" -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_hours()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`][Future]poll()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[SendRequest]poll_send_and_flush()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`][Future]poll()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#SendRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`][Future]poll()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#ReadResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`][Future]poll()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]in_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]pcesvn()."
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]in_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/attachment_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/attachment_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/attachment_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/respects_fused_is_terminated()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/respects_fused_is_terminated()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_handshaken_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/respects_fused_is_terminated()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/respects_fused_is_terminated()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/testutil/echo_forever()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 main()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/run()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]check_svr2_credentials()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]submit_chat_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]check_svr2_credentials()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]check_svr2_credentials()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_attempt_to_connect_until_all_routes_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 e164/test/gen_e164()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]is_cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/CancellationReason#ServiceError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]all_kyber_pre_key_ids()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`KeyValue<K, V>`][`PartialOrd<Self>`]partial_cmp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`KeyValue<K, V>`][Ord]cmp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_failing_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_failing_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`ConnectionOutcomes<R>`]record_outcome()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_failing_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity_key_pair()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_retry_after_seconds()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_retry_after_seconds()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_retry_after_seconds()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_retry_after_seconds()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_retry_after_seconds()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/empty_without_padding()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_verification_code()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_request()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[Message][`From<TextOrBinary>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[Message][`From<TextOrBinary>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/account_data_custom_colors_ordering()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::account_data::AccountSettings`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/account_data_custom_colors_ordering()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/account_data_custom_colors_ordering()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/account_data_custom_colors_ordering()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_aesgcmsiv()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]reset()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_pre_key_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]all_receiver_chain_logging_info()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/append_session_summary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/successful_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/successful_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/spawn_localhost_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/successful_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/successful_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/basic_authorization()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[Error][`From<ErrorStack>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/Error#BadCertificate#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingTokenAck#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[It][CollectSerialized]collect_serialized()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingLookupRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/large_request_split()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest]into_client_request()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sibling()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sibling()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sibling()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`Lookup<CustomColorId, <M as ReferencedTypes>::CustomColorReference>`]lookup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ReferencedTypes#color_reference()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]save_kyber_pre_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_stored_account_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/string_for_field()." -> "rust-analyzer cargo attest 0.1.0 util/strip_trailing_null_byte()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/string_for_field()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/string_for_field()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/data_for_field()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/string_for_field()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_key_in_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`TryFrom<ServiceId>`]try_from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#RemoteDeleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#ViewOnce#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#DirectStoryReply#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Sticker#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Voice#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Standard#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Update#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#GiftBadge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#PaymentNotification#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemMessage<M>`][`TryFromWith<proto::chat_item::Item, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#boxed_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkDisabledUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ConnectionInfo][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]close()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo attest 0.1.0 util/test/test_read_bytes()." -> "rust-analyzer cargo attest 0.1.0 util/read_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha256#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha512#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#UnknownAlgorithm#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha1#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]map()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/match_optional_fields()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[VerifiedSearchResult]are_all_roots_equal()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]and_then()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#UsernameHash#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#E164#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_single_search_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<std::result::Result<T, E>>`]transpose()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/extract_value_as()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredMonitoringData][`From<MonitoringData>`]from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]update()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]into_data_update()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_hash_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/into_sorted_pairs()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_successfull_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_successfull_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_successfull_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_successfull_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_successfull_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription]fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 get_enclave_secret()." -> "rust-analyzer cargo libsignal-net 0.1.0 parse_auth_secret()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_recv_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_remove_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_remove_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_remove_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 Transport#Doh#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]hostnames()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 RouteType#ProxyF#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#OneDomainPerProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 Transport#Udp#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[`CustomDnsResolver<R, T>`][DnsLookup]dns_lookup()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 test_connection()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi_lookup()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 Environment#Production#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[ConnectState]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 RouteType#Direct#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport][DnsTransport]send_queries()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_resolved()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 svr/impl#[`SvrConnection<E>`]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]parse_as_ip_or_domain()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 RouteType#ProxyG#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport][DnsTransport]send_queries()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#ProxyF#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 Environment#Staging#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#ProxyG#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]route_type()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 impl#[RouteType][IntoEnumIterator]iter()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#AllDomains#"
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net 0.1.0 cast_params()."
  "rust-analyzer cargo libsignal-net 0.1.0 main()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks4#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/impl#[KtUnauthChatConnection][UnauthenticatedChat]send_unauthenticated()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]send()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#ContactHasNoIdentifiers#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[E164][`TryFrom<u64>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidIdentityKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidProfileKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#NicknameIsPresentButEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#ContactRegistrationUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Registration#NotRegistered#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#MissingIdentityKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidContactUsername#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Registration#Registered#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ContactData][`TryFromWith<proto::Contact, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ConnectChatBridge>`][`AsyncArgTypeInfo<'a>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory]from_connection_manager_wrapper()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMCiphertextLength#"
  "rust-analyzer cargo zkcredential 0.1.0 benches()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()."
  "rust-analyzer cargo zkcredential 0.1.0 benches()." -> "rust-analyzer cargo zkcredential 0.1.0 attribute_key_inversion()."
  "rust-analyzer cargo zkcredential 0.1.0 benches()." -> "rust-analyzer cargo zkcredential 0.1.0 key_derivation()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_verification_code()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_verification_code()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Assert#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Info#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Debug#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Verbose#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Error#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Warn#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`AsyncArgTypeInfo<'storage>`]load_async_arg()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#None#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`AsyncArgTypeInfo<'storage>`]load_async_arg()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/Pin_LocalHash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LearnedProfileChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupChangeChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ThreadMergeChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ProfileChangeChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SessionSwitchoverChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ExpirationTimerChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupCall`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::IndividualCall`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SimpleChatUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#WebSocketSend#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#UnexpectedClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[UnexpectedCloseError][`From<Option<CloseFrame<'_>>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedTextMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#ServerIdleTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#TextFrame#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#WebSocket#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelIdleTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<ReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#WebSocketReceive#"
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Combine()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Combine()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Combine()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]verify_tag()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]finalize()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]verify_tag()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_profile_key_version()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_profile_key_version()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_profile_key_version()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_e164()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_e164()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][AsChatValue]as_chat_value()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/chat_has_confirmation_header()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/chat_has_confirmation_header()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`From<Destination<FullRecipientData>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData]new()."
  "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EndpointParams<'a, E>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 make_ws_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/EnclaveKind#url_path()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[`proto::Text`]test_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_a_record()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#AAAA#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_aaaa_record()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#UnexpectedMessageId#"
  "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs][Default]default()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][FusedStream]is_terminated()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]is_empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/assert_signal_message_equals()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_sig()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Qe#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_sig()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/generate_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_sig()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/impl#[Error][`From<io::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/test/test_deserialization()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]from_der()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][`TryFrom<String>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[FullRecipientData][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[FullRecipientData][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[FullRecipientData][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]current_ratchet_key_matches()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]sender_uuid()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]sender_e164()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]device_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SealedSenderDecryptionResult]message()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_CurrentRatchetKeyMatches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#EmptyQuotedMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#InvalidAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AuthorNotFound#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#Normal#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#TypeUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]test_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AuthorHasNoAciOrE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[QuotedAttachment]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestApprovalUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Repeated#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#MapValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_field()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_system()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_system()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecoratorSeq]decorate_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::BodyRange`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/try_decode()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][`From<Box<[u8]>>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead]into_last_tree_head()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/make_e164_pair()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredAccountData][`From<AccountData>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/pad_gzipped_bucketed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[FilenameOrContents][`From<clap_stdin::FileOrStdin>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 emit_proto()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key_or_default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/gzip_compress()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/hmac_checksum()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]scramble()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 read_file()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 write_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_to_json()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]collect_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<ValidateOnly>`]new_validator()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/aes_cbc_encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_from_json()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMembershipAccessLevelChangeUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeyPairSerde#from_public_and_private()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]start_future()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]into_inner()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/describe_panic()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`AssertSendSafe<T>`]wrap()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]new()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFutureState<T>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<SequenceOf<'a, SgxExtension<'a>, 0, _>>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Sequence#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/name_from_ident()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/name_from_ident()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 name_for_meta_key()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/name_from_ident()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 bridge_fn_impl()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/min_kvq_stream_debounce()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/ViewOnceMessageError#Attachment#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/ViewOnceMessageError#Reaction#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/impl#[`proto::ViewOnceMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#NoFilePointer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/valid_view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Custom#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/PhoneSharing#WithEverybody#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`CustomColorMap<M>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/IapSubscriptionId#IosAppStoreOriginalTransactionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][Debug]fmt()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Valid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][Debug]fmt()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][Debug]fmt()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Failed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]load_sender_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_late_join()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmDecryption_New()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`ComposedConnector<A, B, Error>`][`Connector<super::SimpleRoute<TlsRouteFragment, T>, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]connect_inner_then_outer()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/multiple_blocks()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]hostnames()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#ReturnStream#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]iter()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ExpiringProfileKeyCredential_GetExpirationTime()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/expiring_profile_key_credential/impl#[ExpiringProfileKeyCredential]get_expiration_time()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/case_insensitive()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/case_insensitive()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm_smoke_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm_smoke_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]compute_tag()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm_smoke_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead]into_last_tree_head()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/try_decode()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead][`From<(TreeHead, [u8; 32])>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Distinguished()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_decrypted_data_bad_structure()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_decrypted_data_bad_structure()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hkdf()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_decrypted_data_bad_structure()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_decrypted_data_bad_structure()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidDecryptedDataStructure#"
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_decrypted_data_bad_structure()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hmac()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GeneratePrivateKey()." -> "rust-analyzer cargo device-transfer 0.1.0 create_rsa_private_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GeneratePrivateKey()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#Pkcs8#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_tree_head_signature()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/check_consistency_metadata()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_hash_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_timestamp()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_GetUserId()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_GetUserId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]get_user_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberKeyPair_Generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[NotificationProfileError][`From<ColorError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#ColorNotOpaque#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[NotificationProfileError][`From<ColorError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ColorError#NotOpaque#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[NullPointerError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#NullParameter#"
  "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_permute_scramble_and_unscramble()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/collect_permutation()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()."
  "rust-analyzer cargo attest 0.1.0 dcap/asn2unix()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf()."
  "rust-analyzer cargo attest 0.1.0 dcap/asn2unix()." -> "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]crl()."
  "rust-analyzer cargo attest 0.1.0 dcap/asn2unix()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]root()."
  "rust-analyzer cargo attest 0.1.0 dcap/asn2unix()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/asn2unix()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`AsyncArgTypeInfo<'storage>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/AsyncArgTypeInfo#save_async_arg()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/null_terminated_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/null_terminated_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/test_claims()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/null_terminated_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/serialize()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v2()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v2()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V2#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v2()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[Timestamp][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/can_convert_js_number_to_int()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[Timestamp][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry][FixedLengthSerializable]serialize_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry][FixedLengthSerializable]serialize_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[E164][FixedLengthSerializable]serialize_into()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry][FixedLengthSerializable]serialize_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[Uuid][FixedLengthSerializable]serialize_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::SubscriberData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_path()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/direct_path()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_load_session()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#SendFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]with_authenticated_message()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_SendRawServerRequest()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_local_inactivity()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_local_inactivity()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_local_inactivity()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_local_inactivity()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_local_inactivity()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo attest 0.1.0 error/tests/error()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/HKDF_Derive()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyProvider#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRouteProvider<P>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyProvider#Direct#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAdminStatusUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkAdminApprovalUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GenericGroupUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupSelfInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestCanceledUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberJoinedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberJoinedByLinkUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkEnabledUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationSelfInvitedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkDisabledUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupExpirationTimerUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAvatarUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationInvitedMembersUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupNameUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupCreationUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationDeclinedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SelfInvitedToGroupUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAttributesAccessLevelChangeUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberLeftUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkResetUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupDescriptionUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestApprovalUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SelfInvitedOtherUserToGroupUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationAcceptedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationDroppedMembersUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupV2MigrationUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAnnouncementOnlyChangeUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberRemovedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMembershipAccessLevelChangeUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupUnknownInviteeUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberAddedUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group_change_chat_update::Update`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupSequenceOfRequestsAndCancelsUpdate`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_info()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_frames()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_and_validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_username_hash()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_username_hash()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][AsChatValue]as_chat_value()."
  "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#shohash()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#shohash()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#new()."
  "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#shohash()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Secret][KeyKind]key_length()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#generate()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyLength#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_with_finalize()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Initialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_with_finalize()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Finalize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/drop_with_finalize()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/test/find_drop_log()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#HttpFormat#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#SendQueueFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Url#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#Parse#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_message_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/authenticating_server_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[InitialPayloadAuth]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/testutil/echo_forever()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_authenticated_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Authenticated#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]is_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]is_empty()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSerializedResponse][`TryFrom<chat::Response>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedMonitorResponse]from_untyped()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/decode_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]latest_log_position()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_monitor()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<UpdateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<UpdateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<UpdateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#Rejected#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<UpdateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<UpdateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WithoutResponseHeaders]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WithoutResponseHeaders<T>`][Default]default()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]decrypt_to_second_point()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][`From<std::io::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/read_returns_inner_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/read_returns_inner_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]send_error()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/read_returns_inner_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/read_returns_inner_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_handshaken_pair()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/impl#[`NextOrClose<T>`]unwrap_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/impl#[`NextOrClose<T>`]unwrap_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaStaticDispatch<M>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Root#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaStaticDispatch<M>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`proto::TestMessage`]fake_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaStaticDispatch<M>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[S][ProtoWireCast]wire_cast_as()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/PresentationVersion#V4#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[PresentationVersion][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_archived_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream]project()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/advance()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V3#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation]get_uuid_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_uuid_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V2#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V1#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV2]get_uuid_ciphertext()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_fmspc_mismatch()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_fmspc_mismatch()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_fmspc_mismatch()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[u8][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[u8][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Integer#"
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]default_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]default_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingResumeSessionError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#Rejected#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_ResumeSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/distinguished_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/distinguished_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/distinguished_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/distinguished_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Serialized<T>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Serialized<T>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]clear_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]clear_proxy()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMember]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberRoleUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::Member`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::PushTokenType`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::PushTokenType`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushTokenType#Fcm#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/result_type()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/extract_arg_names_and_types()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn_body()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_io_body()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[IapSubscriberData][`TryFrom<proto::account_data::IAPSubscriberData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#InvalidSubscriberId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[IapSubscriberData][`TryFrom<proto::account_data::IAPSubscriberData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#MissingIapSubscriptionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[IapSubscriberData][`TryFrom<proto::account_data::IAPSubscriberData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/IapSubscriptionId#IosAppStoreOriginalTransactionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[IapSubscriberData][`TryFrom<proto::account_data::IAPSubscriberData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/IapSubscriptionId#PlayStorePurchaseToken#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::NotificationProfile`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::NotificationProfile`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_signedprekey_not_saved()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/impl#[`proto::ViewOnceMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/impl#[`proto::ViewOnceMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Ord]cmp()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#WebSocketConnectionFailed#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_handles_too_many_failed_attempts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_hmac_no_match()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_hmac_no_match()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#HmacMismatch#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]stack()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ConnectDnsFailed#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#LocalDisconnect#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#Error#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingCdnKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingDigest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[u32][`From<LogLevel>`]from()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Info#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Error#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Debug#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Trace#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Warn#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/disconnects_server_on_client_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/disconnects_server_on_client_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/disconnects_server_on_client_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/disconnects_server_on_client_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/disconnects_server_on_client_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/socks_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RequestError<E>`][`From<FatalConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RequestError<E>`][`From<FatalConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RequestError<E>`][`From<FatalConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RequestError<E>`][`From<FatalConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#Unexpected#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/into_inner()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_encrypted_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/into_inner()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]into_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/into_inner()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/impl#[`CountingReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/into_inner()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/KeySerde#deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancelled_is_idempotent()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancelled_is_idempotent()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancelled_is_idempotent()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancelled_is_idempotent()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]is_cancelled()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[ReplacingConnectorFactory][`ConnectorFactory<UsePreconnect<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>>>`]make()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]replaced_stateless()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[ReplacingConnectorFactory][`ConnectorFactory<UsePreconnect<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>>>`]make()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[DefaultConnectorFactory][`ConnectorFactory<R>`]make()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[String]>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[String][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#UsernameLinkDataTooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#HmacMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InputDataTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidDecryptedDataStructure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameLinkInvalid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#BadCiphertext#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameLinkInvalidEntropyDataLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameLinkError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]report_alerts()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#"
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake()." -> "rust-analyzer cargo attest 0.1.0 util/impl#[`SmallMap<K, V, N>`]get()."
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake()." -> "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_constants()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]into_listener()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniResponse#Zkc#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPni#Zkc#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory][Finalize]finalize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`][Finalize]finalize()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<TC>`]snapshot()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/impl#[`Map<R, F>`][RouteProvider]routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#map_routes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[TestDnsTransportFailingToConnect][`Connector<IpAddr, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_key_parts()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SelfInvitedToGroupUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[KeyPair][KeyPairSerde]from_public_and_private()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 only_proxies_are_reachable()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_GetSenderRatchetKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][MayHavePublicKey]public_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]public_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingAdminApproval`]test_data()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair]without_public_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]id()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair]without_public_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#Id#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/Svr2Client_New()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/new_client()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_k()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]device_id()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_Update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update()."
  "rust-analyzer cargo libsignal-core 0.1.0 key_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-core 0.1.0 key_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_agreement()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/rejected_double_colon()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/rejected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]queries_count()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_ttl_limited()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_FakeRegistrationSession_CreateSession()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]create_session()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAttributesAccessLevelChangeUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/tokio/TokioAsyncContext_cancel()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][AsyncRuntimeBase]cancel()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_too_short()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_too_short()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#UsernameLinkDataTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_error()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_error()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/make_timestamp()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_error()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]from_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKey_VerifyAlternateIdentity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKey_VerifyAlternateIdentity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_message_key_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupNameUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupNameUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_ref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`url::Host<S>`][`From<Host<S>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Delegated#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]accept()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]accept()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#SocksProxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveLocally#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/Auth#Authenticated#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/TargetAddressType#HostnameTarget#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/TargetAddressType#IpTarget#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/Auth#Unauthenticated#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/socks5_server_basic_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]locally_resolved_hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]locally_resolved_hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]generate()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair][`From<CredentialPrivateKey>`]from()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPublicKey][`From<&CredentialPrivateKey>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#QueueEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Alerts#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#IncomingMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[ServerMessageAck]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Stopped#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#TransitCdnMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingDigest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingTransitCdnKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingMediaName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#InvalidMediaName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::LocalLocator`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingKey#"
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_nickname_scalar()." -> "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]new()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]new()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]bind_settle_promise()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]send_dns_queries()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#NoResolvedRoutes#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportRestricted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceMonitor<Inner>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_resolved()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]is_empty()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/results_within_interval()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream][InputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Pending#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream][InputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_read()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[FailingSingle][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_get_signed_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/compressed_name_format_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name_to_vec()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_message_backup::ReadError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_message_backup::ReadError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[libsignal_message_backup::FoundUnknownField]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/frontier()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/right()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/frontier()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/RetryError#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/RetryError#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#TimedOut#"
  "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]squeeze_and_ratchet_into()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#RATCHETED#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/validating_returns_right_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&str`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][ReportUnusualTimestamp]report()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[CustomChatColor]from_proto_test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_of_shared_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_within_full_message()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/make_endorsements()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#Protocol#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#Parse#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ConnectDnsFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelIdleTooLong#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#WebSocketIdleTooLong#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ServerCrashed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#AttestationDataError#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#RetryAfter42Seconds#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#ProtobufDecode#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiProtocolError#NoTokenInResponse#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#DnsError#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/read_only_stream_after_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/read_only_stream_after_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/read_only_stream_after_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/anonymous_server_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/read_only_stream_after_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::Sticker`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[VerifiedSearchResult]are_all_roots_equal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[VerifiedSearchResult]tree_root()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`[u8; LEN]`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]remove()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<Storage>`][Default]default()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]combine()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[UsernameData][`TryFrom<(String, Option<proto::account_data::UsernameLink>)>`]try_from()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo libsignal-node 0.70.0 main()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/init_logger()."
  "rust-analyzer cargo libsignal-node 0.70.0 main()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/register()."
  "rust-analyzer cargo libsignal-node 0.70.0 main()." -> "rust-analyzer cargo libsignal-node 0.70.0 minidump_to_json_string()."
  "rust-analyzer cargo libsignal-node 0.70.0 main()." -> "rust-analyzer cargo libsignal-node 0.70.0 identitykeypair_deserialize()."
  "rust-analyzer cargo libsignal-node 0.70.0 main()." -> "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeBobSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeBobSession()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeBobSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeBobSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_InitializeBobSession()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_accepted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_accepted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/non_hermetic_current_time()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_accepted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/mistakenly_microseconds()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_accepted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/mistakenly_seconds()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<TC>`]snapshot()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[WebSocketConnectError][Display]fmt()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<prost::DecodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<prost::DecodeError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#ProtobufDecode#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]previous_session_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Previous#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/create_decryption_failure_log()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]previous_counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_old_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]set_session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Current#"
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]complete()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]initial_request()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_happy_path()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey][`From<[u8; PRIVATE_KEY_LENGTH]>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_too_far_in_the_future()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-net 0.1.0 svr/impl#[`SvrConnection<E>`]connect()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 svr/impl#[`SvrConnection<E>`]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WithoutResponseHeaders]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_send()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]send()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Idle#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Ready#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Reading#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Skipping#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Pending#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[`Env<'a>`]static_fallback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]new_direct()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_with_static_fallback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][`From<TcpRoute<IpAddr>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[IdentityKeyHex][`SerializeAs<libsignal_protocol::IdentityKey>`]serialize_as()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]get_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]get_kyber_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_receiver_cloned_after_completion()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`]val()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_receiver_cloned_after_completion()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_receiver_cloned_after_completion()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_completes_receiver_cloned_after_completion()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Sender<T>`]send()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_core::E164`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_core::E164`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/zkgroup_bincode_options()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_keys()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_keys()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[`Env<'a>`]static_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[`Env<'a>`]static_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[`Env<'a>`]static_fallback()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[DomainConfig]static_fallback()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_happy_path()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]initial_request()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_happy_path()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]complete()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_happy_path()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_happy_path()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]new()."
  "rust-analyzer cargo attest 0.1.0 test_hsm_enclave_happy_path()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#InvalidFee#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::PaymentNotification`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#InvalidAmount#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/clone_from_array_of_wrappers()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/clone_from_wrapper()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_save_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#SignaledToEnd#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/wait_for_task_to_finish()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<TaskSendError>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#MaybeStillRunning#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#NoResolvedRoutes#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TimeoutOr<RouteConnectError<T>>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Timeout#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]byte()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ContactMonitoring#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]byte()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyManagement#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]byte()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]calc_M3()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]calc_M3()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point_single_elligator()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Option<U>`][VisitContainerUnknownFields]visit_unknown_fields_within()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Option<U>`][VisitContainerUnknownFields]visit_unknown_fields_within()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Field#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[StaticDnsMap][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#NoData#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_type_from_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#AlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#WriteBufferFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingUpdateSessionError#RetryAfter42Seconds#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingUpdateSessionError#Rejected#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#Rejected#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_UpdateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[Timestamp][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[Timestamp][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_expiration_time()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_level()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`[u8]`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_contents()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/gzip_compress()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/pad_gzipped_bucketed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/hmac_checksum()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 export/aes_cbc_encrypt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[IoError][`From<BridgeOrIoError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/BridgeOrIoError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[IoError][`From<BridgeOrIoError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/BridgeOrIoError#Bridge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[IoError][`From<BridgeOrIoError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#CallbackException#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/IncomingEvent#ReceivedRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ListenerState]send_event()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ListenerState]send_event_blocking()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ListenerState]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_one_event()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Error#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFutureState<T>`]new()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Pending#"
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_root()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_root()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_root()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_root()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]crl()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_root()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]empty_crl()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[ErrorOnReturn][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`OutcomeOrPanic<C, F>`][`From<Outcome<C, F>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`OutcomeOrPanic<C, F>`][`From<Outcome<C, F>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`OutcomeOrPanic<C, F>`][`From<Outcome<C, F>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`OutcomeOrPanic<C, F>`][`From<Outcome<C, F>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_push_challenge()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_push_challenge()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Default]default()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/version_byte_error_message()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/impl#[`WithLeadingByte<T>`]test_value()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/input_data_too_long()." -> "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/input_data_too_long()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InputDataTooLong#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetUuidCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetUuidCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_aci_ciphertext()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]connect_and_send()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`VariableTlsTimeoutConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`VariableTlsTimeoutConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]into_connectors_and_min_timeout()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`VariableTlsTimeoutConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][Clone]clone()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec2()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec2()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_aesgcmsiv()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec2()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_aesgcmsiv()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/neither()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#IdentificationContainsBoth#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/neither()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#EmptyIdentification#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/neither()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/both()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSessionCipher_Encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_read()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`RequestVerificationCode<'_>`][Request]request_path()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SubmitVerificationCode<'_>`][Request]request_path()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PlaintextContent_DeserializeAndGetContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PlaintextContent_DeserializeAndGetContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]body()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupData][`TryFromWith<proto::Group, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupData][`TryFromWith<proto::Group, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidMasterKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupData][`TryFromWith<proto::Group, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MissingSnapshot#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptBlobWithPaddingDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_with_padding()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]derive_access_key()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]derive_access_key()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/is_not_connected_after_remote_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TlsProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TlsProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[TlsProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[Stateless][`Connector<(WebSocketRouteFragment, HttpRouteFragment), Inner>`]connect_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`Schedule<S, R, SP>`]as_stream()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]next()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_second_result_if_first_result_fails()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#InvalidToken#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#ServerInternalError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#ServerUnavailable#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#UnexpectedClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiCloseCode][`TryFrom<u16>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiCloseCode#RateLimitExceeded#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/unexpected_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]make_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/hmac_sha256()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/PadCompressed#Pad#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/PadCompressed#NoPad#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[AccountEntropyPool][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[AccountEntropyPool][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_Create()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]handle()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_Create()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedSearchResponse]from_untyped()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSerializedResponse][`TryFrom<chat::Response>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/prompt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_fails_on_timeout()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_fails_on_timeout()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_fails_on_timeout()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ParseFromServiceIdBinary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ParseFromServiceIdBinary()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#ConnectionTimedOut#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_prefix()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotStartWithDigit#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_prefix()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]init_listener()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]into_event_listener()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ServerMessageAck_Create()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[ServerMessageAck]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/write_name()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RegisterAccount()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]register_account()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RegisterAccount()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`NewMessageNotification<S>`]as_deref()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RegisterAccount()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SignedPreKeyBody<T>`]as_deref()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_one_event()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]project()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_one_event()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`libsignal_net_infra::ws2::Connection<S, R>`][InnerConnection]handle_next_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SessionId()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SessionId()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]as_url_path_segment()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][SyncInputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_NewFresh()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/test/connection_proxy_config_accepts_mixed_case_scheme()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionProxyConfig_new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`HashMap<K, V>`][VisitContainerUnknownFields]visit_unknown_fields_within()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#MapValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`HashMap<K, V>`][VisitContainerUnknownFields]visit_unknown_fields_within()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt_impl()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmDecryption_VerifyTag()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]verify_tag()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nickname_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`EndpointConnection<MultiRouteConnectionManager>`]new_multi()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/EnclaveKind#url_path()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EndpointParams<'a, E>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 make_ws_config()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_lt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/expand_top_bit()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteInfo]fake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V4#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#No#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/impl#[NonSuspendingBackgroundThreadRuntime][`AsyncRuntime<F>`]run_future()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/extract_value_as()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SearchValue<'a>`][`TryFrom<&VerifiedSearchResult>`]try_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][Debug]fmt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_binary_lengths()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#CountMustBeNonzero#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/valid_invitees()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/validated_invitees()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviteeAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviteePni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#AccessLevelInvalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_invalid_aci()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/invitee_pni_service_id_binary()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidInvitee#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/verify()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/verify()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/verify_local_pin_hash()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/der_crl_for_field()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]with_context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/der_crl_for_field()." -> "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]from_der_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/der_crl_for_field()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/data_for_field()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/args/impl#[`JniArgs<'local, 'obj_ref, JObject<'output>, LEN>`]for_nested_frame()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpRequestRejected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#InvalidRequest#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpConnectionFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#Transport#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpUpgradeFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#InvalidUri#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpRequestFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[ConnectError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAnnouncementOnlyChangeUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#Io#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#String#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`LimitedReaderFactory<R, N>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupValidator_Validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]validate_all()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<tungstenite::Error>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]hostname()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]route()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_slows_down_after_starting_a_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxReportBody]has_flag()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxFlags]from_bits_truncate()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxReportBody]has_flag()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxFlags]contains()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join_impl()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore][Finalize]finalize()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/test/aes_cbc_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/test/aes_cbc_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionCipher_DecryptPreKeySignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PublicKey][KeySerde]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::Transaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#OutOfDate#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[QeTcbLevel]from_parts()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_valid_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#UpToDate#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/not_ready_for_verification()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/unwrap_or_lookup_failed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[WallpaperPreset]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/Wallpaper#Photo#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/Wallpaper#Preset#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#boxed_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#WallpaperPhoto#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`Wallpaper<M>`][`TryFromWith<proto::chat_style::Wallpaper, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownPresetWallpaper#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetContentHint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-net 0.1.0 impl#[`LoggingNewHandshake<E>`][NewHandshake]new_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/NewHandshake#new_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 impl#[`LoggingNewHandshake<E>`][NewHandshake]new_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 cast_params()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[NetConfig][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]with_net_config()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][SyncInputStream]skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_skip()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_request_joins_in_flight_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]logged_requests()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_request_joins_in_flight_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_request_joins_in_flight_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_request_joins_in_flight_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[Alpn][`AsRef<[u8]>`]as_ref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[Alpn][`AsRef<[u8]>`]as_ref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/impl#[`proto::StickerMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::Sticker`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/impl#[`proto::StickerMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Reaction#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/impl#[`proto::StickerMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/impl#[`proto::StickerMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::ChatStyle`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::Wallpaper`]test_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ProxyTarget<Host<UnresolvedHost>>`]as_informational_host()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`super::SimpleRoute<super::WebSocketRouteFragment, super::SimpleRoute<super::HttpRouteFragment, Transport>>`][DescribeForLog]describe_for_log()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]remove()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]remove()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::infra::errors::RetryLater`][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::ConnectError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Error#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#WebsocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/websocket_close_code_maps_to_correct_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[`mpsc::UnboundedSender<ListenerEvent>`][IntoEventListener]into_event_listener()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::KeyPair`][KeyPairSerde]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidResponse#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::PaymentNotification`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/payment_notification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_hash_proof()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]to_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 media/Mp4Sanitizer_Sanitize_File_With_Compounded_MDAT_Boxes()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 media/Mp4Sanitizer_Sanitize_File_With_Compounded_MDAT_Boxes()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/mp4/sanitize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/AsyncRuntimeBase#cancel()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[`Http2Connector<C>`][`Connector<crate::route::SimpleRoute<HttpRouteFragment, T>, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpConnectError#HttpHandshake#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo attest 0.1.0 util/test/test_read_from_bytes()." -> "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_tree_head_tbs()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/serialize_key()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_tree_head_tbs()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]as_bytes()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_tree_head_tbs()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]byte()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_tree_head_tbs()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]get_associated_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendIo#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#CloseFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelIdleTooLong#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ReceiveError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#PingFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#WebsocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#Capacity#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_path_prefix_decorator()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_path_prefix_decorator()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#PathPrefix#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_auth_data()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_support_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_auth_data()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_auth_data()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_auth_data()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_auth_data()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/impl#[`StickerMessage<R>`][`TryFromWith<proto::StickerMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#StickerMessageMissingSticker#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/impl#[`StickerMessage<R>`][`TryFromWith<proto::StickerMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]to_be_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/test/gen_e164()."
  "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]from_be_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_GetBackupId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]backup_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_ipv6_enabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[libsignal_message_backup::FoundUnknownField]`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/make_array()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingProfileKey`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#Reaction#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_voice_message_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#WrongAttachmentsCount#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_voice_message_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/valid_voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[AccessLevel][`ValidateFrom<EnumOrUnknown<proto::GroupV2AccessLevel>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/AccessLevel#Member#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[AccessLevel][`ValidateFrom<EnumOrUnknown<proto::GroupV2AccessLevel>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#AccessLevelInvalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[AccessLevel][`ValidateFrom<EnumOrUnknown<proto::GroupV2AccessLevel>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/AccessLevel#Administrator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[AccessLevel][`ValidateFrom<EnumOrUnknown<proto::GroupV2AccessLevel>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/AccessLevel#Any#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSerializedResponse][`TryFrom<chat::Response>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[KyberPreKey]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Group`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Group`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupSnapshot`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[String][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&str`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<vrf::Error>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Serialize]serialize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][Serialize]serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][InputStream]skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_skip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_response_parsed_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_response_parsed_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_response_parsed_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_response_parsed_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_a_record()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_response_parsed_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo device-transfer 0.1.0 private_key_to_der()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#"
  "rust-analyzer cargo device-transfer 0.1.0 private_key_to_der()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#KeySpecific#"
  "rust-analyzer cargo device-transfer 0.1.0 private_key_to_der()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#Pkcs8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_ignores_failed_futures()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/future()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_ignores_failed_futures()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/first_ok()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#UnsupportedScheme#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#MissingHost#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportUsernames#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]parse_as_ip_or_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyFromPartsError#SchemeDoesNotSupportPasswords#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/decode_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSerializedResponse][`TryFrom<chat::Response>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[`FullSearchResponse<'a>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[SlimSearchRequest]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_search()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GenericGroupUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute_without_verified_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#Id#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute_without_verified_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#MessageTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CallbackError]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`(Vec<u8>, Vec<u8>)`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle][`TryFrom<PreKeyBundleContent>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle][`TryFrom<PreKeyBundleContent>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/connect_without_wrapper_ignores_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/connect_without_wrapper_ignores_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/connect_without_wrapper_ignores_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/connect_without_wrapper_ignores_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/connect_without_wrapper_ignores_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`][`ConnectorFactory<R>`]make()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_salt()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]make_salt()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]sub_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_CalculateChunkSize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 validator_command()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_encrypted_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_mark_kyber_pre_key_used()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_mark_kyber_pre_key_used()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_mark_kyber_pre_key_used()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]new()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]new()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_reader()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner]with_lock()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_reader()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]wake_if_some()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#RequiredFieldMissing#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData][`From<StoredMonitoringData>`]from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead]into_last_tree_head()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]iter()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[`&LookupResult`][IntoIterator]into_iter()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]check_auth_credential_redemption_time()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/has_unknown_fields_top_level()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[S][ProtoWireCast]wire_cast_as()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/has_unknown_fields_top_level()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`proto::TestMessage`]fake_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_through_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Staging#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]on_network_change()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]network_changed()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Prod#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTcp][`Connector<TcpRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][Default]default()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][Default]default()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream]project()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/encrypt_hmac_sha256_siv()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/hmac_sha256()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::quote::QuotedAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::quote::QuotedAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/scramble_content_type()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::quote::QuotedAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_propagates_post_connection_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]from_websocket_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]from_websocket_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]from_websocket_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-core 0.1.0 generation()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[&T]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[&T]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_only()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_frames()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse_only()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactPni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/chat_item_order()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`DirectOrProxy<D, P, E>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`DirectOrProxy<D, P, E>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`DirectOrProxy<D, P, E>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, E>`]into_connectors()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/tree_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[NodeData]marshal()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ArgTypeInfo<'a, 'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/returns_write_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/returns_write_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_handshaken_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/returns_write_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or_else()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or_else()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/parse_mob_amount()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[MobAmount][FromStr]from_str()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#MissingExpireTimerVersion#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#DuplicatePinnedOrder#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#NoRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]contact_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`AsRef<MinimalRecipientData>`]as_ref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/CiphertextMessage_FromPlaintextContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalCryptoError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalCryptoError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidInputSize#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalCryptoError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#UnknownAlgorithm#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalCryptoError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[SignalCryptoError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidKeySize#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[libsignal_net::registration::RequestedInformation]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]as_waker()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]was_woken()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_unblocks_cancelled_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_proxy()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]start_future()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`FutureTask<F>`]poll()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Decapsulate#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Encapsulate#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 Command#Generate#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 main()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_core::E164`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[String][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameCannotStartWithDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeSingleDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameBadDiscriminatorCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotBeZero#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotBeSingleDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotStartWithDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameMissingSeparator#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotHaveLeadingZeros#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotHaveLeadingZeros#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeZero#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameDiscriminatorTooLarge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorTooLarge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameBadNicknameCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadDiscriminatorCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UsernameError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UsernameTooShort#"
  "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[`Auth<S>`][AsHttpHeader]header_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/basic_authorization()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]validate_all()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]collect_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]validate_all()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`ReadResult<R>`]and_then()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberDuplicate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#Custom#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]contact_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberDuplicate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MemberIsBothIncludedAndExcluded#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Direct#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ConnectionParams]with_confirmation_header()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_alerts()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[String]>`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/SearchResult_GetAciIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]close()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]message()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_for_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_for_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_for_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidRequest#"
  "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 key_derivation()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`zkgroup::Timestamp`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]poll_ready()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`]project()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][Ord]cmp()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_data()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/constant_time_cmp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[FutureCancelled][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#Cancelled#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/bad_vendor_id()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/bad_vendor_id()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/bad_vendor_id()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[`std::time::SystemTime`][`From<Timestamp>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_tcb_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_tcb_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_tcb_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_root()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_tcb_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_Process()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingAdminApproval]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_admin_approval()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingAdminApproval`]test_data()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSenderKeyStoreStruct`][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/test/stream_passes_errors()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/impl#[`CbcStreamDecryptor<C, S>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/response_for_status()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#MaybeStillRunning#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#ResponseToIncoming#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[OutgoingRequest]make_message()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/spawned_task_body()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_outgoing_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedTextMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Attestation#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/make_http_request_response_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/connection_info_description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ServiceConnectionInfo]description()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/connection_info_description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/connection_info_description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/connection_info_description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#SystemLookup#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/connection_info_description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Test#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::ChatItem`]test_data_wrong_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_key_known_from_master_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V0>`]derive_from_master_key()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[GroupChatUpdate][`TryFrom<proto::group_change_chat_update::update::Update>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupChatUpdate#GroupMemberAddedUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[GroupChatUpdate][`TryFrom<proto::group_change_chat_update::update::Update>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InviterMismatch#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo attest 0.1.0 dcap/attestation_metrics()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/attestation_metrics()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/attestation_metrics()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`AsyncArgTypeInfo<'storage>`]load_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/AsyncArgTypeInfo#load_async_arg()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`YieldingReader<CursorFactory<&B>>`][ReaderFactory]make_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<&B>`][ReaderFactory]make_reader()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_info()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<io::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Io#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_report()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_report()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_support_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_report()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_hex_encode()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_hex_encode()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_EncryptServiceId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`BorrowedJsBoxedBridgeHandle<'a, Borrowed>`]from_wrapper()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/extend_lifetime()."
  "rust-analyzer cargo zkgroup 0.9.0 main()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 main()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 main()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_endorsement_root_key_pair()."
  "rust-analyzer cargo zkgroup 0.9.0 main()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 main()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationSessionInfoConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#PushChallenge#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]drop()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException][Finalize]finalize()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/verify_local_pin_hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`ArgTypeInfo<'a>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][`ArgTypeInfo<'a>`]load_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`ArgTypeInfo<'a>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_disconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/test/make_mac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/test/make_mac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]finalize()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[SendError][`From<ResponseProtoInvalidError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'_>`]into_enclave_identity()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'_>`]into_enclave_identity()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'_>`]into_enclave_identity()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'_>`]into_enclave_identity()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/throw_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedPanic#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[SocksProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()." -> "rust-analyzer cargo attest 0.1.0 util/impl#[`SmallMap<K, V, N>`]get()."
  "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()."
  "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PostQuantum#"
  "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[UnvalidatedHandshake]skip_raft_validation()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_ref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]project_ref()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V1#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1][Serialize]serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation][Serialize]serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV2][Serialize]serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V3#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/unexpected_resource_record_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/unexpected_resource_record_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_a_record()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/unexpected_resource_record_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/unexpected_resource_record_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/unexpected_resource_record_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber1024/impl#[Parameters][Parameters]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_GetType()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]credential_type()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt]for_monitor()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_monitor_error_is_returned()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`chat::Request`][`From<RawChatMonitorRequest>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/common_headers()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[FilenameOrContents][`From<clap_stdin::FileOrStdin>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/FilenameOrContents#Filename#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[FilenameOrContents][`From<clap_stdin::FileOrStdin>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/FilenameOrContents#Contents#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[RouteIpVersion]update_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#V4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[RouteIpVersion]update_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#None#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[RouteIpVersion]update_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#Mixed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[RouteIpVersion]update_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#V6#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/BumpVersionFor#E164#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/BumpVersionFor#UsernameHash#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]greatest_version()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_e164_changed()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedPanic#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]as_obj()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IncorrectArrayLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#Jni#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadJniParameter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedJniResultType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#CallbackException#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[BridgeLayerError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::Member`]test_data()."
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#RATCHETED#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_invalid_private_key()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]initial_request()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_invalid_private_key()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/test/stream_decrypts()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/impl#[`CbcStreamDecryptor<C, S>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException]from_value()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#String#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException]from_value()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#Error#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]connect_and_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[BlindedExpiringProfileKeyCredentialWithSecretNonce]get_blinded_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo attest 0.1.0 svr2/lookup_groupid()." -> "rust-analyzer cargo attest 0.1.0 util/impl#[`SmallMap<K, V, N>`]get()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V1#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V2#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV2]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V3#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`][IntoParallelIterator]into_par_iter()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse_single_chunk()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ServiceConnectionInfo]description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType]from_host()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ServiceConnectionInfo]description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[ServiceConnectionInfo]description()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V6#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/BumpVersionFor#UsernameHash#" -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/BumpVersionFor#E164#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMediaInput#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnsupportedMediaInput#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]code()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Parse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]code()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[IoError][FfiError]code()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair][`TryFrom<PrivateKey>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_phc_string()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/verify_local_pin_hash()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_phc_string()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash_with_salt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]finalize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/impl#[`proto::BackupInfo`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotShowOnlyUnread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustIncludeIndividualChats#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotHaveSpecificIncludes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotExcludeChats#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustShowMuted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]all_folder_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustIncludeGroupChats#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#All#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/valid_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderInvalidName#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 keytrans/impl#[`net::chat::UnauthenticatedChatConnection`][UnauthenticatedChat]send_unauthenticated()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]send()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new_without_body()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new_without_body()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpRequest]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`SpecificServiceId<_>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]with_authenticated_message()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]with_authenticated_message()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]with_authenticated_message()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()." -> "rust-analyzer cargo usernames 0.1.0 username/validate_nickname()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()." -> "rust-analyzer cargo usernames 0.1.0 username/random_discriminators()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]format_parts()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain][Domain]G_a()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]with_claims()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]with_claims()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]with_claims()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PostQuantum#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]next_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Exactly#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#ReadResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[SendRequest]poll_send_and_flush()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#SendRequest#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]accept()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]accept()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_bad_version()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_bad_version()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 benches()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_failed_to_connect_to_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Io#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]from_djb_public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V1#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V2#"
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/lookup_result_iterates_in_the_right_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/test/validate_expected_order()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/real_jni_find_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/jni_name_from_binary_name()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/varint_read_with_empty_target_slice()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/varint_read_with_empty_target_slice()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/varint_read_with_empty_target_slice()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/assert_valid()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/varint_read_with_empty_target_slice()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`MessageAndLen<L, M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/varint_read_with_empty_target_slice()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/impl#[`MessageAndLen<L, M>`]into_reader()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Debug]fmt()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/logging()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/logging()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_remote_close_with_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_remote_close_with_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_remote_close_with_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_remote_close_with_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_remote_close_with_error()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#DeviceTransferIsPossibleButNotSkipped#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RecoveryVerificationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RegistrationRecoveryVerificationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RegistrationLock#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#DeviceTransferPossibleNotSkipped#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RegisterAccountError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RegistrationLock#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes()."
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/tests/test_vectors()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/tests/test_vectors()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/tests/test_vectors()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/to_error()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_Finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]finalize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_account_entropy_pool()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_account_entropy_pool()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_account_entropy_pool()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#NoBubbleColor#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]create_session()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetIdentity()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetIdentity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountResponse_GetIdentity()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_report()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Qe#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_report()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_returns_none_if_all_failed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/first_ok()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_returns_none_if_all_failed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/future()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point_single_elligator()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/test/stream_empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/impl#[`CbcStreamDecryptor<C, S>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_truncated()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_truncated()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Io#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_truncated()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationResponse]into_websocket_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_captcha()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/test/impl#[`ConnectOnlyOnce<testutil::FakeChatConnect>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session_and_make_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]resume_session()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_E164SearchKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[E164][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Ord]cmp()."
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#HmacMismatch#"
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#BadCiphertext#"
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidDecryptedDataStructure#"
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hkdf()."
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hmac()."
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#UsernameLinkDataTooShort#"
  "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[bool][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Bool#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[bool][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&str>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&str`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/group_member_added_inviter_table()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/group_member_added_inviter_table()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[GroupChatUpdate][`TryFrom<proto::group_change_chat_update::update::Update>`]try_from()."
  "rust-analyzer cargo device-transfer 0.1.0 test_generate_and_parse()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#KeySpecific#"
  "rust-analyzer cargo device-transfer 0.1.0 test_generate_and_parse()." -> "rust-analyzer cargo device-transfer 0.1.0 create_self_signed_cert()."
  "rust-analyzer cargo device-transfer 0.1.0 test_generate_and_parse()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#Pkcs8#"
  "rust-analyzer cargo device-transfer 0.1.0 test_generate_and_parse()." -> "rust-analyzer cargo device-transfer 0.1.0 create_rsa_private_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_aesgcmsiv()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_aesgcmsiv_vec1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_aesgcmsiv()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#MissingBody#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnexpectedData#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidJson#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnexpectedContentType#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]with_authenticated_message()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]with_authenticated_message()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]with_authenticated_message()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[BackupMeta]test_value()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]with_authenticated_message()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberBanned`]test_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ResolveMeta][SequentialKey]seq_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[usize][SequentialKey]seq_next()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer][Finalize]finalize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/calculate_checksum_for_immutable_buffer()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Debug#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Info#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Trace#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Error#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Warn#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit()." -> "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit()." -> "rust-analyzer cargo usernames 0.1.0 username/make_scalars()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit()." -> "rust-analyzer cargo usernames 0.1.0 username/validate_prefix()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]finish_connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_with_static_fallback()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#filter_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[`Env<'a>`]static_fallback()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[Protocol]connect_to_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[Protocol]connect_to_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingResumeSessionError#InvalidSessionId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#SessionNotFound#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]pop()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]pop()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_clear_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]clear_proxy()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256Ctr32_Process()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelEmpty#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorUnexpectedValue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorNameTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#RequestFailedWithErrorCode#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidNameCharacters#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#RequestFailedWithErrorCode#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/impl#[Error][`From<dns_message::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorFailedToParseResourceRecord#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler][Default]default()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]compute_tag()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]compute_tag()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[CallLink]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Future#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/timestamp_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Past#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#AttestationDataError#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_CreateAllowingEmptyEntropy()." -> "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_CreateAllowingEmptyEntropy()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedPingPong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/receives_incoming_messages()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/multiple()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]bad_started_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownCallStarter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]bad_started_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]no_started_call()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]bad_started_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::GroupCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]bad_started_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::IndividualCall`]test_data()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify()."
  "rust-analyzer cargo usernames 0.1.0 benches()." -> "rust-analyzer cargo usernames 0.1.0 bench_usernames()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#None#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupCredentialType#Messages#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]initial_request()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]initial_request()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]initial_request()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]initial_request()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#ConnectionEstablishment#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_private_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`[u8]`][Randomize]randomize()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbInfoVersion][`TryFrom<u16>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbInfoVersion][`TryFrom<u16>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V2#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMember]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberBanned]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingAdminApproval]from_proto_test_data()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][Display]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][Debug]fmt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidCodeHashError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidPublicKeyError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMHandshakeError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#TrustedCodeError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMCommunicationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[HsmEnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidState#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ExtractFromSerializedContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ExtractFromSerializedContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]body()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ExtractFromSerializedContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_ExtractFromSerializedContent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/array_prepend()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/right()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/right_step()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/right()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/move_within()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]collect_all()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/empty_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/empty_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Resendable#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Default#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Tuesday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Thursday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Sunday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Friday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Wednesday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidWeekday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Saturday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Monday#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredential_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]private_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_scalar_args()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]finalize_public_attrs()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]get_poksho_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8]`][PublicAttribute]hash_into()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo device-transfer 0.1.0 build_cert()." -> "rust-analyzer cargo device-transfer 0.1.0 build_self_signed_name()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_writer_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_flush()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Nascent#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Established#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Handshake#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_flush()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/NascentBuffer#NoInitialPayload#"
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]crl()." -> "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]from_crl()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]crl()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]crl()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/Cds2ClientState_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/Cds2ClientState_New()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/new_client()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`http::uri::InvalidUri`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`http::uri::InvalidUri`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/Fingerprint_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/Fingerprint_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResettingConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_FromBackupKeyAndBackupId()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_backup_key_and_backup_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send_bytes()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send_bytes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]write()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 support/BridgedStringMap_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap]with_capacity()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteReceiveError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#ServerSentInvalidUtf8#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][`AsyncRuntime<F>`]run_future()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]run_future_boxed()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<boring_signal::error::ErrorStack>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#Finished#" -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#Finished#" -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/PathPart#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/PathPart#Repeated#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#MapValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/PathPart#MapValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Repeated#"
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[Claims]from_custom_claims()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/test/log_safe_session_id()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/respects_should_field()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/respects_should_field()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/respects_should_field()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/respects_should_field()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingAdminApproval]from_proto_test_data()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingAdminApproval]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#TimedOut#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_count_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[CallLink][`TryFromWith<proto::CallLink, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidRootKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[CallLink][`TryFromWith<proto::CallLink, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidAdminKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[CallLink][`TryFromWith<proto::CallLink, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_New()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/attribute_comp()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/attribute_comp()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/attribute_comp()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`std::io::Error`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#String#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`std::io::Error`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#Error#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Initialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]connect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]connect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#WaitingForListener#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][MayHavePublicKey]id()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]prepare_non_attribute_point_args()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPublicKey]I()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]get_poksho_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[u32][`From<ContentHint>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[BlindedExpiringProfileKeyCredentialWithSecretNonce]get_blinded_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]version()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]version()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V2#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]version()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V2#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]version()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[Vec<u8>]>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[BytestringArray][`FromIterator<S>`]from_iter()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`][`From<RegistrationRequest<'s, R>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Request#request_path()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`][`From<RegistrationRequest<'s, R>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Request#headers()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#AAAA#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_aaaa_record()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#DohRequestBadStatus#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransport]send_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_a_record()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::Quote`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[`proto::Text`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`FutureResultReporter<T, E, U>`][ResultReporter]report_to()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CancellationError][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`FutureResultReporter<T, E, U>`][ResultReporter]report_to()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/describe_panic()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/extend_lifetime()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]provide_retry_after_seconds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`AsType<T, P>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`AsType<T, P>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/graceful_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_stream_pair()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[ConnectFakeChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/test/test_evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[FfiLogger][Log]log()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_list_of_strings()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`]into_box()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_list_of_strings()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_string()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidAdminKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[CallLink]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::CallLink`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallLinkError#InvalidRootKey#"
  "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_on_network_change()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_label_too_long()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_label_too_long()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_label_too_long()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelTooLong#"
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_has_unknown_fields_struct_impl()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][`From<Field>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`&mut P`][`RouteDelayPolicy<R>`]wants_recalculation()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/RouteDelayPolicy#wants_recalculation()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_IsValid()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentitySignedPreKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get_mut()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentitySignedPreKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#TransitCdnMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingMediaName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocator#Backup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::BackupLocator`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingDigest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#InvalidMediaName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/valid_backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/AttachmentLocatorError#MissingTransitCdnKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_invalid_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#InvalidHmac#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_invalid_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_from_raw_invalid_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<Ipv6Addr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<Ipv6Addr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]push()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]push()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_exceptions_and_convert_result()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_exceptions_and_convert_result()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedJniResultType#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_id_known_from_account_entropy()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_id_known_from_account_entropy()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_a_record()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorFailedToParseResourceRecord#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::MobileCoinTxoIdentification`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_recv()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#Connection#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_recv()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_recv()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMCommunicationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_recv()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<String>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupAttributeBlob`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupAttributeBlob`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]replace_locally_resolved()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/explicit_empty_tuple()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/explicit_empty_tuple()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()."
  "rust-analyzer cargo usernames 0.1.0 constants/test/generate_points()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo usernames 0.1.0 constants/test/generate_points()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]poll_ready()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[`GroupSendEndorsement<curve25519_dalek_signal::ristretto::CompressedRistretto>`]decompress()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[`GroupSendEndorsement<curve25519_dalek_signal::ristretto::CompressedRistretto>`]decompress()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<CompressedRistretto>`]decompress()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<&str>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&str`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::CallLink`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Self_`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DistributionListItem`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ReleaseNotes`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Group`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/standard_message()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#DelayForever#"
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TlsHandshake#"
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#Start#"
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#End#"
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-net 0.1.0 first_tls_hangs_then_fallback_succeeds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[u8]>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[FfiChatListenerStruct]make_listener()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`ConstPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/StickerPackError#InvalidKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::StickerPack`]test_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedMonitorResponse]from_untyped()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_header_auth_decorator()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]header()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_header_auth_decorator()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/basic_authorization()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 test/test_header_auth_decorator()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::CallLink`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/call_link()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/warnings_and_errors_only()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]ciphertext()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]chain_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]iteration()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]distribution_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]pre_key_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_New()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidKeySize#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<ValidateOnly>`]new_validator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/to_key_value()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/to_key_value()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<Handle<'a, V>>`][`OrUndefined<'a>`]or_undefined()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]dh()." -> "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Dh25519][Dh]pub_len()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<String>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/check_error()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#Jni#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/check_error()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/check_error()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#CallbackException#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/check_error()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#DeviceDeregistered#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_pceid_mismatch()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_pceid_mismatch()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/tcb_pceid_mismatch()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]verify()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/parse_lookup_response_entries()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/parse_lookup_response_entries()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[E164][FixedLengthSerializable]serialize_into()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][SearchKey]as_search_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[M][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Root#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[Timestamp][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`VariableTlsTimeoutConnector<A, B, Error>`][`Connector<super::SimpleRoute<TlsRouteFragment, T>, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]connect_inner_then_outer_with_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]on_network_change()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/DnsLookup#on_network_change()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#Deleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#List#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`From<Destination<R>>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_invalid_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_invalid_proxy()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_exceptions_and_convert_result()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`SwapPairStream<S>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`SwapPairStream<S>`]project()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::AdHocCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#NoAdHocRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidAdHocRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidTimestamp#"
  "rust-analyzer cargo attest 0.1.0 error/tests/d2()." -> "rust-analyzer cargo attest 0.1.0 error/tests/error()."
  "rust-analyzer cargo attest 0.1.0 error/tests/d2()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#Object#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#String#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#IntentionalPanic#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Outgoing#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/Event#Incoming#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[`CustomDnsResolver<R, T>`][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_body()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_body()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Isv#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]from_djb_public_key_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]from_djb_public_key_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]from_djb_public_key_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyLength#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#SessionNotFound#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateSelfRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateDistributionListId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateReleaseNotesRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::DistributionListItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateGroupMasterKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateCallLinkRootKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::CallLink`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_contact_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]update()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`AsyncArgTypeInfo<'storage>`]load_async_arg()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/init_logger()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger]new()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/init_logger()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/set_max_level_from_js_level()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/init_logger()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[u32][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]certificate()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]expiration()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServerCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_callback_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_callback_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_callback_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_callback_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#NoFrames#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]collect_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 read_all_frames()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]into_inner()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[SingleRouteThrottlingConnectionManager][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentArrayOfBorrowedJsBoxedBridgeHandles<T>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/extend_lifetime()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/binary_proto_to_json()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/binary_proto_to_json()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/binary_proto_to_json()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#EmptyArray#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/proof_to_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/Error#InvalidProof#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/generate_challenge()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/encode_to_curve_try_and_increment()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::OutgoingMessageDetails`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_notification_profile()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_sticker_pack()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_ad_hoc_call()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_folder()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]private_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPublicKey_DeserializeWithOffset()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPublicKey_DeserializeWithOffset()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Attestation#"
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#AttestationError#"
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Error][`From<AttestedConnectionError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha1#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha256#"
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[ProtocolError][`From<tungstenite::error::ProtocolError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Protocol#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]into_inner()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#Object#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]into_inner()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#String#"
  "rust-analyzer cargo attest 0.1.0 svr2/tests/attest_svr2_bad_config()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo attest 0.1.0 svr2/tests/attest_svr2_bad_config()." -> "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_constants()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_voice_message_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/unwrap_or_lookup_failed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]greatest_version()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/impl#[TestKt]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]into_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_and_search_search_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()."
  "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]absorb()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#RATCHETED#"
  "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]absorb()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#ABSORBING#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[Error][`From<VerifyHmacError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/VerifyHmacError#HmacMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[Error][`From<VerifyHmacError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/VerifyHmacError#Io#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[Error][`From<VerifyHmacError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#Parse#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ProtocolAddress_Name()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]attest_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[GetSession][Request]request_path()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]as_url_path_segment()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][`Connector<IpAddr, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_visit_unknown_fields_impl()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_has_unknown_fields_struct_impl()."
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_visit_unknown_fields_impl()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_has_unknown_fields_enum_impl()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[DeviceTransferError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#KeyDecodingFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[DeviceTransferError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut T`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/native_handle_cast_mut()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[ContactData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Registration#NotRegistered#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[ContactData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[ContactData]from_proto_test_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StandardMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StandardMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_GetSessionVersion()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_GetSessionVersion()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V2#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V3#"
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V1#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RequestVerificationCode()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_verification_code()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RequestVerificationCode()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/Error#InvalidCurvePoint#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]len()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]len()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]new()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidPublicKeyError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]new()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]new()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidCodeHashError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#ConnectionEstablishment#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[CiphertextMessage][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]inverse_of()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]from_scalars()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_get_session_request_as_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/impl#[PreKeysUsed][Default]default()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_impl()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFutureState<T>`]waiting_on()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Pending#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/CiphertextMessage_Type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/CiphertextMessage_Type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo][Default]default()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert][Clone]clone()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo][Default]default()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue_chain()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo][Default]default()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]self_issued()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<SequenceOf<'a, SgxExtension<'a>, 0, _>>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Sequence#"
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 util/read_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 util/strip_trailing_null_byte()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/sends_ping_after_remote_inactivity_then_time_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]id()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#Id#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]id()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#PublicKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`AsType<T, P>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`AsType<T, P>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/verify()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/commit()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tcp_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[`ProxyServer<S>`]proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tcp_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendToken]into_full_token()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]remove()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()."
  "rust-analyzer cargo zkgroup 0.9.0 test_endorsement()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPrivateKey_Generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]parse_as_ip_or_domain()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]parse_as_ip_or_domain()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::Email`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_get_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`[T]`][`RandomChunksIterator<T>`]random_chunks()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`RandomChunks<'_, T, R>`][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/produce_and_validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_duration_without_start()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::chat_item::OutgoingMessageDetails`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_duration_without_start()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_duration_without_start()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_duration_without_start()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_duration_without_start()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationNotStarted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_ordering()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]push()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_ordering()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]pop()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_ordering()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_ReadUnencrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_ReadUnencrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_ReadUnencrypted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_ReadUnencrypted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/left_step()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&mut dyn SyncInputStream`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&mut dyn SyncInputStream`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[`NodeSyncInputStream<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#Protocol#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][ToTokens]to_tokens()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 FieldType#Single#"
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][ToTokens]to_tokens()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 FieldType#Container#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#None#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/lookup_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[SingleRouteThrottlingConnectionManager][ConnectionManager]describe_for_logging()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/make_route_provider()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketConfig]ws2_config()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256Ctr32_New()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]from_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_picks_the_result_from_earliest_finished_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/first_ok()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/first_ok_picks_the_result_from_earliest_finished_future()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/future()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`][KyberPreKeyStore]get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_get_kyber_pre_key()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/Pin_VerifyLocalHash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/verify_local_pin_hash()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream]project()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/zkgroup_bincode_options()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidInputSize#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidKeySize#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#UnknownAlgorithm#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalCryptoError][FfiError]code()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]register_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]submit_chat_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]register_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]register_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`]register_account()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]register_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[CheckSvr2CredentialsErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CheckSvr2CredentialsErrorDiscriminants#CredentialsCouldNotBeParsed#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveThumbnailTransitEncryptionKey()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_thumbnail_transit_encryption_key_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#NoResolvedRoutes#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#SslHandshakeFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_resolved()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpConnectError#HttpHandshake#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpConnectError#Transport#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#Http2HandshakeFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]as_obj()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FfiBindingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintVersionMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMacKeyLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMCiphertextLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/to_java_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo usernames 0.1.0 username_hash()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 username_hash()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LongTextWithoutBody#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#StandardMessageIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/valid_standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_sorts_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Solid#"
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/version_byte_wrong()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/version_byte_wrong()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[FilenameOrContents][`From<clap_stdin::FileOrStdin>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 MaybeEncryptedBackupReader#EncryptedCompressed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 MaybeEncryptedBackupReader#PlaintextBinproto#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`MaybeEncryptedBackupReader<R>`]execute()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 async_main()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_fn_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Regular#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]project()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][`TryFrom<SearchValue<'_>>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][`TryFrom<SearchValue<'_>>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SearchValue<'_>`]payload()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][`TryFrom<SearchValue<'_>>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#WebSocket#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#Capacity#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[UnexpectedCloseError][`From<Option<CloseFrame<'_>>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#UnexpectedClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::direct_story_reply_message::TextReply`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest]into_client_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[It][CollectSerialized]collect_serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_size_zero()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][`From<url::Host<S>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][`From<url::Host<S>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_can_be_used_multiple_times()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_can_be_used_multiple_times()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Sender<T>`]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_can_be_used_multiple_times()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`]val()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#RequestMissingId#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#ReceivedTextMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[InFlightRequests]finish_send()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/IncomingEvent#ReceivedRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#ResponseToIncoming#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendIo#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessage#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessage#Request#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskSendError#StreamSendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskSendError#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#SentRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#ResponseMissingId#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#DataError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedPingPong#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#WebsocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`ConnectionImpl<I>`]handle_inner_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[InFlightRequests]record_send()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ContactMonitoring#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/leaf_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]check_search_consistency()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_update_value()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/verify()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/evaluate_vrf_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]update()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]into_data_update()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_hash_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/into_sorted_pairs()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]start_monitoring()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_full_tree_head()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]consume()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]insert()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/ranges_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[TextRange][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/ranges_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#Style#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/ranges_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][InputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Ready#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][InputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Past#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Zero#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampIssue#Future#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#RetryAfter42Seconds#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#WebSocketConnectionFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatConnectErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ParseFromServiceIdString()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ParseFromServiceIdString()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniResponse#Zkc#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_get_kyber_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_get_kyber_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_get_kyber_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRouteProvider<P>`][RouteProvider]routes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/socks_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#SessionNotFound#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SubmitVerificationError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/EncryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_connect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]connect()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]from_der()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]from_der()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/parse_extensions()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_from_json()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ConvertJsonError#EmptyArray#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/test_session_switchover_validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/test_session_switchover_validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/test_session_switchover_validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]from_der_data()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_message_backup::ReadError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#BackupValidation#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[&T]`][`AsyncArgTypeInfo<'storage>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentArrayOfBorrowedJsBoxedBridgeHandles<T>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[&T]`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_request_verification_as_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/VerificationTransport#Sms#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_request_verification_as_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]message()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_with_no_answers_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_with_no_answers_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_with_no_answers_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_with_no_answers_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 extract_retry_later()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/error/impl#[ConnectError][`From<WebSocketServiceConnectError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[DefaultConnectorFactory][`ConnectorFactory<R>`]make()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[DefaultConnectorFactory][`ConnectorFactory<R>`]make()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[DefaultConnectorFactory][`ConnectorFactory<R>`]make()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[DefaultConnectorFactory][`ConnectorFactory<R>`]make()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_too_short()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/impl#[`proto::ViewOnceMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/test/view_once_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[Identification]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::Transaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/valid_transaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]to_be_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#RATCHETED#"
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#ABSORBING#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationResponse]into_websocket_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]create_session()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/test/impl#[`ConnectOnlyOnce<testutil::FakeChatConnect>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_state()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 custom_dns_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 custom_dns_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net 0.1.0 custom_dns_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 custom_dns_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 custom_dns_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessage#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#ReceivedTextMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#RequestMissingId#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#ResponseMissingId#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtocolError#DataError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[ChatMessage][`TryFrom<TextOrBinary>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessage#Request#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]run_future_boxed()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[CancellationId][`From<u64>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]run_future_boxed()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedJniResultType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#CallbackException#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/describe_panic()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#Jni#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedPanic#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IncorrectArrayLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadJniParameter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[BridgeLayerError][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`AsyncArgTypeInfo<'a>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[TextRange][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#Style#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[TextRange][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#MentionAci#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupLevel][`TryFrom<u64>`]try_from()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupLevel][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupLevel][`TryFrom<u64>`]try_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/accepts_ios_system_story_aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/accepts_ios_system_story_aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/accepts_ios_system_story_aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/accepts_ios_system_story_aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChatBridge]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks4()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks4()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks4()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks4()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_socks4()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Socks#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/incremental_macs_are_valid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/impl#[`[T]`][`RandomChunksIterator<T>`]random_chunks()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UnexpectedPanic][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InternalError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatConnectError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/generate_code_to_load_input()."
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#UpToDate#"
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." -> "rust-analyzer cargo attest 0.1.0 dcap/TcbStanding#UpToDate#"
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." -> "rust-analyzer cargo attest 0.1.0 dcap/TcbStanding#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]lookup()." -> "rust-analyzer cargo attest 0.1.0 dcap/impl#[TcbStanding]in_tcb_level()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialPresentationProofV1]from_invalid_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo][Default]default()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberLeftUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RegisterAccountErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RegisterAccountErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#DeviceTransferIsPossibleButNotSkipped#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RegisterAccountErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#RegistrationRecoveryVerificationFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RegisterAccountErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountErrorDiscriminants#RegistrationLock#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`][ResultReporter]report_to()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/box_primitive_if_needed()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`][ResultReporter]report_to()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#UnexpectedPanic#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`][ResultReporter]report_to()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`][ResultReporter]report_to()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert_to_exception()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Duration][`ValidateFrom<u64>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/terminates_gracefully_after_outgoing_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/terminates_gracefully_after_outgoing_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/terminates_gracefully_after_outgoing_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/terminates_gracefully_after_outgoing_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/terminates_gracefully_after_outgoing_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][Default]default()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#String#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#from_storage()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." -> "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList]crl()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]root()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." -> "rust-analyzer cargo attest 0.1.0 dcap/from_trusted()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()." -> "rust-analyzer cargo attest 0.1.0 dcap/root_trust_store()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`FakeInnerConnection<R>`][InnerConnection]handle_next_event()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/impl#[`FakeInnerConnection<R>`]project()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 convert/TESTING_FutureFailure()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SessionSwitchoverChatUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_e164()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr_long_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]from_key()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr_long_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Initialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Initialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]validating()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMember]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingAdminApproval]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberBanned]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_member_lists_sorted_when_serializing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][Clone]clone()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key_bytes()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, BlockStream<N, R>>`]from_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, BlockStream<N, R>>`]from_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, S>`]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]from_key()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidKeySize#"
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]from_key()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_failure_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_failure_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/set_up_platform_verifier()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/test/verify_certificate_failure_via_rustls()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Alerts#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Stopped#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Error#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#Error#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Responder]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][`TryFrom<ws2::ListenerEvent>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][`Extend<(K, V)>`]extend()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][`Extend<T>`]extend()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_reset_by_cutoff()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`ConnectionOutcomes<R>`]record_outcome()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_reset_by_cutoff()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_reset_by_cutoff()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]reset()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_reset_by_cutoff()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][`From<&IpAddr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V6#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][`From<&IpAddr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V4#"
  "rust-analyzer cargo attest 0.1.0 svr2/tests/attest_svr2()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo attest 0.1.0 svr2/tests/attest_svr2()." -> "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_constants()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_zero_is_a_valid_prekey_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/abort_on_panic()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/describe_panic()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_encrypt_with_bad_registration_id()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[ProtocolKind][`From<&Protocol>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#SocksProxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#DnsError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Delegated#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[Protocol]connect_to_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tls()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/mistakenly_microseconds()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/non_hermetic_current_time()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Claims]from_custom_claims()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]with_claims()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/valid_text()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[`proto::Text`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/valid_text()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#MentionInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/valid_text()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/valid_text()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#NoAssociatedValueForBodyRange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/valid_text()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#EmptyBody#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/submit_request_impl()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/submit_request_impl()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]submit_chat_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/try_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_ref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_ref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha1#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha256#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha512#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[ZkGroupDeserializationFailure][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidType#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi_lookup()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timeout()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi_lookup()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi_lookup()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Verify()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]checked_add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupLevel>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupCredentialType>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_revealed_attribute()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupSequenceOfRequestsAndCancelsUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetBaseKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]base_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream][InputStream]skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_skip()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyPublicKey][`From<attributes::PublicKey<D>>`]from()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/Domain#G_a()."
  "rust-analyzer cargo zkcredential 0.1.0 impl#[`PrintAsHex<&curve25519_dalek::ristretto::CompressedRistretto>`][Debug]fmt()." -> "rust-analyzer cargo zkcredential 0.1.0 impl#[`PrintAsHex<&[u8]>`][Debug]fmt()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetStructurallyValidV1PresentationBytes()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetStructurallyValidV1PresentationBytes()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_alice()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/test_attestation_metrics()." -> "rust-analyzer cargo attest 0.1.0 dcap/attestation_metrics()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey][`From<PrivateKeyData>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`From<PublicKeyData>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]private_key_bytes()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, C>`]ws2_config()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketConfig]ws2_config()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidAttestationData#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseHandshakeError#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/hmac_sha256()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`MacReader<R, CoreWrapper<HmacCore<CoreWrapper<CtVariableCoreWrapper<Sha256VarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, OidSha256>>>>>`]new_sha256()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/hmac_sha256()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]finalize()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/left()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/move_within()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/left()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/left_step()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPni#Zkc#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[SubmitVerificationErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#InvalidSessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[SubmitVerificationErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[SubmitVerificationErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#SessionNotFound#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[SubmitVerificationErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationErrorDiscriminants#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_lookup_response_entry_list()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`]into_box()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/AuthenticatedChatConnection_preconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]preconnect()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]get_name()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]get_name()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]get_name()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::chat::Response`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[ClockTime][`TryFrom<u32>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidClockTime#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/scopeguard_ident_for()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/storage_ident_for()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_agreements()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_agreements()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_random_agreements()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`AsyncArgTypeInfo<'a>`]load_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]make_listener()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator][`From<T>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]header()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/new_client()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/new_client()." -> "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]collect_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_unsupported_key_type()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_unsupported_key_type()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_support_bytes()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_works()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/impl#[ExampleDomain][Domain]G_a()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#EmptyUrl#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/LinkPreviewError#Image#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#Panic#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#SignaledToEnd#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#MaybeStillRunning#"
  "rust-analyzer cargo usernames 0.1.0 username/make_scalars()." -> "rust-analyzer cargo usernames 0.1.0 username/discriminator_scalar()."
  "rust-analyzer cargo usernames 0.1.0 username/make_scalars()." -> "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()."
  "rust-analyzer cargo usernames 0.1.0 username/make_scalars()." -> "rust-analyzer cargo usernames 0.1.0 username/username_sha_scalar()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_GetProfileKeyVersion()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_profile_key_version()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_GetProfileKeyVersion()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/requires_destination()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/requires_destination()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#MissingDestination#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/requires_destination()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/requires_destination()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/move_within()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/log2()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/network_change_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/try_connection()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/network_change_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#InterfaceChanged#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#InvalidConnectionState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]complete()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#Connection#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#ConnectionEstablishment#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/uniqueness()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/test_rng()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/uniqueness()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool]generate()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnector][`Connector<UdpRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnector][`Connector<UdpRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnector][`Connector<UdpRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#UdpLookup#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_test()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/round_trip_service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]invalid_proxy_configuration()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]invalid_proxy_configuration()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]invalid_proxy_configuration()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join_impl()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]get_name()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/final_result_should_be_equal_to_non_incremental_hmac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_Finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]finalize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][`Lookup<CustomColorId, <M as ReferencedTypes>::CustomColorReference>`]lookup()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`Lookup<CustomColorId, <M as ReferencedTypes>::CustomColorReference>`]lookup()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[MessageBackupValidationOutcome][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[libsignal_message_backup::FoundUnknownField]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/impl#[`SomeOrPending<F>`][Future]poll()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/impl#[`SomeOrPending<F>`]project()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_request_context/impl#[ProfileKeyCredentialRequestContext]get_request()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_request_context/impl#[ProfileKeyCredentialRequestContext]get_request()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#UsernameHash#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#E164#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/username_hash()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_does_not_return_requested_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_search_response()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]decrypt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[ConnectState]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingLookupRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_invalid_token_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat_with_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/non_nil_uuid()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]from_be_bytes()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ConnectionManager_newLocalOverride()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ConnectionManager_newLocalOverride()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net_env/localhost_test_env_with_ports()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ConnectionManager_newLocalOverride()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][AsChatValue]as_chat_value()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/StickerError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[`StickerPack<M>`][`TryFrom<proto::StickerPack>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/StickerError#PackError#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_sticker_pack()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/StickerError#DuplicateId#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_New()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_New()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]from_backup_info_frame()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_New()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[ReadError]with_error_only()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]to_be_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]range_for_recipient_key_material()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_within_full_message()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Failed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#UnknownRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryFailureReason#Network#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#SendStatusMissing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Pending#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Read#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#InvalidRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Sent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Skipped#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryFailureReason#Unknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Delivered#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Viewed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<R>`][`TryFromWith<proto::SendStatus, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryFailureReason#IdentityKeyMismatch#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_decrease_over_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_decrease_over_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`ConnectionOutcomes<R>`]record_outcome()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcomes_delays_decrease_over_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_skip()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_skip()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_skip()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException]from_value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Unknown#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_u32()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Redeemed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeError#FailedStateWithNonEmptyPresentation#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeError#InvalidReceiptCredentialPresentation#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Valid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_valid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]root()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_valid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_valid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_valid_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]set_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Store][ReferencedTypes]is_same_reference()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData]is_same_reference()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]header()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#Headers#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_only_returns_one_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_only_returns_one_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_only_returns_one_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_only_returns_one_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_only_returns_one_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_invalid()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164][FromStr]from_str()."
  "rust-analyzer cargo libsignal-core 0.1.0 e164/test/round_trip_through_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/test/gen_e164()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_field()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#EnumValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_field()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_field()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/attach_and_log_on_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedSearchResponse]from_untyped()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]encrypt_uid_struct()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/parse_extensions()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]with_context()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/parse_extensions()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/InvalidRequestError#InvalidHeader#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#InvalidRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#Capacity#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`super::SendError`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_save_identity()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_save_identity()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_save_identity()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign()." -> "rust-analyzer cargo poksho 0.7.0 sign/sign()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_impl()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]get_name()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][AsyncRuntimeBase]cancel()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo usernames 0.1.0 username_links/test/reuse_entropy()." -> "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/reuse_entropy()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[TextOrBinary]try_into_binary()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[TextOrBinary]try_into_binary()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#TextFrame#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[TextOrBinary]try_into_binary()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[TextOrBinary]try_into_binary()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[&T]`][`AsyncArgTypeInfo<'storage>`]load_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentArrayOfBorrowedJsBoxedBridgeHandles<T>`]value_refs()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRouteProvider<P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig][AsReplacer]as_replacer()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker][Wake]wake_by_ref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]poll_ready()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_redemption_time()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]redemption_time()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#"
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]check_auth_credential_redemption_time()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_ratcheting_session_as_bob()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ServiceId_ServiceIdBinary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Consumed#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 result/JsPromiseResultConstructor#make()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Pending#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Settled#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_object()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_unknown_fields()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_unknown_fields()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_unknown_fields()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_unknown_fields()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_unknown_fields()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_underflow()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/deserialize_underflow()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'_>`][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][Expireable]valid_at()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_update_value()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#ValueTooLong#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`MacReader<R, CoreWrapper<HmacCore<CoreWrapper<CtVariableCoreWrapper<Sha256VarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, OidSha256>>>>>`]new_sha256()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/hmac_sha256()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#TooShort#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_save_signed_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<u32>`][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`SimpleArgTypeInfo<'_>`]convert_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addPreviousE164()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[LookupRequest]lock()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`SanitizerError<ParseError>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`SanitizerError<ParseError>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`SanitizerError<ParseError>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`SanitizerError<ParseError>`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Parse#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering_consistency()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering_consistency()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering_consistency()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering_consistency()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/ordering_consistency()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][Ord]cmp()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#CallNotFromContact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#SessionSwitchover#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#IndividualCall#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#SessionSwitchoverFromReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ThreadMerge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#MessageRequestAccepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityDefault#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#UnsupportedProtocolMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ExpirationTimerChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DonationRequestNotFromReleaseNotesRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_contact_with_aci()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReleaseChannelDonationRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#JoinedSignal#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Blocked#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotFromSelf#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#Simple#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotFromAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationTimerChangeNotFromContact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupCall#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ProfileChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#LearnedProfileUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupUpdateNotFromContact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentsActivated#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChangeNumber#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#EndSession#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentActivationRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReportedSpam#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ThreadMergeNotFromAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LearnedProfileUpdateNotFromContact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Unblocked#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotFromContact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChatSessionRefresh#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityVerified#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_release_notes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ProfileChangeNotFromContact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#BadDecrypt#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_valid_sender_account()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_variable_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslFailedHandshake#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_variable_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_variable_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_log_tag()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_variable_timeout_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]connect_inner_then_outer_with_timeout()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyType#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_flush()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]rx_is_closed()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#NK#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]as_waker()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_shutdown()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/test/send_starts_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateAllChatFolder#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`]check_for_duplicate_recipients()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#All#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingAccountData#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingAllChatFolder#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`ConnectError<E>`][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`ConnectError<E>`][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[`ConnectError<E>`][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#NoResolvedRoutes#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_GenerateDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_alerts()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_alerts()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/attach_and_log_on_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_alerts()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]initial_request()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]initial_request()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]initial_request()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]initial_request()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#ConnectionEstablishment#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_scalar_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_scalar_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::AttachmentLocator`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::AttachmentLocator`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_pni_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]pni_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_pni_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/leaf_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate_proof()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_identitykeypair_deserialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]provide_retry_after_seconds()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute_without_verified_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][`From<attributes::KeyPair<D>>`]from()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute_without_verified_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair]without_public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute_without_verified_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/cert_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyLength#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveMediaEncryptionKey()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_media_encryption_key_data()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/tests/access_key_kat()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]create()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/tests/access_key_kat()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]derive_access_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateAllChatFolder#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]all_folder_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#DnsError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslFailedHandshake#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ClientAbort#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#CertError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[`WebSocketProvider<P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/impl#[`std::io::Error`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/SendError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/impl#[`std::io::Error`][`From<SendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/SendError#Noise#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#ConnectionLost#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#Unknown#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_signer()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/cert_chain()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_sig_bad_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Qe#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_round_trip()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_ct_is_zero()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_zero()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/can_verify_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/can_verify_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/can_verify_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/can_verify_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[SlimSearchRequest]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LongTextWithoutBody#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/likely_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LongText#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#StandardMessageIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/impl#[`StandardMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/round_trip()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/round_trip()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/round_trip()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/test/impl#[`WithLeadingByte<T>`]test_value()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]latest_log_position()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_username_hash()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatMonitorRequest]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#RetryAt#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_respect_retry_after()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[FailingSingle][Clone]clone()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_scalar_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_scalar_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_scalar_args()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]private_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#ConnectionInvalidated#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupCredentialType#Messages#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/Auth#Unauthenticated#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/TargetAddressType#IpTarget#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/TargetAddressType#HostnameTarget#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveLocally#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/ResolveHostname#ResolveRemotely#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/Auth#Authenticated#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[`log::Level`][`From<JavaLogLevel>`]from()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Verbose#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Warn#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Debug#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Info#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Error#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Assert#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[i32][`From<JavaLogLevel>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo poksho 0.7.0 sign/sign()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SearchValue<'a>`][`TryFrom<&VerifiedSearchResult>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`EndpointConnection<MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`EndpointConnection<MultiRouteConnectionManager>`]new_multi()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/expiring_profile_key_credential/impl#[ExpiringProfileKeyCredential]aci()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_from_json()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 is_valid_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_proto()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Serialized<T>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_failed_decrypt()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_failed_decrypt()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request_to_connected_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/SendRequestError#ConnectionLost#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberJoinedByLinkUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::BackupLocator`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[AttachmentLocator][`TryFromWith<proto::file_pointer::Locator, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/backup_locator()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]poll_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/test/test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]root_crl()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]crl()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`LoggingConnector<C>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SubmitVerificationCode()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_verification_code()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[UpdateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[UpdateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[UpdateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[UpdateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#Rejected#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_search_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/username_hash()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#E164#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#UsernameHash#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_returns_data_not_requested()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_if_transport_returns_third_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[VerificationTransport][`TryFrom<String>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[VerificationTransport][FromStr]from_str()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_connect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[UnauthenticatedChatConnection]connect()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/exact_block_stream_ragged_block()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, S>`]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_transport_never_sends_results()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_transport_never_sends_results()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_transport_never_sends_results()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_transport_never_sends_results()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]create()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_request_context/impl#[ProfileKeyCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ExpiringProfileKeyCredentialPresentation]get_expiration_time()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_bytes()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`zkgroup::Timestamp`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/can_convert_js_number_to_int()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`zkgroup::Timestamp`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]new_from_seed()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sibling()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_code_to_load_input()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/add_user_agent_header()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, MultiRouteConnectionManager>`]new_multi()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_message_key_limits()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[ResumeSessionErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionErrorDiscriminants#SessionNotFound#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[ResumeSessionErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionErrorDiscriminants#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]describe()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Verify()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_without_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_without_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_without_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_without_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]for_oneshot()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&T`][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, C>`]ws2_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, SingleRouteThrottlingConnectionManager>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_rejected_with_http_429_too_many_requests()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyAuth][AsHttpHeader]header_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/basic_authorization()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/write_with_full_transport_send_queue()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/write_with_full_transport_send_queue()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]was_woken()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/write_with_full_transport_send_queue()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/write_with_full_transport_send_queue()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_handshaken_pair()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]alice_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`libsignal_message_backup::ReadError`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`libsignal_message_backup::ReadError`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`libsignal_message_backup::ReadError`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`][Default]default()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_get_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::cds2::Cds2Metrics`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_object()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::cds2::Cds2Metrics`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::cds2::Cds2Metrics`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::cds2::Cds2Metrics`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::cds2::Cds2Metrics`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_other_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]crl()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_other_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_other_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_other_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/serial_number()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_other_revoked()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/kyber768/impl#[Parameters][Parameters]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<RetryLater>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_fingerprints()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRoute<R>`][`ReplaceFragment<Self>`]replace()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_deleted_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, FullRecipientData>`]lookup_pair()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ConnectionOutcomeParams]compute_delay()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#Unexpected#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawned_task_body()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/FatalConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V3#"
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V1#"
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/AnyProfileKeyCredentialPresentation#V2#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scrambler_smoke_test()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scrambler_smoke_test()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup][`From<CompletedBackup<Store>>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scrambler_smoke_test()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 write_expected_output()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scrambler_smoke_test()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scrambler_smoke_test()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route_after_timed_out_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route_after_timed_out_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route_after_timed_out_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route_after_timed_out_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route_after_timed_out_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/test/classify_errors()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]from_websocket_error()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/test/classify_errors()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/test/classify_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/test/classify_errors()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidJson#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#MissingBody#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnexpectedData#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 extract_retry_later()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#UnexpectedContentType#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/ResponseError#InvalidRequest#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetGroupIdOrEmpty()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<Store>`]new_store()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<u8>`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#Normal#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#GiftBadge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteType#ViewOnce#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[QuotedAttachment][`TryFromWith<proto::quote::QuotedAttachment, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AuthorHasNoAciOrE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/likely_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#TypeUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#EmptyQuotedMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#AuthorNotFound#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/QuoteError#InvalidAuthor#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#Message#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][`From<tungstenite::Error>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#SendKeepAlive#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelIdleTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketClientWriter<S, E>`]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/CancellationReason#RemoteClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#IdleTimeout#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/Event#StopService#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/run_and_update_status()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::chat::Response`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::chat::Response`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_TakeAuthenticatedChat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]into_authenticated()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_repeat_bundle_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/single_resolved_route_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/single_resolved_route_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/single_resolved_route_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`Schedule<S, R, SP>`]as_stream()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/single_resolved_route_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[LookupRequest]lock()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError][`From<CurveError>`]from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/CurveError#BadKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_qe_id_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_root()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_qe_id_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_qe_id_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_qe_id_signer()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addAciAndAccessKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[LookupRequest]lock()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addAciAndAccessKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_all_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_all_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_all_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_all_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_all_in_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<Recipient>`][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reactions_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`SimpleArgTypeInfo<'_>`]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[UnexpectedPanic][Debug]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/describe_panic()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_get_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberAddedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`From<PublicKey>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_identity_key_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]is_using_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]proxy()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]clear_unacknowledged_pre_key_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]body()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]message_version()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][ConstantTimeEq]ct_eq()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][ConstantTimeEq]ct_eq()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#AAAA#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]send_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport][DnsTransport]send_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransport]next_dns_query_result1()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/box_primitive_if_needed()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[DestinationKind][`From<ChatRecipientKind>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_valid_sender_account()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_valid_sender_account()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_valid_sender_account()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#AuthorNotFound#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#AuthorHasNoAciOrE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#InvalidAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<R>`][`TryFromWith<proto::Reaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]compute_tag()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]finalize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<TlsHandshakeTimeout>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslFailedHandshake#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatConnection_TakeUnauthenticatedChat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]into_unauthenticated()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v4()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 extract_retry_later()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#AttestationError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#WebSocket#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#WebSocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Http#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<crate::svr::Error>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#WebSocketConnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[FailingSingle][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_should_short_circuit_on_fatal_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/test_lossless_round_trip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net 0.1.0 get_enclave_secret()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[ConnectState]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net 0.1.0 init_logger()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]from_uid_and_secret()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 can_connect_to_cdsi_staging()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_ordering()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]pop()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_ordering()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]push()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_ordering()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[`WebSocketProvider<P>`][RouteProvider]routes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/websocket_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http2#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]test_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChatSessionRefresh#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReleaseChannelDonationRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ThreadMerge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#IndividualCall#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#SessionSwitchoverNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ProfileChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DonationRequestNotInReleaseNotesChat#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityDefault#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentsActivated#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#LearnedProfileUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupUpdateNotInGroupThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityVerified#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IndividualCallNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#BadDecrypt#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupCall#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UnexpectedUpdateInReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentActivationRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Blocked#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_individual()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupCallNotInGroupThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReportedSpam#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#Simple#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Unblocked#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#SessionSwitchover#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#UnsupportedProtocolMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#MessageRequestAccepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ThreadMergeNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#EndSession#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ExpirationTimerChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#JoinedSignal#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChangeNumber#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationTimerChangeNotInContactThread#"
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]combine()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]remove()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]combine_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SessionNotFound#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[VerificationCodeNotDeliverable]from_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RequestVerificationCodeError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_large_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`UnvalidatedHmacReader<R>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`TcbInfoAndSignature<'_>`]into_tcb_info()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#Version#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/validate_offsets()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#CrlPckCert#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#CreationDatetime#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/pem_chain_for_field()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#TcbIssuerChain#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#QeIdIssuerChain#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/data_for_field()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#PckCrlIssuerChain#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#QeIdInfo#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[`QuotingEnclaveIdentityAndSignature<'_>`]into_enclave_identity()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 util/strip_trailing_null_byte()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/string_for_field()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#CrlPckProcCa#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/SgxEndorsementField#TcbInfo#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/der_crl_for_field()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()."
  "rust-analyzer cargo attest 0.1.0 util/test/test_strip_trailing_null_byte()." -> "rust-analyzer cargo attest 0.1.0 util/strip_trailing_null_byte()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/save_class_loader()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/save_class_loader()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingCreateSessionError#InvalidSessionId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/impl#[`HashMap<&str, LookupResult>`][Resolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RetryLater>`][`From<RetryLater>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_flag_value_used_from_the_time_of_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_flag_value_used_from_the_time_of_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_flag_value_used_from_the_time_of_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_flag_value_used_from_the_time_of_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_flag_value_used_from_the_time_of_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyProvider#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyProvider#Proxy#"
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]decrypt()."
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#"
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]compute_tag()."
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()."
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]verify_tag()."
  "rust-analyzer cargo signal-crypto 0.1.0 test_kat()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredAccountData][`From<AccountData>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredMonitoringData][`From<MonitoringData>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/individual_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::IndividualCall`]test_data()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]iter()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]create()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_GetBackupId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]backup_id()."
  "rust-analyzer cargo zkcredential 0.1.0 impl#[InverseDomain][Domain]G_a()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_default_generator_points()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::MessageAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::MessageAttachment`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingLookupRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_initial_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_clock_skew()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_clock_skew()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_clock_skew()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/valid_start()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_clock_skew()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/mrenclave_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#Deleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#List#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/distribution_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo signal-media 0.1.0 sanitize/error/impl#[`SanitizerError<E>`][`From<mediasan_common::Error<E>>`]from()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Io#"
  "rust-analyzer cargo signal-media 0.1.0 sanitize/error/impl#[`SanitizerError<E>`][`From<mediasan_common::Error<E>>`]from()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Parse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#Panic#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#ServerIdleTooLong#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#ReceiveFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#SendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TaskErrorState>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TcpConnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#TcpThroughProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TlsHandshake#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#All#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]all_folder_data()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[Vec<u8>]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/make_array()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_HasUsableSenderChain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]with_authenticated_message()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[UpdateSessionErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionErrorDiscriminants#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[UpdateSessionErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionErrorDiscriminants#Rejected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`ChannelOnItsOriginalThread<'_>`][`AsyncRuntime<F>`]run_future()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`ChannelOnItsOriginalThread<'_>`][`AsyncRuntime<F>`]run_future()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]start_future()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_get_session()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_get_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_get_session()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_get_session()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyAllWithNonemptyMembers#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#CannotDeleteMyStory#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyAllExceptWithEmptyMembers#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyInvalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#List#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberDuplicate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#AllExcept#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberHasNoServiceIds#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#All#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#Deleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidDistributionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListItemMissing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#OnlyWith#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`DistributionListItem<R>`][`TryFromWith<proto::DistributionListItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/unordered_list/impl#[`UnorderedList<T>`]is_empty()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]with_authenticated_message()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair][Serialize]serialize()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey][Serialize]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]generate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn_body()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/extract_arg_names_and_types()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_io_body()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_fn()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/result_type()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest()." -> "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Responder]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[`mpsc::UnboundedSender<ListenerEvent>`][IntoEventListener]into_event_listener()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_error_if_server_disconnected_before_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_unordered()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_unordered()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_unordered()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/root_prop()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/start_and_n()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/root_prop()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolvedRoute]immediate_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolvedRoute]immediate_target()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#NetworkProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[EnclaveError][FfiError]code()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#CdsiInvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#IoError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::cdsi::LookupError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PlaintextContent_FromDecryptionErrorMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_during_task_panic_doesnt_abort()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_during_task_panic_doesnt_abort()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/OutcomeOrPanic#IntentionalPanic#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_during_task_panic_doesnt_abort()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/FinishError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_during_task_panic_doesnt_abort()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::Sticker`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]hostname()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Cache#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/runs_resolutions_in_parallel()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]log()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger]log_impl()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]log()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]enabled()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiKyberPreKeyStoreStruct`][KyberPreKeyStore]save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[`Either<L, R>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[`super::StatelessProxied`][`Connector<crate::route::SimpleRoute<HttpProxyRouteFragment<IpAddr>, either::Either<crate::route::SimpleRoute<crate::route::TlsRouteFragment, crate::route::TcpRoute<IpAddr>>, crate::route::TcpRoute<IpAddr>>>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/anonymous_server_handshake()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_DeriveBackupKey()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/FilenameOrContents#Filename#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/FilenameOrContents#Contents#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/AsyncReaderFactory#Cursor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][`From<&FilenameOrContents>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/AsyncReaderFactory#File#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][Display]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#TcpThroughProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][Display]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][Display]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()."
  "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()."
  "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()."
  "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_push_challenge()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_push_challenge()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Default]default()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_local_registration_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_domain_fronting()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[PendingChatConnection]connection_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketStream<S>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#IncludedMemberDuplicate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#UnknownType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberDuplicate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MemberIsBothIncludedAndExcluded#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#ExcludedMemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`][`TryFromWith<proto::ChatFolder, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#Custom#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_Finalize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[ReadError]with_error_only()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_Finalize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]finalize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicMac_New()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/duplicate_non_contact_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<String>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&str>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/last_is_all_padding()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha1#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha256#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`CustomColorMap<M>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[CustomChatColor]from_proto_test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_one_time_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_one_time_pre_key()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#AttachedToJVM#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/serialize_acis_and_access_keys()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/serialize_acis_and_access_keys()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[It][CollectSerialized]collect_serialized()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/result_returns()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/result_returns()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PrivateKey][KeySerde]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#Unexpected#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#InvalidInput#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/full_subtrees()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]insert()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#MalformedProof#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/consistency_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#ProofMismatch#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_pre_key_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_unacknowledged_kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]set_their_one_time_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`SpecificServiceId<_>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`SpecificServiceId<_>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 media/WebpSanitizer_Sanitize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`SyncInput<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/bridge_io_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 jni/generate_code_to_load_input()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameLinkError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InputDataTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameLinkError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#"
  "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_mismatching_versions()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_ct_is_lt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_lt()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/tests/round_trip_key_pair()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnectorFactory][`ConnectorFactory<UdpRoute<IpAddr>>`]make()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_udp/impl#[UdpTransportConnector][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#SendQueueFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#AlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#WriteBufferFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#Capacity#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo usernames 0.1.0 username/validate_nickname()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]validate()."
  "rust-analyzer cargo usernames 0.1.0 username/validate_nickname()." -> "rust-analyzer cargo usernames 0.1.0 username/char_to_byte()."
  "rust-analyzer cargo usernames 0.1.0 username/validate_nickname()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_nickname()." -> "rust-analyzer cargo usernames 0.1.0 username/validate_prefix()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`KeyMaterial<T>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyKind#key_length()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingCreateSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingCreateSessionError#RetryAfter42Seconds#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_CreateSessionErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmEncryption_Update()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#AuthorNotFound#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_author()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#OutgoingMessageFrom#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IncomingMessageFromSelf#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IncomingMessageFromContactWithoutAciOrE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Standard#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#GiftBadge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/InvalidExpiration#TooShort#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UpdateMessageShouldBeDirectionless#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[ChatItemMessageDiscriminants][`From<&ChatItemMessage<M>>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NoDirection#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NonStandardMessageHasRevisions#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedDirection#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationNotStarted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[DirectionDiscriminants][`From<&Direction<Recipient>>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedMessageType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Delivered#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Update#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Incoming#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Skipped#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MissingItem#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectionlessMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Voice#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/InvalidExpiration#TooSoon#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#RemoteDeleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/likely_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Sent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Outgoing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Failed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Viewed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#PaymentNotification#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Sticker#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#DirectStoryReply#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#ViewOnce#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionContainsRevisions#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Read#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Directionless#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#DeviceTransfer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Pending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_no_send_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_writer()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]wake_if_some()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_writer()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner]with_lock()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ChatServiceInactive#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InternalError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#NetworkProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::SendError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalFfiError][`From<T>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_FromParts()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_parts()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/schedule_respects_order_of_routes_in_groups()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`Schedule<S, R, SP>`]as_stream()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/schedule_respects_order_of_routes_in_groups()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#UnknownMessageType#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#ResponseHasRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#MissingPayload#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#InvalidProtobuf#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#RequestHasResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatProtoDataError#InvalidMessageType#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/outcome_record_for_testing()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/localhost_https_server_with_fake_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_e2e_test()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Secret>`][KeySerde]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Handshake#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/NascentBuffer#NoInitialPayload#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_reader()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Established#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_writer_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Nascent#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_write()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::account_data::AccountSettings`]test_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]start_send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`]project()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_censorship_circumvention_enabled()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[UnauthenticatedChatConnection]connect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#WaitingForListener#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[UnauthenticatedChatConnection]connect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<UpdateSessionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#Rejected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<UpdateSessionError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<UpdateSessionError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RequestRejected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<UpdateSessionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#InvalidSessionId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_CompleteHandshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]complete_handshake()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<InvalidState>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidToken#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/calculate_checksum_for_immutable_buffer()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_serialize_identity_key_pair()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]key_type()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[`Option<T>`][OptionOfTryFromExtensionValue]parse_and_save()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey][`From<[u8; PRIVATE_KEY_LENGTH]>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_proxy()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GenerateDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_GenerateDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo attest 0.1.0 cds2/extract_metrics()." -> "rust-analyzer cargo attest 0.1.0 dcap/attestation_metrics()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/new_chain_from_unsorted_certs()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/new_chain_from_unsorted_certs()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]new()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/new_chain_from_unsorted_certs()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()."
  "rust-analyzer cargo zkgroup 0.9.0 test_blob_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_blob_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_blob_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob()."
  "rust-analyzer cargo zkgroup 0.9.0 test_blob_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new_from_static_environment()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#InvalidRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/InvalidRequestError#InvalidHeader#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/send_request()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]remote_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_DeriveSvrKey()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool]derive_svr_key()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/implicit()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/implicit()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/rejected()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/GroupCipher_EncryptMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/GroupCipher_EncryptMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/start_connections_sooner_if_previous_ones_finish()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`Quote<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][Default]default()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#Error#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert_to_exception()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/attach_and_log_on_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#LocalDisconnect#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<E>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]update()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_path()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]update()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitoringDataWrapper]update()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 keytrans/make_monitoring_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/decode_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]get_user_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]to_inner()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#String#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]to_inner()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/PersistentExceptionValue#Object#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RegistrationSession()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_state()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`InMemoryWarpConnector<F>`][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`InMemoryWarpConnector<F>`][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/RetryError#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#RetryAt#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Intermittent#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/RetryError#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/retry_connect_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#TimedOut#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/only_one_success_is_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/only_one_success_is_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/only_one_success_is_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/only_one_success_is_saved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#WebSocketIdleTooLong#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeZero#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeSingleDigit#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadDiscriminatorCharacter#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeEmpty#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorTooLarge#"
  "rust-analyzer cargo usernames 0.1.0 username/validate_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotHaveLeadingZeros#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_with_static_fallback()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_contents()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_info()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_backup_contents()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 generation/generate_frames()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnectionError][`From<attest::client_connection::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Attestation#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/test/test_verify_consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/verify_consistency_proof()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_mark_kyber_pre_key_used()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`]project()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#DonationSubscription#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[IapSubscriberData][`TryFrom<proto::account_data::IAPSubscriberData>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#BackupSubscription#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#MissingSettings#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#InvalidProfileKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#UsernameLinkWithoutUsername#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountData<M>`][`TryFromWith<proto::AccountData, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[Subscription][`TryFrom<proto::account_data::SubscriberData>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]compress()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatResponse_Create()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IncorrectArrayLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[Error][`From<DecodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#DecodingFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_http()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[ConnectionProxyConfig]from_parts()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_http()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_http()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_http()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/test/proxy_from_parts_signal_http()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Invitee][`TryFrom<group_invitation_revoked_update::Invitee>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviteePni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Invitee][`TryFrom<group_invitation_revoked_update::Invitee>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviteeAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Invitee][`TryFrom<group_invitation_revoked_update::Invitee>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/InviteeError#InviterAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Invitee][`TryFrom<group_invitation_revoked_update::Invitee>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[Invitee][`TryFrom<group_invitation_revoked_update::Invitee>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/uuid_bytes_to_aci()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Paid#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 sgx_session/SgxClientState_EstablishedSend()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_send()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_point_args()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_revealed_attribute()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#RetryAfter42Seconds#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_SubmitVerificationErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#SessionNotFound#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[u32][PublicAttribute]hash_into()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8; LEN]`][PublicAttribute]hash_into()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]self_issued()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/sw_hardening_needed()." -> "rust-analyzer cargo attest 0.1.0 dcap/TcbStanding#SWHardeningNeeded#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/test/http_provider_route_order()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`HttpsProvider<F, P>`][RouteProvider]routes()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_async()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_async()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[Channel][ChannelEx]start_future()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]has_usable_sender_chain()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ClientAbort#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/client_abort_transport_error_is_fatal()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#IncrementalMacMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::AttachmentLocator`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#MissingIncrementalMac#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]minimal_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::file_pointer::BackupLocator`]test_data()."
  "rust-analyzer cargo zkcredential 0.1.0 attribute_key_inversion()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]inverse_of()."
  "rust-analyzer cargo zkcredential 0.1.0 attribute_key_inversion()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 attribute_key_inversion()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#SessionSwitchoverFromReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DirectStoryReplyMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::direct_story_reply_message::TextReply`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DirectStoryReplyMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`AsyncArgTypeInfo<'a>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 impl#[DnsLookupThatRunsSlowly][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Unknown#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmEncryption_ComputeTag()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]compute_tag()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[`TcpRoute<Host<D>>`][`From<TcpRoute<IpAddr>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[Timestamp][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo attest 0.1.0 cds2/test/attest_cds2()." -> "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#Disconnected#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<mpsc::error::SendError<T>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[`SslStream<S>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`SocksStream<TcpStream>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/ProxyStream#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/stream/impl#[ProxyStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[TcpStream][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/serialize_e164s()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/serialize_e164s()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[It][CollectSerialized]collect_serialized()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_system()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_system()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, BlockStream<N, R>>`]from_reader()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/cbc/impl#[`CbcStreamDecryptor<C, S>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ExpiringProfileKeyCredential>`]create_blinded_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]credential_core()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_inner()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_revealed_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]start_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Update()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList][Expireable]valid_at()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbInfo][Expireable]valid_at()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain][Expireable]valid_at()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[SgxEndorsements][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[EnclaveIdentity][Expireable]valid_at()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact::Name`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[CiphertextMessageType][`From<ProtoMessageType>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#DeviceTransferIsPossibleButNotSkipped#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RegistrationLock#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationLock]from_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<RegisterAccountError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RegisterAccountError#RegistrationRecoveryVerificationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V1#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_k()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`UnidentifiedSenderMessage<'a>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/UnidentifiedSenderMessage#V2#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[ChatStyleError][`From<ColorError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ColorError#NotOpaque#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[ChatStyleError][`From<ColorError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#ChatColorNotOpaque#"
  "rust-analyzer cargo attest 0.1.0 dcap/verify_claims_hash()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'_>`]data_sha256()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_claims_hash()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/can_serialize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/can_serialize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`AccountData<Store>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/can_serialize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::AdHocCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/ad_hoc_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo poksho 0.7.0 bench_poksho_api_mac_sha256()." -> "rust-analyzer cargo poksho 0.7.0 bench_poksho_api()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_get_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_one_time_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]their_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]our_base_key_pair()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next_varint()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[u64][PublicAttribute]hash_into()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8; LEN]`][PublicAttribute]hash_into()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_distinguished()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_distinguished()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#" -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#I32#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#" -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#U32#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#" -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#U64#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#" -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#I64#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#String#" -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/MapKey#Bool#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`TryFrom<ServiceId>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[u8][`From<ServiceIdKind>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`TryFrom<ServiceId>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`TryFrom<ServiceId>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_hash_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#InvalidProofElement#"
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_single_member_group()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name_to_vec()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]squeeze_and_ratchet_into()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#RATCHETED#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[WebSocketServiceError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Http#"
  "rust-analyzer cargo libsignal-core 0.1.0 signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_attest_key()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_attest_key()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_support_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/qe_report_bad_attest_key()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_backup_key_and_backup_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][Ord]cmp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]peek()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]peek()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`SocksRoute<A>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ConnectionProxyRoute<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`zkgroup::Timestamp`][`ResultTypeInfo<'_>`]convert_into()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]epoch_seconds()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_core::E164`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_core::E164`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSerializedResponse][`TryFrom<chat::Response>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedSearchResponse]from_untyped()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_chat_search_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/decode_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[RawChatSearchRequest]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]network_changed()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]update_after_attempt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#TimedOut#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendToken_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'_>`][SyncInputStream]skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_skip()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash_with_salt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[Alpn][`From<HttpVersion>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[Alpn][`From<HttpVersion>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[Alpn][`From<HttpVersion>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[Alpn][`From<HttpVersion>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]to_protocol_address()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]to_protocol_address()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`DelayBasedOnTransport<T>`][`RouteDelayPolicy<R>`]wants_recalculation()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/RouteDelayPolicy#wants_recalculation()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_log_tag()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/tests/test_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/variable_timeout/impl#[`VariableTlsTimeoutConnector<O, I, E>`]connect_inner_then_outer_with_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/tls_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/tls_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/tls_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`ConnectionProxyRouteProvider<P>`][RouteProvider]routes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/tls_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/tls_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_UsernameHashSearchKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'a>`]from_slice()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_UsernameHashSearchKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][SearchKey]as_search_key()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]get_associated_key()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ContactMonitoring#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]get_associated_key()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyManagement#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[DeploymentMode]get_associated_key()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse_single_chunk()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]derive_e()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/apply_agreement_xor()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/impl#[DerivedKeys]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v2/compute_authentication_tag()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha512()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<MalformedProof>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][InputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/InputStreamRead#Ready#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][InputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_read()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outcomes_recorded()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo zkgroup 0.9.0 bench_server_param_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 bench_server_param_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 bench_server_param_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 bench_server_param_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/test/underflow_claims()." -> "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`CustomClaims<'a>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_skip()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_recipient_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/chunk_sizes_sha256()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#WebSocketConnectionReset#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_ChatSendErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_CheckValidContents()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'a>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedMutableSliceOf<T>`]as_slice_mut()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAdminStatusUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, RecipientId>`]lookup_pair()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, RecipientId>`]lookup_pair()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, RecipientId>`]lookup_pair()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ECPublicKey_Deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha512#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha256#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]finalize()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicHash#Sha1#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetUuidCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetUuidCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_load_sender_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingAllChatFolder#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_missing_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_local_registration_id()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_local_registration_id()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_local_registration_id()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-net 0.1.0 cast_params()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cast_params()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupAvatarUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::Name`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[MessageSticker][`TryFromWith<proto::Sticker, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#InvalidPackId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[MessageSticker][`TryFromWith<proto::Sticker, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#InvalidPackKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[MessageSticker][`TryFromWith<proto::Sticker, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[MessageSticker][`TryFromWith<proto::Sticker, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#MissingDataPointer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/impl#[ChatId][Renumbered]renumbered()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/impl#[RecipientId][Renumbered]renumbered()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chats_and_recipient_ids()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<CreateSessionError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<CreateSessionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<CreateSessionError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<CreateSessionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/first_parent_to_the_right()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/parent_step()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/fail_to_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/fail_to_handshake()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#QueueEmpty#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEventError#MissingPath#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEventError#UnexpectedVerb#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEventError#UnrecognizedPath#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/convert_received_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#IncomingMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberPendingAdminApproval`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]get_poksho_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]private_key()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]finalize_public_attrs()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]prepare_non_attribute_point_args()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPublicKey]I()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<u8>`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[T][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, Err>`][`Connector<DirectOrProxyRoute<DR, PR>, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/direct_or_proxy/impl#[`DirectOrProxy<D, P, Err>`][`Connector<DirectOrProxyRoute<DR, PR>, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo usernames 0.1.0 username_links/test/longest_valid_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/longest_valid_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/sticker_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/impl#[`proto::StickerMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/sticker_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/sticker_message/test/sticker_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash_from_scalars()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#MaybeStillRunning#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#SignaledToEnd#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNewFromContentAndType()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNewFromContentAndType()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNewFromContentAndType()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNewFromContentAndType()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 validator_command()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 message_backup/ComparableBackup_GetComparableString()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_child_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Part#Field#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpUpgradeFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpRequestFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/make_connect_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpRequestRejected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/connect_https11_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#HttpConnectionFailed#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendToken_ToFullToken()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendToken]into_full_token()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendToken_ToFullToken()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendToken_ToFullToken()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoKeyTypeIdentifier#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintVersionMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnknownSealedSenderVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidSession#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ProtobufError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidKeyIdentifier#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FfiBindingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#CallbackError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMacKeyLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#SealedSenderSelfSend#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMKeyType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InternalError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKEMCiphertextLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#UnknownCiphertextVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidSignature#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidKyberPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#FingerprintVersionMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]previous_counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]unacknowledged_pre_key_message_items()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state_mut()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[`UnacknowledgedPreKeyMessageItems<'a>`]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceMonitor<Inner>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[DefaultGetCurrentInterface][Default]default()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PrivateKey][KeySerde]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[InvalidAccountEntropyPool][Display]fmt()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#WrongLength#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[InvalidAccountEntropyPool][Display]fmt()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#InvalidCharacter#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]has_usable_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_unacknowledged_sessions_eventually_expire()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyLength#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sender_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#BadKeyType#"
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_settle()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[Read][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[Write][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#BadDecrypt#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentsActivated#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupChangeIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[GroupChatUpdate][`TryFrom<proto::group_change_chat_update::update::Update>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Unblocked#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#MessageRequestAccepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#UnsupportedProtocolMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ExpirationTimerChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ChatUpdateUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ThreadMerge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityDefault#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#SessionSwitchover#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReportedSpam#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#LearnedProfileUpdate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LearnedProfileIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#EndSession#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ReleaseChannelDonationRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ProfileChangeMissingNames#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#GroupChangeUpdateIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#ProfileChange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChatSessionRefresh#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UpdateIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#IdentityVerified#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#PaymentActivationRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#JoinedSignal#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#Simple#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#Blocked#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/SimpleChatUpdate#ChangeNumber#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#IndividualCall#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/UpdateMessage#GroupCall#"
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/cancellation()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][AsyncRuntimeBase]cancel()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/cancellation()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][`AsyncRuntime<F>`]run_future()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiIdentityKeyStoreStruct`][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/only_alphabet_characters_are_used()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool]generate()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/only_alphabet_characters_are_used()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/test_rng()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/extend_lifetime()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/calculate_checksum_for_immutable_buffer()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_CandidatesFrom()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_CandidatesFrom()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]candidates_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/run_future_on_runtime()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/impl#[`PromiseSettler<T, E>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/futures/run_future_on_runtime()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/attachment()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/attachment()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[QuotedAttachment][`TryFromWith<proto::quote::QuotedAttachment, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/attachment()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::quote::QuotedAttachment`]test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[HttpProxy][AsReplacer]as_replacer()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/validate_field_value()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/ValidateFrom#validate_from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_encode_to_curve_try_and_increment()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/encode_to_curve_try_and_increment()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_encodings()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_encodings()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_GetMasterKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_master_key()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]validate()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooShort#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]validate()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Box<[u8]>>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[u8]>`][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#"
  "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()." -> "rust-analyzer cargo usernames 0.1.0 username/to_base_37_scalar()."
  "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()." -> "rust-analyzer cargo usernames 0.1.0 username/char_to_byte()."
  "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 cds2/Cds2Metrics_extract()." -> "rust-analyzer cargo attest 0.1.0 cds2/extract_metrics()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_save_session()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]from_pem_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]from_der()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/ecdsa_signature_from_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/CertificationKeyType#PckCertChain#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxPckExtension]is_pck_ext()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 util/read_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[UnexpectedPanic][FfiError]describe()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/describe_panic()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ProvidedAccountAttributes<'_>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#WillFetchMessages#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SignedPreKeyBody<T>`]as_deref()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`]register_account()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request_fetches_messages_no_push_tokens()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<HandshakeError<S>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#SslFailedHandshake#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<HandshakeError<S>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[FailedHandshakeReason][`From<HandshakeError<S>>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_hours()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidExpiration#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#DeviceTransfer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]into_inner()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]promote_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_key_known_from_account_entropy()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger][Log]enabled()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]send_error()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_from_remote()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ReceiveError#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::ChatStyle`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Auto#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/Wallpaper#Preset#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/node_width()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/log2()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_aci()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[ValueMonitor]for_aci()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SpecificServiceId<_>`][AsChatValue]as_chat_value()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSessionStoreStruct`][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/left_step()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DistributionListItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DistributionListItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`zkgroup::Timestamp`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]epoch_seconds()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/compare_known_hash()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<certs::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#CertError#"
  "rust-analyzer cargo zkgroup 0.9.0 benches()." -> "rust-analyzer cargo zkgroup 0.9.0 bench_server_param_serialization()."
  "rust-analyzer cargo zkgroup 0.9.0 benches()." -> "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()."
  "rust-analyzer cargo zkgroup 0.9.0 benches()." -> "rust-analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements()."
  "rust-analyzer cargo zkgroup 0.9.0 benches()." -> "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetRedemptionTime()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_redemption_time()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetRedemptionTime()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 udp_dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net 0.1.0 udp_dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 udp_dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 udp_dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 media/Mp4Sanitizer_Sanitize()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/mp4/sanitize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 media/Mp4Sanitizer_Sanitize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_net::cdsi::LookupResponse`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingTokenAck#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupRequest][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/run_attested_server()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler_with_close_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/websocket_close_with_rate_limit_exceeded_after_token_ack()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tcp_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#TlsProxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/make_http_request_response_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/test/connect_through_unencrypted_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_resolved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect_resolved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/as_resolved_group()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sub_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/log2()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sub_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sub_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sub_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::TransactionDetails`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::FailedTransaction`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::TransactionDetails`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::Transaction`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/parse_aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_optional_one_time_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_info()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]poll_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][ReportUnusualTimestamp]report()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[`std::cell::RefCell<UnusualTimestampTracker>`][ReportUnusualTimestamp]report()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair][Serialize]serialize()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey][Serialize]serialize()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair][Serialize]serialize()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]generate()."
  "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs][Default]default()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[TransportConnectError][`From<HandshakeError<S>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/ssl_config()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[StatelessTls][`Connector<TlsRouteFragment, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_DecryptMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_SubmitPushChallenge()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]submit_push_challenge()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]empty_crl()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]crl()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_GetExpiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_GetExpiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]expiration()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]provide_address()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidRegistrationId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/contact_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]create()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/ArrayLike#create()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_receiver_error_if_sender_dropped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_receiver_error_if_sender_dropped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`]val()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupCredentialType][`TryFrom<u64>`]try_from()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupCredentialType][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupCredentialType][`TryFrom<u64>`]try_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_keepAlive()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]map()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/has_version_changed_between()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/monitor_and_search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<std::result::Result<T, E>>`]transpose()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ReceiveRequestError][`From<ws2::ChatProtoDataError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/ReceiveRequestError#InvalidProto#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]is_cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/cancel_is_visible()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/network_resets_consider_latest_attempt_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/network_resets_consider_latest_attempt_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]network_changed()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/network_resets_consider_latest_attempt_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]update_after_attempt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/network_resets_consider_latest_attempt_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]prepare_non_attribute_point_args()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]prepare_non_attribute_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]prepare_non_attribute_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/deserialize_ecdsa_signature()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/ecdsa_signature_from_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnectorFactory][`ConnectorFactory<crate::route::SimpleRoute<crate::route::HttpRouteFragment, crate::route::SimpleRoute<crate::route::TlsRouteFragment, TcpRoute<IpAddr>>>>`]make()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_transport_doh/impl#[DohTransportConnector][Default]default()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message_for_plaintext()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/move_within()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/left_step()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/move_within()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/right_step()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`std::num::NonZero<u32>`][`ValidateFrom<u32>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#CountMustBeNonzero#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_impl()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_impl()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_impl()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_uuid_strings()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`SimpleArgTypeInfo<'_>`]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupSelfInvitationRevokedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_decode()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#ProtobufDecode#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#WaitingForListener#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]into_event_listener()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#TemporarilyEvicted#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/init_listener()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]finish_connect()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#AllAttemptsFailed#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptBlobWithPadding()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_with_padding()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]registration_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]pre_key_public()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]device_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]identity_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_public()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_Encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_invalid_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_invalid()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactMessage`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/contact_message/test/impl#[`proto::ContactAttachment`]test_data()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#ChatSendError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#DecodingFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[KeyTransNetError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::Transaction`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::payment_notification::transaction_details::Transaction`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]to_structurally_valid_v1_presentation_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_expiring_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_uuid_ciphertext()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_get_pre_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[U][Visitor]unknown_enum()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#EnumValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[U][Visitor]unknown_enum()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`RequestVerificationCode<'_>`][Request]headers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[MobAmount][FromStr]from_str()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[MobAmount][`TryFrom<String>`]try_from()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeEmpty#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeZero#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeSingleDigit#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotHaveLeadingZeros#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadDiscriminatorCharacter#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorTooLarge#"
  "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp][PublicAttribute]hash_into()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[u64][PublicAttribute]hash_into()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]start_or_join_lookup()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`]val()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/send_and_receive()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_stream_pair()."
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_raft_config_lookup()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_raft_config_lookup()." -> "rust-analyzer cargo attest 0.1.0 util/impl#[`SmallMap<K, V, N>`]get()."
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_raft_config_lookup()." -> "rust-analyzer cargo attest 0.1.0 svr2/new_handshake()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_ts_signature_comment()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_ts_signature_comment()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_ts_signature_comment()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 util/result_type()."
  "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Resolver][CryptoResolver]resolve_kem()." -> "rust-analyzer cargo attest 0.1.0 snow_resolver/impl#[Kyber1024][Default]default()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[u16][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Integer#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[u16][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<FrameValidationError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#TooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<FrameValidationError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<FrameValidationError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<FrameValidationError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/ValidationError#InvalidHmac#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<FrameValidationError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#String#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Cache#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_until_and_catch_up()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]public_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UntrustedIdentity#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/full_subtrees()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/full_subtrees()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/full_subtrees()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/is_full_subtree()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/spawned_task_exits_after_inactivity()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/spawn_connected_chat()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/backup_from_frames()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/shuffled_chat_item_frames_not_equal()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/test/make_chat()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_sender_key_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]send()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]send()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PlaintextContent#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]backup_id()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/impl#[`NextOrClose<T>`]unwrap_next()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_happy_path()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()."
  "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hmac()."
  "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/random_bytes()."
  "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hkdf()."
  "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InputDataTooLong#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get_mut()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get_mut()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::ChatItem`]test_data_wrong_author()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_duplicate_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialResponse_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_get_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_get_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_get_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupLevel>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupCredentialType>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]submit_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_mrenclave()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Isv#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_mrenclave()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_tree_head_signature()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/marshal_tree_head_tbs()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_tree_head_signature()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]verify_qe_report()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]attest_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]leaf_pub_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." -> "rust-analyzer cargo attest 0.1.0 dcap/ecdsa/EcdsaSigned#verify_signature()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/valid_quote_from_disk()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[T][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/successes_are_used_unless_timed_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/successes_are_used_unless_timed_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/successes_are_used_unless_timed_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/successes_are_used_unless_timed_out()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_release_notes()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New_Java()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]message_type()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New_Java()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New_Java()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New_Java()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New_Java()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_free_bytestring_array()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[BytestringArray]into_boxed_parts()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::chat_item::OutgoingMessageDetails`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::SendStatus`]test_data()."
  "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#SendFailed#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#EmptyIdentification#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionError#IdentificationContainsBoth#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/Identification#Sent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/Identification#Received#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/test/url_safe_base64_is_valid()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_data()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_data()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_data()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 parse_empty_multi_recipient_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`NoValidation<T>`][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`PartialOrd<Self>`]partial_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Ord]cmp()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_nicknames_should_produce_scalar()." -> "rust-analyzer cargo usernames 0.1.0 username/nickname_scalar()."
  "rust-analyzer cargo usernames 0.1.0 username/test/no_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#"
  "rust-analyzer cargo usernames 0.1.0 username/test/no_discriminator()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token_raw()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_characters_mapping()." -> "rust-analyzer cargo usernames 0.1.0 username/char_to_byte()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8; LEN]`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/session_not_found()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/not_ready_for_verification()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[SubmitVerificationError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[`std::io::Error`][`From<TransportConnectError>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#NoTokenInResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/CdsiProtocolError#NoTokenInResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#Server#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#Protocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#ParseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError][`From<libsignal_net::cdsi::LookupError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse][Clone]clone()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/sends_requests_and_receives_responses()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[Response][`TryFrom<proto::chat_websocket::WebSocketResponseMessage>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/cdsi_has_no_confirmation_header()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/cdsi_has_no_confirmation_header()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_response_parse()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[ResumeSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[ResumeSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[ResumeSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[ResumeSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/session_not_found()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_bad_ciphertext()." -> "rust-analyzer cargo usernames 0.1.0 username_links/decrypt_username()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_bad_ciphertext()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hmac()."
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_bad_ciphertext()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#BadCiphertext#"
  "rust-analyzer cargo usernames 0.1.0 username_links/test/username_link_data_bad_ciphertext()." -> "rust-analyzer cargo usernames 0.1.0 username_links/hkdf()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]get_poksho_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]private_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]finalize_public_attrs()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_point_args()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]sort_points()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/collect_permutation()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#RequiredFieldMissing#"
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair][`From<BlindingPrivateKey>`]from()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPublicKey][`From<&BlindingPrivateKey>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_auth()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/IncrementalMac_Finalize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/DecryptionErrorMessage_GetRatchetKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 test_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()."
  "rust-analyzer cargo libsignal-net 0.1.0 test_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net 0.1.0 test_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 test_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]disconnect()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Staging#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Prod#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`crate::support::ServiceIdSequence<'storage>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()."
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[UnvalidatedHandshake]validate()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo attest 0.1.0 dcap/from_trusted()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo attest 0.1.0 dcap/from_trusted()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<LookupResponseParseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<LookupResponseParseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupResponseParseError#InvalidNumberOfBytes#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V2#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<SubmitVerificationError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]parse_from_service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#WebSocketReceive#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#WebSocketSend#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SendFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedPingPong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ReceiveError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#CloseFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteSendError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[TaskExitError][`From<&TungsteniteReceiveError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/TaskExitError#ServerIdleTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/ReceiveError#ServerIdleTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#PingFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat_with_config()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#BackupCompletion#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Io#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#NoFrames#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#HmacMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#Parse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#BackupValidation#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 Error#InvalidProtobuf#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Decode#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#String#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupValidationError][`From<Error>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/MessageBackupValidationError#Io#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[StoredTreeHead]into_last_tree_head()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[AccountData][`TryFrom<StoredAccountData>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][`From<Box<[u8]>>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/make_e164_pair()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/try_decode()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[Environment]env()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/KeyTransparency_Search()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#SentRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/request_succeeds_even_if_followed_immediately_by_close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]cache_get()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]on_network_change()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/outstanding_lookups_before_network_event_do_not_end_up_in_cache()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/hashutil/impl#[AssumedRandomInputHasher]map_with_capacity()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateReleaseNotesRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateSelfRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateCallLinkRootKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateGroupMasterKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateDistributionListId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingSelfRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sort_recipient_ids()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactPni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/insert_or_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#DuplicateContactAci#"
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]sort_points()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/collect_permutation()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_revealed_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgs#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity][`From<u8>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#None#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity][`From<u8>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#PrintPretty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity][`From<u8>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#PrintOneLine#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]public_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]private_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::PostalAddress`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkPublicParams_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][Debug]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#IncomingMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][Debug]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Alerts#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][Debug]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#Stopped#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/impl#[ServerEvent][Debug]fmt()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/ServerEvent#QueueEmpty#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SignalProtocolError][`From<InvalidSessionError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSessionStructure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[`RequestError<E>`][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update_chunk()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]get_poksho_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_scalar_args()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]private_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]finalize_public_attrs()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]prepare_point_args()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]derive_public_key_bytes()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey][`From<[u8; PRIVATE_KEY_LENGTH]>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/tests/test_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetPniCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialPresentation_GetPniCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_pni_ciphertext()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberPublicKey_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_out_of_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]sort_points()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/multiple_resolved_routes_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/multiple_resolved_routes_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/multiple_resolved_routes_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/multiple_resolved_routes_e2e()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/impl#[`Schedule<S, R, SP>`]as_stream()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<TaskSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskSendError#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<TaskSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<TaskSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskSendError#StreamSendFailed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 invalid_jsonproto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 invalid_jsonproto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_from_json()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 invalid_jsonproto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 invalid_jsonproto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 invalid_jsonproto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 write_expected_output()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/gift_badge()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Read`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Delivered`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Sent`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Pending`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Failed`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Viewed`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SendStatus`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::send_status::Skipped`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketConfig]ws2_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#OneDomainPerProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]start_or_join_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Receiver<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]start_or_join_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]start_or_join_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_response_deserialize()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#Captcha#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_response_deserialize()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_response_deserialize()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#PushChallenge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert_to_exception()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[SignalJniError]to_throwable()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search()."
  "rust-analyzer cargo zkgroup 0.9.0 test_server_sigs()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign()."
  "rust-analyzer cargo zkgroup 0.9.0 test_server_sigs()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature()."
  "rust-analyzer cargo zkgroup 0.9.0 test_server_sigs()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_server_sigs()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]timeout()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#NK#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/testutil/echo_forever()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#IK#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Authenticated#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/SendError#Noise#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[InitialPayloadAuth]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/assert_expected_result()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]with_custom_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/assert_expected_result()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/assert_expected_result()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/assert_expected_result()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/assert_expected_result()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_request_context/impl#[ProfileKeyCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionCipher_DecryptSignalMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentityPqLastResortPreKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentityPqLastResortPreKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get_mut()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 v2()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 benches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 v1()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_revoked_server_cert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#NotReadyForVerification#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SendFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[bool][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_is_trusted()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[InitialPayloadAuth]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/spawned_task_body()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/parent_step()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/first_cancel_wins()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancelled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/first_cancel_wins()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]cancel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/test/first_cancel_wins()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/cancel_token/impl#[`CancellationToken<T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<InvalidSessionId>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<InvalidSessionId>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/direct_path()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/direct_path()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/parent()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/test/read_length_delimited_empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/localhost_http_server()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/test/connect_to_server()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/testutil/make_http_request_response_over()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/consistency_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sub_proof()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/impl#[`std::io::Error`][`From<IntoIoError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`ExactBlockStream<N, S>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/get_encoded_string()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_claims_hash()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_report_body/impl#[SgxReportBody]has_flag()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_expiration()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_source()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_certificates()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_signatures()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_tcb_status()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&T`][`SimpleArgTypeInfo<'_>`]convert_from()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/run_future_on_runtime()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 impl#[LoadClassFromName][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureResultReporter<T, U>`]new()."
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][`From<Field>`]from()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[FieldNameAttr]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::GroupCall`]no_started_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::GroupCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleGradientColor]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Color][`TryFrom<u32>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleGradientColor]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#InvalidBubbleGradientPosition#"
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement][Debug]fmt()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement][Debug]fmt()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<CompressedRistretto>`][Debug]fmt()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<TlsRouteFragment, S>`]connect_over()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<TlsRouteFragment, S>`]connect_over()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberBanned`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingProfileKey`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingAdminApproval`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::Member`]test_data()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]bind_settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]bind_settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/settle_promise()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`]bind_settle_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`WeakFutureToken<T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`chat::Request`][`From<RawChatSearchRequest>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/common_headers()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_reader_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner]with_lock()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_reader_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]save_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/DisconnectTime#AfterRequestSent#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/DisconnectTime#AfterConnectionSpawned#"
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_statement_encoding()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_statement_encoding()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_statement_encoding()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/impl#[CurrentOrPrevious][Display]fmt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Current#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/impl#[CurrentOrPrevious][Display]fmt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/CurrentOrPrevious#Previous#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/encode_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/encode_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/encode_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/encode_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/failure_preserves_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/failure_preserves_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/failure_preserves_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/failure_preserves_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[NoOpAsyncRuntime][`AsyncRuntime<F>`]run_future()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPublicKey]I()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::Quote`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::quote::QuotedAttachment`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::Quote`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[`proto::Text`]test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 keytrans/TESTING_ChatSearchResult()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_successful()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_CheckValidContents()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_timestamp()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`PublicKey<D>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`PublicKey<D>`][ConstantTimeEq]ct_eq()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingUpdateSessionError#Rejected#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/UpdateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/ServerMessageAck_Send()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[ServerMessageAck]take()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]verify_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[NeverConnect][`Connector<R, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/parent()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/parent_step()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]add_blinded_attribute()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V2#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]pcesvn()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/v2_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]project()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`][VerifyHmac]verify_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]into_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`][VerifyHmac]verify_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]finalize()."
  "rust-analyzer cargo usernames 0.1.0 username/random_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 username/gen_range()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_signal()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SealedSenderSelfSend#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 impl#[DnsLookupThatFailsSlowly][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_version()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/check_svr2_credentials_response_parse()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/Svr2CredentialsResult#Match#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/check_svr2_credentials_response_parse()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/check_svr2_credentials_response_parse()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/check_svr2_credentials_response_parse()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]generate()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_root()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_root()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_root()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_root()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_root()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_RequestPushChallenge()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]request_push_challenge()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#RequestedIpTypeNotFound#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Sender<T>`]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]spawn_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]on_network_change()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]cache_get()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/cache_cleared_on_network_event()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`][Clone]clone()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<String>`][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/native_handle_cast()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`ConstPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_sealed_session_cipher_decrypt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#IncrementalMacMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#MissingIncrementalMac#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/io/impl#[`JniInputStream<'a>`]do_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/parent_hash()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]get_poksho_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]finalize_public_attrs()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]prepare_point_args()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/evaluate_vrf_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]next_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]entries()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]next_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/next_monitor()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#EmptyChain#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/tree_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#MalformedChain#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[NodeData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyMissingMember#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberRoleUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingProfileKey`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberPendingProfileKey]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_pending_profile_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyWasInvitedBySelf#"
  "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[T][CollectSortedStatuses]sorted_statuses()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[T][CollectSortedStatuses]sorted_statuses()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[`RequestError<E>`][AsStatus]as_status()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[T][CollectSortedStatuses]sorted_statuses()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame_returning_local()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[SendRequest]poll_send_and_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/SendRequest#InitialSend#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[SendRequest]poll_send_and_flush()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/SendRequest#FlushSent#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]remote_identity_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 can_serialize_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup]to_string_pretty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 can_serialize_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 can_serialize_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[Backup][`From<CompletedBackup<Store>>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 can_serialize_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<UnvalidatedHmacReader<R>>`]new_unencrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 can_serialize_json_proto()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/convert_from_json()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#SendRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#ReadResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[SendRequest]poll_send_and_flush()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_New()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMacKeyLength#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#AuthorNotFound#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#AuthorHasNoAciOrE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#InvalidAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/valid_reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSignedPreKeyStore<'_>`]do_save_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<[String]>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[BytestringArray][`FromIterator<S>`]from_iter()."
  "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/test_agreement_and_authentication()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes256_ctr_hmacsha256_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[EphemeralKeys]calculate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PlaintextContent#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/native_handle_from_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#ServerSentInvalidUtf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteReceiveError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]hostname()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_takes_first_successful()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]route()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#None#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/print_pretty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#PrintOneLine#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseVerbosity#PrintPretty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/print_oneline()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#OneDomainPerProxy#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]endpoint_connection()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[EndpointConnections]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingAdminApproval][`TryFromWith<proto::group::MemberPendingAdminApproval, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-net 0.1.0 dns_over_https_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net 0.1.0 dns_over_https_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()."
  "rust-analyzer cargo libsignal-net 0.1.0 dns_over_https_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 dns_over_https_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Preset#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Auto#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownCustomColorId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnknownPresetBubbleColor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/BubbleColor#Custom#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`BubbleColor<CustomColor>`][`TryFromWith<proto::chat_style::BubbleColor, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[BubbleColorPreset]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#"
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsement_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Url#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Capacity#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelIdleTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#ChannelClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WebSocketServiceError][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/WebSocketServiceError#HttpFormat#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#Timeout#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_GenerateDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#NotAccepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallType#Audio#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#MissedByNotificationProfile#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownDirection#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#Accepted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallType#Video#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/IndividualCallState#Missed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[IndividualCall][`TryFromWith<proto::IndividualCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_queue_empty()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniChatListener][ChatListener]received_queue_empty()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/attach_and_log_on_error()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JavaLogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Info#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JavaLogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Warn#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JavaLogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Debug#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JavaLogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Error#"
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JavaLogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/JavaLogLevel#Verbose#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]shuffled_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]shuffled_connection_params()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#PathPrefix#"
  "rust-analyzer cargo libsignal-net 0.1.0 system_dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-net 0.1.0 system_dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[SystemDnsLookup][DnsLookup]dns_lookup()."
  "rust-analyzer cargo poksho 0.7.0 shosha256/tests/test_vectors()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo poksho 0.7.0 shosha256/tests/test_vectors()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo poksho 0.7.0 shosha256/tests/test_vectors()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Ciphertext<'a>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::account_data::AccountSettings`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::account_data::AccountSettings`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[CustomChatColor]from_proto_test_data()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_mismatched_keys()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]initial_request()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/tests/test_mismatched_keys()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/validate_offsets()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[FfiLogger][Log]enabled()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_matching_identifiers()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#SessionNotFound#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#NotReadyForVerification#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_aci_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]aci_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_aci_ciphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/AnyAuthCredentialPresentation#V4#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_eq()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_zero()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeZero#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadDiscriminatorCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeSingleDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorTooLarge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotStartWithDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotHaveLeadingZeros#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotBeEmpty#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemKyberPreKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/nicknames_exceeding_soft_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 username/test/nicknames_exceeding_soft_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()."
  "rust-analyzer cargo usernames 0.1.0 username/test/nicknames_exceeding_soft_limits()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo usernames 0.1.0 username/test/nicknames_exceeding_soft_limits()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooShort#"
  "rust-analyzer cargo usernames 0.1.0 username/test/nicknames_exceeding_soft_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/quote_support_bytes()." -> "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&str`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/success_clears_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/success_clears_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/success_clears_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/success_clears_saved_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#InvalidInput#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]insert()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/Error#MalformedProof#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/evaluate_batch_proof()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteInfo]fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription]fake()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]into_listener()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]into_listener()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]into_listener()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentityPublicKey()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get_mut()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegisterAccountRequest_SetIdentityPublicKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_with_static_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#AppExpired#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/connection_outcome_delay_bounds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ConnectionOutcomeParams]compute_delay()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNew()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNew()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNew()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNew()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContentNew()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint][`From<u32>`]from()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_pre_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberBanned`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/wait_for_task_to_finish()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/wait_for_task_to_finish()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#MaybeStillRunning#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/wait_for_task_to_finish()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskState#SignaledToEnd#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/wait_for_task_to_finish()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#Panic#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/localhost_https_server_with_fake_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http2_client()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/outcome_record_for_testing()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToCreateRequest#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/http_client_invalid_hostname()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupLevel>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupCredentialType>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ProxyConfig]shuffled_connection_params()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/test/single()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/unpad/impl#[`UnpadLast<S, P, B, N>`]new()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingSubmitVerificationError#NotReadyForVerification#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#RetryLater#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_duplicates()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_duplicates()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#DuplicateCustomChatColorId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_duplicates()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidExpiration#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/InvalidExpiration#TooShort#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]as_secs()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiring_message_timer_not_started()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ReceiveError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#ServerIdleTooLong#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#CloseFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#WebsocketError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#PingFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#SendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskExitError#SendIo#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[TaskErrorState][`From<&TaskExitError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/TaskErrorState#ReceiveFailed#"
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CallLinkRoomIdPoint]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`DirectOrProxyRoute<D, P>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Proxy#"
  "rust-analyzer cargo usernames 0.1.0 username/test/discriminator_scalar_is_defined_on_range()." -> "rust-analyzer cargo usernames 0.1.0 username/discriminator_scalar()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_alerts()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[`&FfiInputStreamStruct`][SyncInputStream]read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/io/impl#[FfiInputStreamStruct]do_read()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1SetMaxLevel()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/abort_on_panic()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1SetMaxLevel()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::UsernameLink`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::UsernameLink`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidNameCharacters#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name_to_vec()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/random_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]current_ratchet_key_matches()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[ZkGroupVerificationFailure][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#VerificationFailure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[EnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[EnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseHandshakeError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[EnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[EnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[EnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationError#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_model()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/start_and_n()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_model()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_eager()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_model()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/direct_path()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_default_generator_points()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]class_name()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]class_name()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_permute_simple()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/collect_permutation()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/run_future_on_runtime()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/impl#[`FutureCompleter<T>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/futures/run_future_on_runtime()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::SignedPreKeyBody<Box<[u8]>>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[u32][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<String>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<&str>`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/empty()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[BlindedReceiptCredentialWithSecretNonce]get_blinded_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]compute_tag()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]decrypt()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]verify_tag()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::Transaction`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::MobileCoinTxoIdentification`]test_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#WrongKEMKeyType#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]from_public_and_private()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-net 0.1.0 all_routes_connect_hangs_forever()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 all_routes_connect_hangs_forever()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 all_routes_connect_hangs_forever()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 all_routes_connect_hangs_forever()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeyPublic()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_public()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_static_method_checked()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_exceptions_and_convert_result()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/test/outcome_record_for_testing()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<libsignal_core::E164>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_core::E164`][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/no_extra_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/never_visits()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#ConnectedElsewhere#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]into_pb()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo poksho 0.7.0 bench_poksho_api_sha256()." -> "rust-analyzer cargo poksho 0.7.0 bench_poksho_api()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[MessageAttachment]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/ssl_config()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/impl#[RootCertificates]apply_to_connector()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/ssl_config()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[Alpn][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberPendingProfileKey`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::Member`]test_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[HandshakeAuthKind]handshake_message_len()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuthKind#IK#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[HandshakeAuthKind]handshake_message_len()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuthKind#NK#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]queries_count()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#"
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]backup_level()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupCredentialType#Messages#"
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()."
  "rust-analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]credential_type()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ViewOnceMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ViewOnceMessage`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_object()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]load_from()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_of_shared_bytes()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]range_for_recipient_key_material()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_SealedSender_1MultiRecipientParseSentMessage()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_static_method_checked()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[TimestampOrForever]from_millis()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampOrForever#Timestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[TimestampOrForever]from_millis()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[TimestampOrForever]from_millis()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/TimestampOrForever#Forever#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInputState<'_>`][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<RetryLater>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_multiple_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_multiple_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_multiple_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#MultipleAccountData#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/rejects_multiple_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#MissingSeparator#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeZero#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorTooLarge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotBeEmpty#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooShort#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotBeSingleDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadDiscriminatorCharacter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotStartWithDigit#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[UsernameError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#DiscriminatorCannotHaveLeadingZeros#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`][`Connector<R, Inner>`]connect_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[StatelessProxied][`Connector<ConnectionProxyRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver][Resolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver][Resolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#TransportFailure#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 MaybeEncryptedBackupReader#PlaintextBinproto#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 MaybeEncryptedBackupReader#EncryptedCompressed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 print_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 validate()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/impl#[ParseVerbosity]into_visitor()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_net::chat::Response`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`][`From<Box<[T]>>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_net::chat::Response`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`libsignal_net::chat::Response`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[String][ResultTypeInfo]convert_into()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#InvalidArgument#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute_without_verified_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute_without_verified_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u8][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo usernames 0.1.0 username/test/too_few_ranges()." -> "rust-analyzer cargo usernames 0.1.0 username/random_discriminators()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#Style#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/test/impl#[`proto::ChatFolder`]all_folder_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/allows_lone_all_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/right_step()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/network_change_event_debounced()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Staging#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/network_change_event_debounced()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/network_change_event_debounced()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]on_network_change()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni][Serialize]serialize()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPni#Zkc#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]decapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#decapsulate()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_reversed()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_reversed()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_reversed()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/reports_alerts()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]report_alerts()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/reports_alerts()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]kind()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]raw_uuid()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/test_most_recent_proof_guide()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/execute_guide()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/test_most_recent_proof_guide()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_most_recent()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify()." -> "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ProtocolAddress_DeviceId()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]device_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Request]request_path()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[GetSession][Request]request_path()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/test/test_commit()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 commitments/commit()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[RouteIpVersion]update_from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#V6#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#Mixed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#None#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/RouteIpVersion#V4#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Gcm#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Apn#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/SessionValidation#SessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#WillFetchMessages#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/SessionValidation#RecoveryPassword#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#ApnRegistrationId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushToken#GcmRegistrationId#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/unknown_fields_in_nested_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#EnumValue#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/unknown_fields_in_nested_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/unknown_fields_in_nested_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[S][ProtoWireCast]wire_cast_as()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationDeclinedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[S][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[S][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_request_context/impl#[ReceiptCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_api()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TlsHandshake#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#TcpThroughProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEvent#TcpConnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Delay#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#Start#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#End#"
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 runs_one_tls_handshake_at_a_time()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#MultipleAccountData#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Void#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_send()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_send()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_send()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#Connection#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_send()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[Timestamp][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 run_session_interaction()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/full_monitoring_path()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/get_proto_field()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/leaf_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 prefix/evaluate()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[MonitorProofAcc]process()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]consume()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]result()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]consume()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]poll()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]consume()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]next_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::BackupInfo`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_single_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_single_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[SlimSearchRequest]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/verify_single_search_response()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[`FullSearchResponse<'a>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[ConvertJsonError][`From<crate::parse::ParseError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Decode#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[ConvertJsonError][`From<crate::parse::ParseError>`]from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/ParseError#Io#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_AddFrame()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[OnlineBackupValidator]get_mut()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_AddFrame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/OnlineBackupValidator_AddFrame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[ReadError]with_error_only()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToCreateRequest#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToReadContentOfUnknownSize#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#ContentLengthHeaderInvalid#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#SendRequestError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#ResponseTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/impl#[AggregatingHttp2Client]send_request_aggregate_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 http_client/HttpError#FailedToReadContentOfKnownSize#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#timestamp()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#public_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]kyber_pre_key_signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#key_pair()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord]private_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_GetKyberPreKeySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]secret_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Next#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_lost_message_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_unknown()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_unknown()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_unknown()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#Revoked#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_unknown()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[QeTcbLevel]from_parts()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_unknown()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#DuplicatePinnedOrder#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#MissingExpireTimerVersion#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#NoRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[TimestampOrForever]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatData<M>`][`TryFromWith<proto::Chat, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[Subscription][`TryFrom<proto::account_data::SubscriberData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#InvalidSubscriberId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[Subscription][`TryFrom<proto::account_data::SubscriberData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/SubscriptionError#EmptyCurrency#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#CallbackException#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/BridgeOrProtocolError#Bridge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/BridgeOrProtocolError#Protocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadJniParameter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[SignalProtocolError][`From<BridgeOrProtocolError>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FfiBindingError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#Timeout#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[LookupOption]attempt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]get_profile_key_commitment()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`chat::Request`][`From<RawChatDistinguishedRequest>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/common_headers()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_uid_struct()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatFolder`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Chat`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AccountData`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::AdHocCall`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Recipient`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerPack`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::NotificationProfile`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][Debug]fmt()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()."
  "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]with_context()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/reaction()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromSalt()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]create()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord][GenericSignedPreKey]get_storage()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ProvidedAccountAttributes<'_>`][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]get()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`]register_account()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Apn#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`ForServiceIds<T>`]generate()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SignedPreKeyBody<T>`]as_deref()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/register_account_request()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]queries_count()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/results_cached_even_if_received_late()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_until_and_catch_up()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupUnknownInviteeUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_promise()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]add_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]sub_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[ThrottlingConnectionManagerState]update_after_attempt()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#NoTokenInResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#ParseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#Server#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/CdsiError#Protocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[CdsiError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory]from_connection_manager_wrapper()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Monday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#DuplicateMember#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/DayOfWeek#Wednesday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#EmojiIsPresentButEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#DuplicateDay#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MissingId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidWeekday#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidClockTime#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/impl#[`proto::NotificationProfile`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]contact_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#ColorNotOpaque#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#UnknownMember#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MissingName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/valid_notification_profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`SpecificServiceId<_>`][`ValidateFrom<Vec<u8>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/uuid_bytes_to_aci()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[`SpecificServiceId<_>`][`ValidateFrom<Vec<u8>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidAci#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncWrite]poll_flush()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]new()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/pkey()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]new()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/serial_number()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_object()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::cdsi::LookupResponse`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]lookup()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]cache_get()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[MobAmount][`TryFrom<String>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#InvalidFee#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#NoTransactionDetailsPayment#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionDetails#Transaction#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentError][`From<TransactionError>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/PaymentError#InvalidAmount#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[PaymentNotification][`TryFromWith<proto::PaymentNotification, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/TransactionDetails#FailedTransaction#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[u64][`From<CancellationId>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[u64][`From<CancellationId>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#Id#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#LongText#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#EmptyText#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyContent#Text#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#MissingReply#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#Text#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/impl#[`DirectStoryReplyMessage<R>`][`TryFromWith<proto::DirectStoryReplyMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyContent#Emoji#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatConnectError#InvalidConnectionConfiguration#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[PublicKeyBytes][`From<&PublicKey>`]from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`(S, libsignal_net_infra::ws2::Config)`][IntoInnerConnection]into_inner_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#ChatItem#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]report_alerts()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#BlobWrongContent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidAccess#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#BlobMissingContent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupData][`TryFromWith<proto::Group, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord]private_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord]private_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[SignedPreKeyRecord][GenericSignedPreKey]get_storage()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/half_close_during_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/half_close_during_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/half_close_during_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V0>`]derive_from_master_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[KeyArgs]into_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::GroupCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]signed_pre_key_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]make_bundle_with_latest_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]modify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_bad_signed_pre_key_signature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChatFactory][Drop]drop()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`PersistentBorrowedJsBoxedBridgeHandle<T>`][Finalize]finalize()."
  "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap]take()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatStyle`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/fake_ips_for_names()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[UserAgent]with_libsignal_version()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<ConnectorFactory>`]new_with_transport_connector()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[String]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_remove_pre_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[OutgoingRequest]make_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#SentRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[OutgoingRequest]make_message()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[OutgoingRequest]make_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[OutgoingRequest]make_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/TcpSslConnectorStream#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Socks#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/TcpSslConnectorStream#Proxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tcp#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyConfig#Tls#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`StreamAndInfo<T>`]map_stream()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new_tcp()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/test_version_proof_guide()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/execute_guide()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/test_version_proof_guide()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_version()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/text()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[`proto::Text`]test_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_pck()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm_wycheproof_kats()." -> "rust-analyzer cargo signal-crypto 0.1.0 test_kat()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]inverse_of()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_with_lossage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_second_response_is_after_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncSkip]poll_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Idle#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncSkip]poll_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Reading#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/impl#[`AsyncInput<'_>`][AsyncSkip]poll_skip()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 io/AsyncInputState#Skipping#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#DuplicateMember#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#UnknownMember#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[DayOfWeek][`TryFrom<protobuf::EnumOrUnknown<proto::notification_profile::DayOfWeek>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MissingId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Color][`TryFrom<u32>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#EmojiIsPresentButEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#DuplicateDay#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[ClockTime][`TryFrom<u32>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#MissingName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/NotificationProfileError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/impl#[`NotificationProfile<R>`][`TryFromWith<proto::NotificationProfile, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#"
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]issue_chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_pre_key_ids()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]save_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[Timestamp][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_incoming_message()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<E>`][`From<RequestError<SessionRequestError>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<E>`][`From<RequestError<SessionRequestError>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<E>`][`From<RequestError<SessionRequestError>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<E>`][`From<RequestError<SessionRequestError>>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]combine_with()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[`Endorsement<Storage>`][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/pni_matching_aci_is_okay()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/convert_log_args_to_js()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[u32][`From<LogLevel>`]from()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/convert_log_args_to_js()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_callback()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_Serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_Serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/IdentityKeyPair_Serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][AsChatValue]as_chat_value()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`UsernameHash<'_>`][AsChatValue]as_chat_value()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_too_long()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_too_long()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorNameTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_name_too_long()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]tag_info()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[CreateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[CreateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[RetryLater][JniError]to_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[CreateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/impl#[CreateSessionError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[M][JniError]to_throwable()."
  "rust-analyzer cargo zkcredential 0.1.0 impl#[ExampleDomain][Domain]G_a()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_default_generator_points()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_initializeLibrary()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/save_class_loader()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 Java_org_signal_libsignal_internal_Native_initializeLibrary()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/run_ffi_safe()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_ok_if_needed()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/TransformHelperImpl#ok_if_needed()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_ok_if_needed()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<Result<T, E>>`]ok_if_needed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/likely_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#NoAssociatedValueForBodyRange#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#MentionAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#MentionInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/uuid_bytes_to_aci()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextEffect#Style#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/impl#[MessageText][`TryFrom<proto::Text>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#EmptyBody#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/response_for_status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/response_for_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws/response_for_code()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[`StickerPack<M>`][`TryFrom<proto::StickerPack>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/StickerPackError#InvalidKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/impl#[`StickerPack<M>`][`TryFrom<proto::StickerPack>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind][`TryFrom<&MinimalRecipientData>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]finalize_public_attrs()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#from_storage()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/test/websocket_client_sends_pong_on_server_ping()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]pcesvn()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]pcesvn()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V2#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_nested()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/oneof_extra_int()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/oneof_extra_message()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_int64()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/UnknownValue#Field#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_string()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/oneof_extra_string()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_repeated_message()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_enum()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_map()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/extra_repeated_uint64()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/compressed_name_format_handles_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name_to_vec()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/compressed_name_format_handles_errors()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[QeTcbLevel]from_parts()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#OutOfDate#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_outdated_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#Revoked#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]from_scalars()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[SgxQuoteBody][`TryFrom<[u8; _]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[SgxQuoteBody][`TryFrom<[u8; _]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/SgxAttestationAlgorithm#EcdsaP256#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]revoke_from_pck()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/revoked_other_pck()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_local_registration_id()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_local_registration_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#MissingDestination#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder][HasSessionVersion]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#PushChallenge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#Captcha#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/unsupported_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_disconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'context>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener]make_listener()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[InvalidProxyConfig][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<InvalidSessionId>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<InvalidSessionId>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaProtoDescriptors<proto::TestMessage>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaProtoDescriptors<proto::TestMessage>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Root#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<oneshot::error::RecvError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`SubmitVerificationCode<'_>`][Request]request_path()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId]as_url_path_segment()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Tcb][`TryFrom<SequenceOf<'a, SgxExtension<'a>, 0, _>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/parse_extensions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/can_create_connection_manager()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Vec<u8>>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]save_signed_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_aaaa_record()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorFailedToParseResourceRecord#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_individual()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_individual()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_individual()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_individual()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#"
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_point_args()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupCredentialType#Messages#"
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/server_secret_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/spawn_localhost_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/spawn_localhost_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]accept()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker][Wake]wake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker][Wake]wake_by_ref()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/cannot_connect_through_invalid_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/Environment#Staging#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/cannot_connect_through_invalid_proxy()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/cannot_connect_through_invalid_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/cannot_connect_through_invalid_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[UnauthenticatedChatConnection]connect()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/test/cannot_connect_through_invalid_proxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_invalid_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/write_name()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorNameTooLong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/write_name()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelEmpty#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/write_name()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorLabelTooLong#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`TryFromWith<Vec<proto::Reaction>, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#MultipleReactions#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`TryFromWith<Vec<proto::Reaction>, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr_smoke_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr_smoke_test()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]from_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/ws_config_eq()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[PinError][FfiError]code()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#DecodingError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[PinError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[PinError][FfiError]code()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#Argon2Error#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[PinError][FfiError]code()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#MrenclaveLookupError#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]parse_as_ip_or_domain()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/preconnect_records_outcomes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[DisplayableFingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]get_fingerprint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/impl#[HttpProxyStream]project()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_chain_jump_over_limit()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType]from_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType]from_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType]from_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType]from_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 IpType#V6#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/incoming_message_resets_server_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#UsernameHash#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/AccountDataField#E164#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_search_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[TypedSearchResponse]from_untyped()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_censorship_circumvention_enabled()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_censorship_circumvention_enabled()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_validation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupLevel][`TryFrom<u64>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_validation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[u64][`From<BackupLevel>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_backup_level_validation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/BackupLevel#Free#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_VerifyMac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_VerifyMac()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]verify_mac()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V3#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/Tcb#V2#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[TcbLevel]from_parts()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V2#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_UpdateWithOffset()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]update()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Sticker`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Sticker`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo attest 0.1.0 svr2/tests/raft_config_matches()." -> "rust-analyzer cargo attest 0.1.0 svr2/tests/matches()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/connect_ws_timeout()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_custom_chat_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[CustomChatColor]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_custom_chat_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/AccountEntropyPool_Generate()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`zkgroup::Timestamp`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]epoch_seconds()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/duplicate_reactions_are_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/duplicate_reactions_are_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`proto::Reaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/duplicate_reactions_are_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#MultipleReactions#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/duplicate_reactions_are_rejected()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`TryFromWith<Vec<proto::Reaction>, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[InMemSignalProtocolStore][HasSessionVersion]session_version()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::CreateSession`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::PushTokenType`][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/CreateOTP()." -> "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]otp()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_v0_known()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_v0_known()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V0>`]derive_from_master_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_v0_known()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]gen_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][KyberPreKeyStore]save_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]add_kyber_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_kyber_pre_key_ids()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupJoinRequestCanceledUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 proof/impl#[Proof]to_bytes()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgs#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#ProofCreationVerificationFailure#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#VerificationFailure#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]encapsulate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/Parameters#encapsulate()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]with_authenticated_message()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]with_authenticated_message()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`zkgroup::Timestamp`][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`zkgroup::Timestamp`][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[`CustomDnsResolver<R, T>`][DnsLookup]on_network_change()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]on_network_change()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/is_full_subtree()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/ssl_config()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tls()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#Yes#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#TlsProxy#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/ShouldUseTls#No#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Host<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Host<A>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInvitationAcceptedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_HashFromParts()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_HashFromParts()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_HashFromParts()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][MayHavePublicKey]id()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp][Serialize]serialize()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]as_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_known()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_known()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 key/test/message_backup_key_known()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 key/impl#[MessageBackupKey]derive()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_GetReceiverChainKeyValue()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#IncomingDataInvalid#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_keys_legacy()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_keys_legacy()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]credential_core()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]iter()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]credential_core()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]credential_core()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Option<&T>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[`kem::Key<kem::Public>`][KeySerde]deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/tokio/TokioAsyncContext_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[ChatSendError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetSenderCert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/UnidentifiedSenderMessageContent_GetSenderCert()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_small()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_small()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_small()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_Validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]validate()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain][Expireable]valid_at()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/cert_chain()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#WebSocketConnectionReset#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaProtoDescriptors<proto::TestMessageWithExtraFields>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Root#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/test/impl#[`ViaProtoDescriptors<proto::TestMessageWithExtraFields>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_dyn/visit_unknown_fields()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_revealed_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[FieldType][`From<syn::Type>`]from()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 FieldType#Container#"
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[FieldType][`From<syn::Type>`]from()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 FieldType#Single#"
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]from_pem_data()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]queries_count()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/assert_lookup_result_content_equal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv6()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]transport_and_custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/works_correctly_when_both_results_are_within_resolution_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/ok_query_result_ipv4()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupIdPoint]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_address()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_address()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_address()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_address()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_address()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`]add_chat()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#DuplicateId#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet_forward_result()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]replace_locally_resolved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]replace_locally_resolved()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#ConnectionEstablishment#"
  "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#RATCHETED#"
  "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Outgoing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`OutgoingSend<Recipient>`][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInWrongIndividualChat#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ReleaseNoteMessageNotInReleaseNoteChat#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectStoryReplyNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Sent#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::PaymentNotification`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DeliveryStatus#Pending#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInNoteToSelf#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/outgoing_sends_are_sorted_when_serialized()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#PaymentNotificationNotInContactThread#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#UnrecognizedStatus#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<SessionRequestError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SessionRequestError#RetryLater#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ContentHint]to_proto()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/new_client()." -> "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_raft_config_lookup()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/new_client()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 svr2/new_client()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo device-transfer 0.1.0 impl#[KeyFormat][`From<u8>`]from()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#Pkcs8#"
  "rust-analyzer cargo device-transfer 0.1.0 impl#[KeyFormat][`From<u8>`]from()." -> "rust-analyzer cargo device-transfer 0.1.0 KeyFormat#KeySpecific#"
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmEncryption]encrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]update()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`ThrottlingConnector<C>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]replace_connector()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[SocksConnector][TransportConnector]connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]accept()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/impl#[Socks5Server]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#FromDer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/test/server_rejects_authentication()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/Protocol#Socks5#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation_accepted_sw_advisories_not_present()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_point_args()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]make_scalar_args()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash_from_scalars()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]format_parts()."
  "rust-analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]create()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/verify_local_pin_hash()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/local_pin_hash()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[TestError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Intermittent#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_starting_new_lookup_if_previous_done()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_starting_new_lookup_if_previous_done()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_starting_new_lookup_if_previous_done()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]logged_requests()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_starting_new_lookup_if_previous_done()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`SharedCacheWithGenerations<K, V>`][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/CollectSortedStatuses#sorted_statuses()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_for_status()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/round_trip_all_variants()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[IdentityKey][`TryFrom<SearchValue<'_>>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`SearchValue<'_>`]payload()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[IdentityKey][`TryFrom<SearchValue<'_>>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[IdentityKey][`TryFrom<SearchValue<'_>>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ProtoMessageType][`From<CiphertextMessageType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]into_handler()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSignedPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiSignedPreKeyStoreStruct`][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_writer_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner]with_lock()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_writer_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]save_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_inner_returns_pending()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_reader_inner_returns_pending()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/test/aes_encrypted_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_sealed_sender_multi_recipient_redundant_empty_devices()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<TcpRoute<IpAddr>, Box<dyn AsyncDuplexStream>>`]connect_over()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget][`From<TcpRoute<IpAddr>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][`Connector<TcpRoute<IpAddr>, Box<dyn AsyncDuplexStream>>`]connect_over()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_EstablishedRecv()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_recv()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 hsm_enclave/HsmEnclaveClient_EstablishedRecv()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]initial_request()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'_>`][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'_>`][Expireable]valid_at()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[IoError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]code()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[IoError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#IoError#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/test/proto_into_response_fails_for_invalid_data()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/test/validate_invalid_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`][`RouteDelayPolicy<R>`]compute_delay()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[ConnectionOutcomeParams]compute_delay()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore][Finalize]finalize()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_impl()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/impl#[NameStore]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[Identification]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/Identification#Sent#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]with_their_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_sender_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]get_receiver_chain_key_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_alice_and_bob_agree_on_chain_keys_with_kyber()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha256#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#UnknownAlgorithm#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/CryptographicMac#HmacSha1#"
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[ClientConnectionEstablishment]complete()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#TrustedCodeError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSenderKeyStore<'_>`]do_store_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/known_hash2()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/compare_known_hash()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#InvalidCustomColorId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`]insert()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#DuplicateCustomChatColorId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`(CustomColorId, CustomChatColor)`][`TryFrom<proto::chat_style::CustomChatColor>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]calc_M3()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`ReadResult<R>`]and_then()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]collect_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]read_all()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_SendServerResponse()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ProtocolAddress_New()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`MacReader<R, CoreWrapper<HmacCore<CoreWrapper<CtVariableCoreWrapper<Sha256VarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, OidSha256>>>>>`]new_sha256()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/mac_read/impl#[`MacReader<R, M>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Responder]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[`mpsc::UnboundedSender<ListenerEvent>`][IntoEventListener]into_event_listener()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/receives_incoming_server_requests_and_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/OutgoingMeta#ResponseToIncoming#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/client_disconnect_twice()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/client_disconnect_twice()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/group_invitation_revoked_update_error_is_legible()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[GroupChatUpdate][`TryFrom<proto::group_change_chat_update::update::Update>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/test/group_invitation_revoked_update_error_is_legible()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InviterMismatch#"
  "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update_and_get()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicMac]update()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/anonymous_server_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]as_waker()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/early_read_gets_woken_up()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]was_woken()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#Absent#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithSize#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Error#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithRoot#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/Baseline#WithTimestamp#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#Verifier#" -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/VerifierOutcome#NoVerificationNeeded#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[PathPart]from_part()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[`Path<'_>`]owned_parts()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/Path#Branch#"
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]to_token()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse][Clone]clone()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerDerivedKeyPair]verify()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsWrongNumberOfScalarArgs#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_scalars()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsMissingScalarArg#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/first_ok()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#TcpConnectionFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]is_empty()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#DnsError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]source()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[FakeChatConnect][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[FakeChatConnect][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[FakeChatConnect][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]into_listener()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]proof_statement()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMCommunicationError#"
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidPublicKeyError#"
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#TrustedCodeError#"
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMHandshakeError#"
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidCodeHashError#"
  "rust-analyzer cargo attest 0.1.0 hsm_enclave/impl#[Error][Display]fmt()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TestingChatSendError#RequestTimedOut#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_types()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_types()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_types()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/rejects_invalid_types()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/service_id_tests/array_prepend()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[`RequestError<E>`][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[`RequestError<E>`][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[`RequestError<E>`][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[`RequestError<E>`][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_basic_simultaneous_initiate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialPresentation_GetReceiptExpirationTime()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_expiration_time()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1Initialize()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/abort_on_panic()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1Initialize()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/impl#[JniLogger]new()."
  "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/Java_org_signal_libsignal_internal_Native_Logger_1Initialize()." -> "rust-analyzer cargo libsignal-jni-impl 0.70.0 logging/set_max_level_from_java_level()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AsType<T, P>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/SimpleArgTypeInfo#convert_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/debug_flag()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/debug_flag()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/debug_flag()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 message_backup/MessageBackupKey_FromAccountEntropyPool()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 message_backup/impl#[MessageBackupKey]from_account_entropy_pool()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[WebSocketServiceError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<TungsteniteSendError>`]from()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[Aes256GcmDecryption]new()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber768_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]as_waker()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_write()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]wake_count()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/wake_count_during_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotShowOnlyUnread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustIncludeIndividualChats#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustShowMuted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolder#All#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotExcludeChats#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustNotHaveSpecificIncludes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderInvalidName#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#MissingId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#InvalidId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/impl#[`ChatFolder<R>`]validate_all_chat_folder()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat_folder/ChatFolderError#AllFolderMustIncludeGroupChats#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 test/oneof()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 test/message()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Option<T>`][`ArgTypeInfo<'storage, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/ArgTypeInfo#borrow()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#DelayForever#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#End#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/TransportConnectEventStage#Start#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]connect_with_events()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[TransportConnectEvent][`From<FakeTransportTarget>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[EndorsementServerRootKeyPair]public_key()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key_bytes()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_identity_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&T`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/native_handle_cast()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&T`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`ConstPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingTokenAck#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#AwaitingLookupRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry][FixedLengthSerializable]serialize_into()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/FakeServerState#Finished#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/test/impl#[FakeServerState]receive_frame()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]message()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]send_request()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#InvalidConfiguration#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpoint<'_, E>`]route_provider()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#map_routes()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/impl#[`DirectOrProxyProvider<D, ConnectionProxyRouteProvider<D>>`]maybe_proxied()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]new_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`EnclaveEndpointConnection<E, C>`]ws2_config()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[AccountEntropyPool][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[String][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadJniParameter#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 cursor_without_appended_hash()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<frame::FramesReader<R>>`]new_encrypted_compressed()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/aes_read/impl#[`Aes256CbcReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 benchmark_multiple_backup_sizes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`MacReader<R, CoreWrapper<HmacCore<CoreWrapper<CtVariableCoreWrapper<Sha256VarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, OidSha256>>>>>`]new_sha256()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]parse_and_add_frame()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`BackupReader<R>`]validate_all()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 process()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GeneratePrivateKeyWithFormat()." -> "rust-analyzer cargo device-transfer 0.1.0 create_rsa_private_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GeneratePrivateKeyWithFormat()." -> "rust-analyzer cargo device-transfer 0.1.0 impl#[KeyFormat][`From<u8>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/VerificationTransport#Voice#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegisterResponseEntitlements][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupSnapshot`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupSnapshot`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::GroupSnapshot`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupCreationUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_encrypt_with_padding()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_with_padding()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_encrypt_with_padding()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/tests/test_encrypt_with_padding()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_blob_with_padding()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#PathPrefix#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#Generic#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]decorate_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 HttpRequestDecorator#Headers#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]replace_locally_resolved()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/passthrough()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/passthrough()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/test_factory()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/passthrough()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/test/pre()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[AlwaysInCooldown][ConnectionManager]connect_or_wait()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#OneDomainPerProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`HttpsProvider<F, P>`][RouteProvider]routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#ProxyF#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/test/connect_config_routes_enable_domain_fronting()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeError#FailedStateWithNonEmptyPresentation#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Valid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Failed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeError#InvalidReceiptCredentialPresentation#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Unopened#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Opened#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`TryFrom<proto::GiftBadge>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadgeState#Redeemed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/TryFromWith#try_from_with()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyBundle_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSealedSenderMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId][`From<SpecificServiceId<_>>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/decode_varint()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/advance()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey][`From<[u8; PRIVATE_KEY_LENGTH]>`]from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[`mpsc::UnboundedSender<ListenerEvent>`][IntoEventListener]into_event_listener()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/continues_on_invalid_incoming_message()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/registration/session_not_found()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/impl#[SimpleRootCalculator]insert()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/tree_hash()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_monitor()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_monitor()."
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 transport_connects_but_websocket_never_responds()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_read()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException]from_value()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_read()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_read()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/io/impl#[NodeInputStream]do_read()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[AliceSignalProtocolParameters]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_settle()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 store_like/double_name_from_store_using_join()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_callback()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_post_await()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_during_callback()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_callback_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_pre_await()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 increment_async()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_post_await()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/panic_during_settle()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 register()." -> "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_pre_await()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_OnlyCompletesByCancellation()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Responder]send_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]message()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/listener_panic_on_receive_incoming()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/impl#[Error][`From<log::Error>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/Error#VerificationFailed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#NoAdHocRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidAdHocRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/impl#[`AdHocCall<R>`][`TryFromWith<proto::AdHocCall, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#DistributionList#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<S>`]credential_core()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair<ReceiptCredential>`]create_blinded_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#SendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#RetryLater#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#InvalidSessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[RequestVerificationCodeErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeErrorDiscriminants#SessionNotFound#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain][Domain]G_a()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`FutureTask<F>`][Wake]wake()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 executor/impl#[`FutureTask<F>`]poll()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ScannableFingerprint_Compare()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/ScannableFingerprint_Compare()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerPack`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/test/fingerprint_test_v1()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`SpecificServiceId<_>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`SpecificServiceId<_>`][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[ExpirationTooSoon][Display]fmt()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]into_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/username_hash()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]monitor()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/monitor_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]absorb_and_ratchet()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]saturating_seconds_since()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]decrypt_blinded_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_base_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_signed_pre_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]with_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_ratchet_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_one_time_pre_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]our_kyber_pre_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/params/impl#[`BobSignalProtocolParameters<'a>`]their_kyber_ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_bob_session()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredential_GetReceiptExpirationTime()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential/impl#[ReceiptCredential]get_receipt_expiration_time()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#DeviceTransfer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair][`TryFrom<PrivateKey>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::PaymentNotification`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::PaymentNotification`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_root_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]key()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_tries_remaining()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/run_ffi_safe()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_tries_remaining()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/write_result_to()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_tries_remaining()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 signal_error_get_tries_remaining()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/FfiError#provide_tries_remaining()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]finalize_public_attrs()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_point()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgs#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#Method#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#UriParts#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#Unknown#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#HeaderValue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#Uri#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#StatusCode#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/HttpFormatError#HeaderName#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_id()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/invalid_message_error_parsing_id()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http1_1#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#ProxyF#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][RouteProviderContext]random_usize()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_save_kyber_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_save_kyber_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_save_kyber_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeKyberPreKeyStore]do_save_kyber_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/has_version_changed_between()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/cmp_by_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/has_version_changed_between()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[MonitoringData]greatest_version()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]finalize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Incremental<M>`]update()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/simple_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/new_incremental()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#map_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]into_inner()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ws/impl#[WebSocketRouteFragment][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tcp#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#TcpThroughProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Tls#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Https#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ConnectionProxyRoute#Socks#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/impl#[FakeTransportTarget]from_proxy_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/KyberSecretKey_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[SystemDnsLookup][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[SystemDnsLookup][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]is_empty()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[SystemDnsLookup][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_lookup/impl#[SystemDnsLookup][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#SystemLookup#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]get_signed_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore][SignedPreKeyStore]get_signed_pre_key()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`super::StatelessProxied`][`Connector<SocksRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[Protocol]connect_to_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`super::StatelessProxied`][`Connector<SocksRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/ConnectorExt#connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`super::StatelessProxied`][`Connector<SocksRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`super::StatelessProxied`][`Connector<SocksRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ProxyProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`super::StatelessProxied`][`Connector<SocksRoute<IpAddr>, ()>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DuplicateRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidId#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_complete()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/CdsiLookup_complete()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[CdsiLookup]take_remaining()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PlaintextContent#"
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_source()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[EnclaveIdentity]tcb_status()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_source()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#UpToDate#"
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_source()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_enclave_source()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/EnclaveType#Qe#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResolvedRoutes<R>`][IntoIterator]into_iter()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][`Extend<(K, V)>`]extend()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`]recalculate_keys()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/RouteDelayPolicy#wants_recalculation()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]pop()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#PulledFromResolver#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]peek()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#RecalculateDelays#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/Event#ReturnNextIndividualRoute#"
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]finalize_public_attrs()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]finalize_public_attrs()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]local_registration_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]session_state()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]poll()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/right()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]poll()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/is_leaf()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]poll()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/left()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/NewHandshake#new_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Other#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#WebSocketConnect#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/Error#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#NoResolvedRoutes#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#map_routes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_fast_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`][`Connector<R, Inner>`]connect_over()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_fast_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_log_tag()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/tests/test_fast_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::ChatStyle`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/chat_style()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[TextOrBinary][`From<crate::proto::chat_websocket::WebSocketMessage>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[TextOrBinary][`From<crate::proto::chat_websocket::WebSocketMessage>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/impl#[TextOrBinary][`From<crate::proto::chat_websocket::WebSocketMessage>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/zip3()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_Create()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/UsernameLink_Create()." -> "rust-analyzer cargo usernames 0.1.0 username_links/create_for_username()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PrivateKey_Deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PrivateKey_Deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ClientAbort#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#Connect#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Intermittent#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/impl#[RetryLater]duration()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#RetryAt#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 extract_retry_later()."
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/WebSocketServiceConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]finish_connect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]finish_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketStream<S>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectStoryReplyNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#ViewOnce#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#GiftBadge#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInWrongIndividualChat#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Update#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ReleaseNoteMessageNotInReleaseNoteChat#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInNoteToSelf#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#MessageFromContactInReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatRecipientKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Standard#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Voice#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ReferencedTypes#is_same_reference()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Sticker#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#RemoteDeleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`]validate_chat_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#PaymentNotification#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatRecipientKind]is_contact_with_aci()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#PaymentNotificationNotInContactThread#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`]validate_chat_recipient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#DirectStoryReply#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/pem_chain_for_field()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]with_context()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/pem_chain_for_field()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/data_for_field()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/pem_chain_for_field()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]from_pem_data()."
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Debug#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Error#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Info#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Trace#"
  "rust-analyzer cargo libsignal-ffi 0.70.0 logging/impl#[LogLevel][`From<log::Level>`]from()." -> "rust-analyzer cargo libsignal-ffi 0.70.0 logging/LogLevel#Warn#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/impl#[`ConnectError<E>`][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ConnectError#RejectedByServer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/impl#[`ConnectError<E>`][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/impl#[`ConnectError<E>`][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Intermittent#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/impl#[`ConnectError<E>`][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 service/impl#[`ConnectError<E>`][ErrorClassifier]classify()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 service/ConnectError#AllRoutesFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`][`From<IpAddr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_option_map_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/TransformHelperImpl#option_map_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_option_map_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<Option<T>>`]option_map_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/test/test_option_map_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/transform_helper/impl#[`TransformHelper<T>`]into()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_key_for_logging()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 is_session_id_equal()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]alice_base_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveBackupId()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#TrustedCodeError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMHandshakeError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidCodeHashError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMCommunicationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[HsmEnclaveError][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidPublicKeyError#"
  "rust-analyzer cargo usernames 0.1.0 username_proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]proof()."
  "rust-analyzer cargo usernames 0.1.0 username_proof()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationResponse]into_websocket_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]resume_session()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/test/impl#[`ConnectOnlyOnce<testutil::FakeChatConnect>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/test/resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]session_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/clone_from_wrapper()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`BorrowedJsBoxedBridgeHandle<'a, Borrowed>`][Deref]deref()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/clone_from_wrapper()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`BorrowedJsBoxedBridgeHandle<'a, Borrowed>`]from_wrapper()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_round_trip()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<B>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_round_trip()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/PadCompressed#Pad#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_round_trip()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_round_trip()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/frame_round_trip()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/PadCompressed#NoPad#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[ChatItemAuthorKind]is_contact_with_aci()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#PushChallenge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`libsignal_net::registration::RequestedInformation`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/RequestedInformation#Captcha#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[`Host<D>`][`From<&TcpRoute<IpAddr>>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new_with_body()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpRequest]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new_with_body()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`][KyberPreKeyStore]mark_kyber_pre_key_used()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'_>`]do_mark_kyber_pre_key_used()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#Reaction#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyContent#Text#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#Text#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#LongText#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/test/impl#[`Reaction<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/ReactionError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/TextError#MentionInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/text/test/impl#[MessageText]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#MissingReply#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#EmptyEmoji#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`FromIterator<Reaction<R>>`]from_iter()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/valid_story_reply_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/DirectStoryReplyError#EmptyText#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation_v3()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[EnclaveIdentity]tcb_status()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#Revoked#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[AccountEntropyPool][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[AccountEntropyPool][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair][`Deserialize<'de>`]deserialize()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#AlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#WriteBufferFull#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#fake()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]write()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]read()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]initial_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]complete()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or_else()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#UnexpectedClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_ipv6_enabled_flag_is_passed_with_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_ipv6_enabled_flag_is_passed_with_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_ipv6_enabled_flag_is_passed_with_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]logged_requests()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_ipv6_enabled_flag_is_passed_with_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_ipv6_enabled_flag_is_passed_with_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#Jni#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSessionCipher_DecryptToUsmc()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#AppExpired#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#AppExpired#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#DeviceDeregistered#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`libsignal_net::chat::ConnectError`][FfiError]code()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#InvalidConnectionConfiguration#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[ErrorOnBorrow][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/missing_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/CompletionError#MissingSelfRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/missing_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`CompletedBackup<M>`][`TryFrom<PartialBackup<M>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/missing_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/missing_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/TestPartialBackupMethod#empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/missing_self()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_GetRequest()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Host<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`Host<A>`][ResolveHostnames]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`ComposedConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`ComposedConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][Clone]clone()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/replace/impl#[`ComposedConnector<Outer, Inner, Error>`][ReplaceStatelessConnectorsWithFake]replace_with_fake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]into_connectors()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_data()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]identity_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeySignalMessage_GetIdentityKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/impl#[`ComposedConnector<A, B, Error>`][`Connector<super::SimpleRoute<WebSocketRouteFragment, super::SimpleRoute<HttpRouteFragment, T>>, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]connect_inner_then_outer()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_GetServerCertificate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]signer()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/start_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]send()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]verify_signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]distribution_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]chain_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyMessage_VerifySignature()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]iteration()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_decode_size()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_decode_size()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_decode_size()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_decode_size()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]new()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_most_recent()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]new()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]for_version()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#InvalidConnectionState#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[Handshake]complete()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#ConnectionEstablishment#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#Connection#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_singleton()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_singleton()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_singleton()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()."
  "rust-analyzer cargo attest 0.1.0 dcap/evidence/impl#[`Evidence<'a>`][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`Result<T, ContextError<D>>`][`Context<T>`]context()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[AciAndAccessKey][FixedLengthSerializable]serialize_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[Uuid][`From<SpecificServiceId<KIND>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[AciAndAccessKey][FixedLengthSerializable]serialize_into()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[Uuid][FixedLengthSerializable]serialize_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`http::uri::InvalidUri`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidArgument#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#WriteBufferFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#AlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/make_connect_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/make_connect_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#InvalidRequest#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/make_connect_request()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/ConnectError#InvalidUri#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<ResumeSessionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<ResumeSessionError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/ResumeSessionError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<ResumeSessionError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<ResumeSessionError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#InvalidSessionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/impl#[`VarintDelimitedReader<R>`]read_next_varint()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 parse/fill_buffer_from_reader()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`ConstPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[FfiChatListenerStruct]make_listener()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_key_flags_conflict_with_key_parts_flags()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#DeviceTransfer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 test/cli_parse_derive_key_flags_conflict_with_key_parts_flags()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/Purpose#RemoteBackup#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/keytrans/make_e164_pair()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidRequest#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectionInvalidated#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestHasInvalidHeader#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#RequestTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#ConnectedElsewhere#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::chat::SendError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/SendError#IncomingDataInvalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`(CustomColorId, CustomChatColor)`][`TryFrom<proto::chat_style::CustomChatColor>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#NoCustomColor#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#EnclaveProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#RateLimited#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ParseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidResponse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#Server#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectTransport#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#WebSocket#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::infra::errors::RetryLater`][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#CdsiProtocol#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#ConnectionTimedOut#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::cdsi::LookupError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[S][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_GetSignatureKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]signing_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_GetSignatureKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_GetSignatureKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_GetSignatureKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderKeyDistributionMessage_GetSignatureKey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::SelfInvitedOtherUserToGroupUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ConnectChatBridge>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniConnectChatBridge]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_addE164()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[LookupRequest]lock()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[MinimalRecipientData][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/MinimalRecipientData#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/AsyncReaderFactory#Cursor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 support/AsyncReaderFactory#File#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`FileReaderFactory<P>`][ReaderFactory]make_reader()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 support/impl#[`AsyncReaderFactory<'a>`][ReaderFactory]make_reader()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`CursorFactory<&B>`][ReaderFactory]make_reader()."
  "rust-analyzer cargo libsignal-net 0.1.0 parse_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net 0.1.0 parse_target()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[CreateSessionErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionErrorDiscriminants#InvalidSessionId#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[CreateSessionErrorDiscriminants][AsStatus]as_status()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionErrorDiscriminants#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`std::str::Utf8Error`][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidUtf8String#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[u32][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#IntegerOverflow#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/impl#[`proto::NotificationProfile`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/notification_profile/test/profile()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupResponseConvert()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_CdsiLookupResponseConvert()." -> "rust-analyzer cargo libsignal-core 0.1.0 e164/impl#[E164]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][`LookupPair<RecipientId, MinimalRecipientData, FullRecipientData>`]lookup_pair()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][`AsRef<MinimalRecipientData>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]from_pb()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/decrypt_message_with_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new_fresh()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt_prekey()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/create_decryption_failure_log()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Hash()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]hash()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 usernames/Username_Hash()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, Result<T, PersistentException>>`]then_try()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, Result<T, PersistentException>>`]then_try()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/SpaceError#SendQueueFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#BadUtf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#UnexpectedTlsError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Http#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Url#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[HttpFormatError][`From<E>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[SpaceError][`From<tungstenite::error::CapacityError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#HttpFormat#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Space#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[ProtocolError][`From<tungstenite::error::ProtocolError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[LogSafeTungsteniteError][`From<&tungstenite::Error>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/LogSafeTungsteniteError#Closed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#DeviceTransferPossibleNotSkipped#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::infra::errors::RetryLater`][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#VerificationSendFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RequestInvalid#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#VerificationNotDeliverable#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RecoveryVerificationFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RegistrationLock#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RequestRejected#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]value()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]get_identity()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/run_attested_interaction()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/run_attested_interaction()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[TcpStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[TcpStream][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[IpType][`From<&IpAddr>`]from()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/NumericFingerprintGenerator_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/NumericFingerprintGenerator_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[Fingerprint]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/EncryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_id_known_from_master_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V0>`]derive_from_master_key()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/test/backup_id_known_from_master_key()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<VERSION>`]derive_backup_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/read_name()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#RequestFailedWithErrorCode#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/sleep_and_catch_up()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]logged_requests()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_in_flight_requests_respect_ipv6_flag_value()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#UnexpectedMessageId#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]resolve()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#RequestedIpTypeNotFound#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/test_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/impl#[`TestDnsTransportWithResponses<RESPONSES>`]custom_dns_resolver()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/returns_error_if_both_results_fail()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/test/respond_after_timeout()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_binary()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber768#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 bench_kem()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_save_sender_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[RouteProviderContextImpl][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_from_static_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolvedRoute]immediate_target()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]resolve()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/test/cooldowns_reset_on_network_change_even_during_connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_get_session()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore][SessionStore]load_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Fail#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#ReturnStream#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#DelayForever#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Delay#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/impl#[Behavior]apply()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Unreachable#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`Reaction<Recipient>`][SerializeOrder]serialize_cmp()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/reactions/impl#[`ReactionSet<R>`][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/unordered_list/impl#[`UnorderedList<T>`]iter()."
  "rust-analyzer cargo attest 0.1.0 enclave/impl#[Error][`From<prost::DecodeError>`]from()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#AttestationDataError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/kyber_prekey/impl#[KyberPreKeyRecord]secret_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]deserialize()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/bad_mrsigner()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/bad_mrsigner()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/bad_mrsigner()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]pck_crl()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'_>`][EcdsaSigned]data()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]serialize_attest_public_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[SigningInfo]root_crl()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'_>`][EcdsaSigned]data()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[CertChain]from_certs()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/tests/test_alternate_identity_signing()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/impl#[PublicKey][KeySerde]serialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]new_from_seed()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]calculate_base_material()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 exception/impl#[PersistentException]new()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]from_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/settle_promise()."
  "rust-analyzer cargo signal-neon-futures-tests 0.1.0 panics_and_throws/throw_post_await()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 promise/promise()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/bridge_io_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ffi/generate_code_to_load_input()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/full_subtrees()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/batch_copath()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/parent()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/level()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/left()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/right()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/sibling()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 log/math/test/test_math()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 left_balanced/log2()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Response#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/decode_and_validate()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/ReceiveRequestError#GotResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/ReceiveRequestError#InvalidWebsocketMessageType#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceMonitor<Inner>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ClientAbort#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/preconnect/impl#[`PreconnectingFactory<R, F>`]save_preconnected()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#InterfaceChanged#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectWithSavedRoute<C>`][`Connector<R, Inner>`]connect_over()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#Other#"
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement][Default]default()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo poksho 0.7.0 sign/tests/test_signature()." -> "rust-analyzer cargo poksho 0.7.0 sign/sign()."
  "rust-analyzer cargo poksho 0.7.0 sign/tests/test_signature()." -> "rust-analyzer cargo poksho 0.7.0 sign/verify_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]sign()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#NoRingerRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#RingerHasNoAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidCallStarter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#CallStarterHasNoAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownState#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#InvalidRingerRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/CallError#UnknownCallStarter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/impl#[`proto::GroupCall`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/test/valid_group_call()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/call/GroupCallState#Accepted#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#Enumerated#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<asn1::Enumerated>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[SgxType][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector]with_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector]with_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver][Clone]clone()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]key_type()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PrivateKeyData#DjbPrivateKey#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]key_type()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]private_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpRequest]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`][`LookupPair<RecipientId, MinimalRecipientData, <M as ReferencedTypes>::RecipientReference>`]lookup_pair()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ReferencedTypes#recipient_reference()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniKyberPreKeyStore<'a>`]new()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/standard_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_data()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/CryptographicHash_Update()." -> "rust-analyzer cargo signal-crypto 0.1.0 hash/impl#[CryptographicHash]update()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_get_signed_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_get_signed_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSignedPreKeyStore]do_get_signed_pre_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<super::TlsRouteFragment, A>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`TcpRoute<A>`][ResolveHostnames]hostnames()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`super::SimpleRoute<HttpProxyRouteFragment<A>, Either<super::SimpleRoute<super::TlsRouteFragment, TcpRoute<A>>, TcpRoute<A>>>`][ResolveHostnames]hostnames()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[`ProxyTarget<A>`]locally_resolved_hostnames()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[ServiceId][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_ipv6_enabled()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/match_optional_fields()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/match_optional_fields()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#InvalidResponse#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/match_optional_fields()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`MaybePartial<T>`]new_complete()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/method/Method#value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/AccountDataError#UnknownPhoneNumberSharingMode#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/PhoneSharing#WithEverybody#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Duration]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/PhoneSharing#WithNobody#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/impl#[`AccountSettings<M>`][`TryFromWith<proto::account_data::AccountSettings, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`ChatStyle<M>`]try_from_proto()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/derive_keys_with_label()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 logging/tests/accepted()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Null#" -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Null#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Null#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Jni#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/JniErrorOrNull#Null#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver]resolve()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/eagerly_resolve_each()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]compute_mac()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]ciphertext_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]public_key_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]secret_key_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_dyn_parameters_consts()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[T][DynParameters]shared_secret_length()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_resets_cooldown_on_network_changed()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/KeyType#Djb#"
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]key_type()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/PublicKeyData#DjbPublicKey#"
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Cdsi][NewHandshake]new_handshake()." -> "rust-analyzer cargo attest 0.1.0 cds2/new_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[Cdsi][NewHandshake]new_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/file_pointer()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::FilePointer`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/file_pointer()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][`TryFromWith<proto::FilePointer, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/file_pointer()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v2_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v2_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v2_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_profile_key_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v2_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_uuid_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v2_as_v1()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[ProfileKeyCredentialPresentationV1]get_uuid_ciphertext()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Administrator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberRoleUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Default#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMember][`TryFrom<proto::group::Member>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SenderKeyStore]store_sender_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][SenderKeyStore]store_sender_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetProfileKeyCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKeyCredentialPresentation_GetProfileKeyCiphertext()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_presentation/impl#[AnyProfileKeyCredentialPresentation]get_profile_key_ciphertext()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/establish_chat_connection()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]finish_connect()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedAlerts#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#Finished#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[Public][KeyKind]key_length()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyType]parameters()."
  "rust-analyzer cargo device-transfer 0.1.0 impl#[Error][Display]fmt()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#KeyDecodingFailed#"
  "rust-analyzer cargo device-transfer 0.1.0 impl#[Error][Display]fmt()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberJoinedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/add_user_agent_header()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/add_user_agent_header()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecorator]header()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/add_user_agent_header()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[HttpRequestDecoratorSeq]add()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]name()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 v2()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/extract_single_ssv2_received_message()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_remote_config()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_remote_config()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/ConnectionManager_set_remote_config()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[BridgedStringMap]take()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[FakeChatConnection]into_authenticated()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`libsignal_net::infra::errors::RetryLater`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StandardMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::DirectionlessMessageDetails`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ContactMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::PaymentNotification`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::OutgoingMessageDetails`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ViewOnceMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::chat_item::IncomingMessageDetails`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::RemoteDeletedMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::StickerMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::DirectStoryReplyMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatUpdateMessage`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[SgxPreQuantum][NewHandshake]new_handshake()." -> "rust-analyzer cargo attest 0.1.0 svr2/new_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[SgxPreQuantum][NewHandshake]new_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`&RaftConfig`][`AsRaftConfig<'a>`]as_raft_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[SgxPreQuantum][NewHandshake]new_handshake()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[`MrEnclave<Bytes, S>`][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-net 0.1.0 enclave/impl#[SgxPreQuantum][NewHandshake]new_handshake()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/parse_hex_bytes()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseHexError#InvalidHexCharacter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 args/parse_hex_bytes()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 args/ParseHexError#WrongNumberOfDigits#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&mut T`][`SimpleArgTypeInfo<'_>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/native_handle_cast()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Text`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<Box<dyn ChatListener>>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[BridgeOrProtocolError][`From<BridgeLayerError>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_save_identity()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ReceiveError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#CapacityErrorMessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#ServerIdleTimeout#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#AlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ConnectionIdle#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Text#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#LocalDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#CloseFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#WriteBufferFull#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#AbnormalServerClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Utf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteSendError][`From<TungsteniteError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentPing#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedPingPong#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ClientDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/FinishReason#RemoteDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#PingFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#ServerSentInvalidUtf8#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ServerDisconnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#ToSend#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SentMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[TungsteniteError][`From<tungstenite::Error>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SendFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteReceiveError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#RemoteDisconnectedTimeout#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Event#Received#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmDecryption_Update()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmDecryption]decrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`proto::StandardMessage`]test_voice_message_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/test/voice_message()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]ratchet()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/Mode#RATCHETED#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[SignedPreKey]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/root_trust_store()." -> "rust-analyzer cargo attest 0.1.0 dcap/from_trusted()."
  "rust-analyzer cargo attest 0.1.0 dcap/root_trust_store()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()."
  "rust-analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalProtocolError][FfiError]provide_uuid()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/schedule_waits_for_first()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/test/schedule_waits_for_first()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]next()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/valid_gradient()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Gradient#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`NewMessageNotification<S>`]as_deref()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Gcm#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`NewMessageNotification<S>`]as_deref()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#WillFetchMessages#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`NewMessageNotification<S>`]as_deref()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/NewMessageNotification#Apn#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#NoFilePointer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/MessageAttachmentError#InvalidUuid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_send()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/HsmEnclaveClient#Connection#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_send()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_send()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 hsm_enclave/impl#[HsmEnclaveClient]established_send()." -> "rust-analyzer cargo attest 0.1.0 hsm_enclave/Error#HSMCommunicationError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[ServiceId][SimpleArgTypeInfo]convert_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]mac_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/tests/test_chain_key_derivation()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]cipher_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[GroupData]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidMasterKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_group()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidGroup#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#CodeNotDeliverable#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#RetryLater#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::AccountSettings`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::AccountSettings`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/execute_guide()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]insert()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/test/execute_guide()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]consume()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[PublicKeyOrId][MayHavePublicKey]public_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#PublicKey#"
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsWrongNumberOfScalarArgs#"
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#BadArgsWrongNumberOfPointArgs#"
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]new()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[ScalarArgs]add()."
  "rust-analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#VerificationFailure#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Random#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 run()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_kyber_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_simultaneous_initiate_repeated_messages()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[TestStoreBuilder]with_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/aes_256_ctr_encrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/EncryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatFolder`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ChatFolder`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`Direction<R>`][`TryFromWith<proto::chat_item::DirectionalDetails, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Outgoing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`Direction<R>`][`TryFromWith<proto::chat_item::DirectionalDetails, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`Direction<R>`][`TryFromWith<proto::chat_item::DirectionalDetails, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Incoming#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`Direction<R>`][`TryFromWith<proto::chat_item::DirectionalDetails, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Directionless#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`Direction<R>`][`TryFromWith<proto::chat_item::DirectionalDetails, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]on_network_change()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`SharedCacheWithGenerations<K, V>`]clear_and_advance()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]on_network_change()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]reset()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupInviteLinkAdminApprovalUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]get_pre_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/reader_returns_error()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniPreKeyStore<'_>`]do_save_pre_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]receive_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[RegistrationResponse]into_websocket_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/send_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]into_listener()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`ConnectChatFn<'_, F>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/testutil/impl#[`DropOnDisconnect<T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/test/send_request_retries_connect_on_transient_failure()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[ChatConnection]new_fake()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[`[u8; LEN]`][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[`[u8; LEN]`][`TryFrom<ExtensionValue<'a>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/ExtensionValue#OctetString#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[`ChatData<Store>`][SerializeOrder]serialize_cmp()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/serialize/impl#[FullRecipientData][SerializeOrder]serialize_cmp()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ChatMessageProto#Request#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]is_connected()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/fake/new_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[`crate::proto::chat_websocket::WebSocketMessage`][`From<ChatMessageProto>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/TextOrBinary#Binary#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Responder]send_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SendFailed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/test/send_failure_causes_disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/ListenerEvent#ReceivedMessage#"
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[SignalProtocolError][SignalNodeError]into_throwable()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-node 0.70.0 impl#[`ArrayBuilder<'a>`]push()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-node 0.70.0 impl#[`ArrayBuilder<'a>`]new()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'a>`]new()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]range_for_recipient_key_material()."
  "rust-analyzer cargo libsignal-node 0.70.0 sealed_sender_multi_recipient_message_parse()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]offset_of_shared_bytes()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_search_internal()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]peek()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]is_empty()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][`Extend<T>`]extend()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_heap_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinHeap<T>`][Queue]pop()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#LegacyCiphertextVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#CiphertextMessageTooShort#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[KyberPayload]new()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#CdsiProtocol#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#AttestationError#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/Read#AwaitingBlock#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/Read#ReadFromBlock#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][`ArgTypeInfo<'a>`]borrow()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]next()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyAllWithNonemptyMembers#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#CannotDeleteMyStory#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DistributionListItem#List#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberWrongKind#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidDistributionId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::DistributionListItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]contact_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberDuplicate#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyAllExceptWithEmptyMembers#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListMemberHasNoServiceIds#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/PrivacyMode#AllExcept#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyInvalid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_distribution_list()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#DistributionListPrivacyUnknown#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/assert_signal_message_equals()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`AsRef<[u8]>`]as_ref()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_pre_key_signal_message_serialize_deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/uuid_bytes_to_aci()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]decode()."
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/Mode#RATCHETED#"
  "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo device-transfer 0.1.0 create_rsa_private_key()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#"
  "rust-analyzer cargo device-transfer 0.1.0 create_rsa_private_key()." -> "rust-analyzer cargo device-transfer 0.1.0 private_key_to_der()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/impl#[DnsResolver][Resolver]lookup_ip()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#Error#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#String#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput]close()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/testutil/impl#[AttestedServerOutput][Default]default()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]class_name()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException][Display]fmt()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]message()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_alternating()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_start_without_duration()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_start_without_duration()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_start_without_duration()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/impl#[`ChatItemData<M>`][`TryFromWith<proto::ChatItem, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/expiration_start_without_duration()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ExpirationMismatch#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]key_pair()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]from_public_and_private()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_sender_error_if_no_receivers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/channel()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/test/oneshot_broadcast_sender_error_if_no_receivers()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/oneshot_broadcast/impl#[`Sender<T>`]send()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[InverseUidDecryptionKey][Domain]G_a()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/derive_default_generator_points()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[QeTcbLevel]from_parts()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#Revoked#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/qe_id_revoked_tcb_level()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/QeTcbStatus#UpToDate#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_sig()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/verify()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_sig()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/generate_key()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/isv_sig_bad_sig()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/tests/FailInfo#Isv#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]log_request()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup][DnsLookup]dns_lookup()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/NascentBuffer#NoInitialPayload#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_reader_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncRead]poll_read()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/start_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]wake_writer()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Nascent#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers][Default]default()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Established#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncRead]poll_read()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Handshake#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredential_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Disconnected#" -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]disconnect()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Disconnected#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/start_request()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Disconnected#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#RequestFinished#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Disconnected#" -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/Event#Incoming#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Serialized<T>`][ResultTypeInfo]convert_into()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_account_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/impl#[`proto::Chat`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_chat()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/account_data/test/impl#[`proto::AccountData`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data_contact()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/test/zero_chat_id()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatError#InvalidId#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#RetryAt#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Fatal#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError][ErrorClassifier]classify()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/WebSocketConnectError#Transport#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceChangedOr<E>`]into_inner_or_else()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/logging/impl#[`LoggingConnector<I>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 timeouts/TimeoutOr#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ErrorClass#Intermittent#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceMonitor<Inner>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectState<TC>`]snapshot()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ResettingConnectionOutcomes<R>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/composed/impl#[`ComposedConnector<O, I, E>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 errors/TransportConnectError#ClientAbort#"
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`ConnectionOutcomes<R>`]apply_outcome_updates()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`WithLoggableDescription<R, D>`][`UsesTransport<super::SimpleRoute<super::TlsRouteFragment, DirectOrProxyRoute<TcpRoute<IpAddr>, ConnectionProxyRoute<IpAddr>>>>`]into_transport_part()."
  "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_ws()." -> "rust-analyzer cargo libsignal-net 0.1.0 ws/impl#[WebSocketServiceConnectError]from_websocket_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniSessionStore<'_>`]do_store_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`][`Sink<RxItem>`]poll_close()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[`StreamSink<Tx, Rx, RxItem>`]project()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_requests_identical()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/create_request_with_id()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/valid_requests_identical()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/create_signal_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/tests/test_decryption_error_message()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`][ConnectionManager]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/simulate_connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#Attempted#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/impl#[CooldownAfterSomeAttempts][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_retries_the_same_option_until_cooldown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/compare_known_hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]create()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/compare_known_hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/encrypt_hmac_sha256_siv()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/compare_known_hash()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/test/impl#[Encrypted]concat()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/authenticate()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[WsClient]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey][`TryFrom<&[u8]>`]try_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]compress()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[Endorsement]compress()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionCipher_EncryptMessage()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/impl#[`VoiceMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/impl#[`VoiceMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#UnexpectedField#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/impl#[`VoiceMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#WrongAttachmentsCount#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/impl#[`VoiceMessage<R>`][`TryFromWith<proto::StandardMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/voice_message/VoiceMessageError#WrongAttachmentType#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_utils/log_safe_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[UnresolvedRouteDescription][Display]fmt()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 export/pad_gzipped_bucketed()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 padded_length()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[T][`ResultTypeInfo<'_>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Receiving#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`EnvHandle<'a>`]with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/find_class()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/traits/Direction#Sending#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/protocol_address_to_jobject()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/storage/impl#[`JniIdentityKeyStore<'_>`]do_is_trusted_identity()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/jobject_from_native_handle()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/full_monitoring_path()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_frontier()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/full_monitoring_path()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/monitoring_path()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/full_monitoring_path()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/frontier()."
  "rust-analyzer cargo usernames 0.1.0 username/test/nickname_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/nickname_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]validate()."
  "rust-analyzer cargo usernames 0.1.0 username/test/nickname_limits()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_fallback_timing()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]with_custom_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_fallback_timing()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_fallback_timing()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_fallback_timing()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ValidationError#EmptyFrame#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]add_frame_item()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 name_for_meta_key()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 value_for_meta_key()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]add_blinded_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]add_blinded_revealed_attribute()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/mrenclave_bytes()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[UnvalidatedHandshake]skip_raft_validation()."
  "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()." -> "rust-analyzer cargo attest 0.1.0 enclave/HandshakeType#PreQuantum#"
  "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/handshake_from_tests_data()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionRecord_ArchiveCurrentState()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[DomainConfig]static_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[DomainConfig]static_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Static#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/ReasonToCheck#Poll#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/ReasonToCheck#NetworkChangeEvent#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/ReasonToCheck#Poll#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/ReasonToCheck#Poll#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#InterfaceChanged#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#MissingDataPointer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/impl#[`proto::Sticker`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#DataPointer#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/FilePointerError#NoLocator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[FilePointer][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#InvalidPackId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/test/valid_message_sticker()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/sticker/MessageStickerError#InvalidPackKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/invalid_transaction_identification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/impl#[`proto::payment_notification::transaction_details::Transaction`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/invalid_transaction_identification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/impl#[Transaction][`TryFromWith<proto::payment_notification::transaction_details::Transaction, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/payment/test/invalid_transaction_identification()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner][Wake]wake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner]with_lock()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[Inner][Wake]wake()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[`Option<Waker>`][WakerExt]wake_if_some()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<Ipv4Addr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[LookupResult][`From<Ipv4Addr>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[ServiceId][`ValidateFrom<Vec<u8>>`]validate_from()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/impl#[ServiceId][`ValidateFrom<Vec<u8>>`]validate_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/group/GroupUpdateFieldError#InvalidServiceId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[PanicOnLoad][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()."
  "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]get_request()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]add_receiver_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]root_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_sender_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]sender_ratchet_private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_previous_counter()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_sender_chain()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_root_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_chain_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[RootKey]create_chain()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceIdKind][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_fixed_width_binary()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_point()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add_scalar()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext][Default]default()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/testutils/impl#[FakeContext]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialResponse_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#timestamp()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/cdsi/LookupRequest_setToken()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/cdsi/impl#[LookupRequest]lock()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_success()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/make_timestamp()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/test/verify_timestamps_success()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 verify/verify_timestamp()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredentialPresentation_GetReceiptSerial()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_serial_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/quote()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/impl#[`Quote<R>`][`TryFromWith<proto::Quote, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/quote()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::Quote`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/quote()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]new()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits][Default]default()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]format_parts()."
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotStartWithDigit#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#BadNicknameCharacter#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameCannotBeEmpty#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameError#NicknameTooLong#"
  "rust-analyzer cargo usernames 0.1.0 username/test/invalid_nicknames()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<T>`]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Public>`]encapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[`Key<Secret>`]decapsulate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 kem/tests/test_kyber1024_keypair()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]calculate_agreement()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/NascentBuffer#NoInitialPayload#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Nascent#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`SocksStream<TcpStream>`][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`Socks4Stream<TcpStream>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`SocksStream<TcpStream>`][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`Socks5Stream<TcpStream>`][Connection]transport_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`SocksStream<TcpStream>`][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/SocksStream#Socks4#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`SocksStream<TcpStream>`][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/SocksStream#Socks5#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]set_ipv6_enabled()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[TcpSslConnector]set_ipv6_enabled()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[Timestamp][`ResultTypeInfo<'_>`]convert_into()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]epoch_millis()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[ProofGuide]insert()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 guide/impl#[VersionedId]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#GradientLengthMismatch#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#GradientEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/empty_gradient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#ChatColorNotOpaque#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/uneven_gradient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/invalid_gradient_position()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/complex_gradient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/non_opaque_color()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#UnsupportedGradient#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/error_response_code_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/error_response_code_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/error_response_code_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#RequestFailedWithErrorCode#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/error_response_code_handled_correctly()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_bytes()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[String][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`ParseErrorReport<ParseError>`][MessageOnlyExceptionJniError]exception_class()." -> "rust-analyzer cargo libsignal-core 0.1.0 try_scoped()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/get_encoded_string()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`][Future]poll()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Pending#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`][Future]poll()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Settled#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`][Future]poll()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/JsFutureState#Consumed#"
  "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`][Future]poll()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFutureState<T>`]waiting_on()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`&[u8]`][`AsyncArgTypeInfo<'a>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[PersistentAssumedImmutableBuffer]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignedPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignedPreKeyRecord_New()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, TC>`]connect_attested_ws()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[WithoutResponseHeaders]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[CdsiConnection]connect_with()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottlingConnector<C>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/error_all_hosts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Delay#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/error_all_hosts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#Fail#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/error_all_hosts_after()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`][`TryFrom<String>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/CreateSessionError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`][`TryFrom<String>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`][`TryFrom<String>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_proof_to_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/tests/test_proof_to_hash()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromUsernameMrenclave()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 error/Error#MrenclaveLookupError#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromUsernameMrenclave()." -> "rust-analyzer cargo attest 0.1.0 svr2/lookup_groupid()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromUsernameMrenclave()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]make_salt()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/PinHash_FromUsernameMrenclave()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 hash/impl#[PinHash]create()."
  "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Default#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Resendable#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/FfiContentHint#Implicit#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Resendable#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_anonymous_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/anonymous_server_handshake()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_anonymous_handshake_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_anonymous_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Authorization#Anonymous#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_anonymous_handshake_success()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/testutil/echo_forever()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/test/encrypted_stream_anonymous_handshake_success()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_ResumeSession()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]resume_session()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/registration/RegistrationService_ResumeSession()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_basic_encrypt_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact_attachment::Phone`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#AllDomains#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`HttpsProvider<F, P>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#No#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[DomainFrontRouteProvider]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/HttpVersion#Http1_1#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tcp/impl#[DirectTcpRouteProvider]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]route_provider()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/tls/impl#[`TlsRouteProvider<T>`]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]poll_shutdown()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Established#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Nascent#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_shutdown()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/waker/impl#[SharedWakers]save_writer_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/impl#[`EncryptedStream<S>`][AsyncWrite]poll_shutdown()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/encrypted_stream/Inner#Handshake#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmEncryption_New()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 crypto/impl#[Aes256GcmEncryption]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`crate::support::ServiceIdSequence<'a>`][`AsyncArgTypeInfo<'a>`]load_async_arg()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/sequences/impl#[`ServiceIdSequence<'a>`]parse()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()." -> "rust-analyzer cargo attest 0.1.0 dcap/attest()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()." -> "rust-analyzer cargo attest 0.1.0 dcap/TcbStanding#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_zero()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/expand_top_bit()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]tag_info()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]is_day_aligned()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]saturating_seconds_since()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`Vec<&[u8]>`][`ArgTypeInfo<'a>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/extend_lifetime()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_add_header()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/HttpRequest_add_header()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[HttpRequest]add_header()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[NicknameLimits]validate()."
  "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts()." -> "rust-analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 bench_verify_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 impl#[KeyTransparency]verify_search()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 bench_verify_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 bench_verify_search()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key_from_tag_scalar()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]get_user_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]get_request()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response()." -> "rust-analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[libsignal_net::registration::RegisterResponseBadge]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/make_array()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&mut [u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]load_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SessionStore]store_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]identity_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][SignedPreKeyStore]save_signed_pre_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/initialize_sessions_v3()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/bundle/impl#[PreKeyBundle]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]reset()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/signed_prekey/GenericSignedPreKey#new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_encrypt_result()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintParsingError#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 fingerprint/impl#[ScannableFingerprint]compare()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#FingerprintVersionMismatch#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/impl#[ProxyService][`Service<Request<Incoming>>`]call()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/impl#[ProxyService][Clone]clone()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/https/test/impl#[ProxyService][`Service<Request<Incoming>>`]call()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 AsHttpHeader#as_header()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]get_poksho_statement()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential_presentation/impl#[ReceiptCredentialPresentation]get_receipt_struct()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tls#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/behavior/Behavior#ReturnStream#"
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/lookup_result/impl#[LookupResult]iter()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/only_direct_routes()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/target/FakeTransportTarget#Tcp#"
  "rust-analyzer cargo libsignal-keytrans 0.0.1 benches()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 bench_verify_search()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]body()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`From<DecryptionErrorMessage>`]from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_encrypt_from_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/message_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]serialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessage#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]sender_ratchet_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]for_original()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Default#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/extract_decryption_error_message_from_serialized_content()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[DecryptionErrorMessage]timestamp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[CiphertextMessage]message_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]msg_type()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 test_decryption_error_in_sealed_sender()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/err_for_close()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupError][`From<prost::DecodeError>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]send()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[ClientResponseCollector]collect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`NextOrClose<T>`]next_or_else()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/returns_error_on_resolution_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#NoData#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/returns_error_on_resolution_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/returns_error_on_resolution_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResolver]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/returns_error_on_resolution_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/resolve_route()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/test/returns_error_on_resolution_failure()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/resolve/testutils/impl#[FakeResponder]hostname()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/test_verify_remote_attestation_expired_attestation()." -> "rust-analyzer cargo attest 0.1.0 dcap/verify_remote_attestation()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#WaitingForListener#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]disconnect()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#TemporarilyEvicted#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[PendingChatConnection]disconnect()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`AssumedImmutableBuffer<'_>`][Drop]drop()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/calculate_checksum_for_immutable_buffer()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_point()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[SystemParams]generate()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/revocation_list/impl#[RevocationList][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 util/system_time_to_asn1_time()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<ResumeSessionError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_recv()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#NoiseError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_recv()." -> "rust-analyzer cargo attest 0.1.0 enclave/Error#InvalidBridgeStateError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_recv()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/SgxClientState#Connection#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]established_recv()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]recv()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws/impl#[`ResponseSender<S>`]send_response()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws/response_for_code()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws/impl#[`ResponseSender<S>`]send_response()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/impl#[`WebSocketClientWriter<S, E>`]send()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]is_trusted_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]is_trusted_identity()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 sgx_session/SgxClientState_CompleteHandshake()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 sgx_session/impl#[SgxClientState]complete_handshake()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]sort_points()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]to_bytes()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]ratchet()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]absorb()."
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 errors/PokshoError#VerificationFailure#"
  "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_constants()." -> "rust-analyzer cargo attest 0.1.0 enclave/impl#[UnvalidatedHandshake]validate()."
  "rust-analyzer cargo attest 0.1.0 svr2/new_handshake_with_constants()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/impl#[Handshake]for_sgx()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupDescriptionUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupDescriptionUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][Clone]clone()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob_with_padding()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_blob()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_agreement()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_v1/impl#[StaticKeys]calculate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]private_key()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_intermediate()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]crl()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_intermediate()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/trust_store()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_intermediate()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]validate_chain()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_intermediate()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]empty_crl()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/validate_revoked_from_intermediate()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/impl#[TestCert]chain()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<[Vec<u8>]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/make_object_array()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_eager()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/root()."
  "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/test/direct_path_eager()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 implicit/parent()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/collect_permutation()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]calc_M1()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]sort_points()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/add_user_agent_header()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 make_ws_config()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 impl#[`EndpointConnection<MultiRouteConnectionManager>`]new_multi()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]connection_params_with_fallback()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/endpoint_connection()." -> "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[ConnectionConfig]direct_connection_params()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Aci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Recipient`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#MissingIdentityKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidIdentityKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#ContactHasNoIdentifiers#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#NicknameIsPresentButEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceIdKind#Pni#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidProfileKey#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`TryFromWith<proto::Recipient, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[ContactData]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/impl#[`proto::Contact`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#ContactRegistrationUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/test/valid_destination_contact()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/RecipientError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]save_identity()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore][IdentityKeyStore]save_identity()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]add()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]get_poksho_statement()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." -> "rust-analyzer cargo poksho 0.7.0 args/impl#[PointArgs]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[SystemParams]get_hardcoded()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[ThrownException][`From<&str>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/ThrownException#String#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/errors/impl#[ZkGroupDeserializationFailure]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniVersion][`TryFrom<u8>`]try_from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniResponse#Zkc#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/AuthCredentialWithPniVersion#Zkc#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]lookup_ip()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/test_dns_lookup_fallback()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[IoError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]expect_no_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[IoError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[ThrownException]as_obj()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[IoError][JniError]to_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/make_single_message_throwable()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[CancellationId][`From<u64>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#Id#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/impl#[CancellationId][`From<u64>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/CancellationId#NotSupported#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CancellationError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[CancellationError][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeIdentityKeyStore]do_get_identity_key()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/DirectOrProxyRoute#Direct#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 EnableDomainFronting#OneDomainPerProxy#"
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/test_support/simple_chat_connection()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_update_session_request_as_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/session_id/impl#[SessionId][FromStr]from_str()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_update_session_request_as_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/PushTokenType#Apn#"
  "rust-analyzer cargo libsignal-net 0.1.0 registration/request/test/registration_update_session_request_as_chat_request()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`UpdateRegistrationSession<'_>`][Default]default()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SessionBuilder_ProcessPreKeyBundle()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[`HttpsProvider<F, P>`][RouteProvider]routes()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/http/impl#[Alpn][`From<HttpVersion>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ProfileKey_GetCommitment()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_for_account_that_isnt()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#"
  "rust-analyzer cargo attest 0.1.0 dcap/test/miscselect_comp()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]builder()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/miscselect_comp()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestationBuilder]sign()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/miscselect_comp()." -> "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/constant_time_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_eq()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/constant_time_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_lt()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/constant_time_cmp()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_select()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_GetBackupLevel()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]backup_level()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tls()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/connect_tcp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 RouteType#Direct#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/impl#[DirectConnector][TransportConnector]connect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]as_deref()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/test/impl#[TestLookup]standard_responses()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_errors/Error#LookupFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]accept()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/parse_sni_from_stream()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[`ProxyServer<S>`]proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TcpServer]bind_localhost()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/localhost_tls_proxy()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/testutil/impl#[TlsServer]new()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#WrongLength#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#InvalidCharacter#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Quote`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`Vec<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Quote`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/test/binary_name_conversion()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/class_lookup/jni_name_from_binary_name()."
  "rust-analyzer cargo signal-crypto 0.1.0 benches()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::CreateSession`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/check_jobject_type()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::CreateSession`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::PushTokenType`][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`libsignal_net::registration::CreateSession`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#WaitUntil#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]connect_or_wait()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/TestError#Expected#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/ConnectionAttemptOutcome#TimedOut#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/single_route_manager_times_out_on_long_connection()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[String]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/make_array()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo attest 0.1.0 client_connection/impl#[ClientConnection]send()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`][AsyncWrite]poll_write()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/WriteBufferPolicy#NoBuffering#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TestingCdsiLookupError#RetryAfter42Seconds#" -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupError#InvalidToken#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][`Sink<Bytes>`]poll_flush()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`Socks5Stream<TcpStream>`][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[TcpStream][Connection]transport_info()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/impl#[V][VisitUnknownFieldsExt]collect_unknown_fields()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 impl#[`backup::PartialBackup<M>`]by_parsing()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::LocalLocator`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::LocalLocator`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-core 0.1.0 benches()." -> "rust-analyzer cargo libsignal-core 0.1.0 key_agreement()."
  "rust-analyzer cargo libsignal-core 0.1.0 benches()." -> "rust-analyzer cargo libsignal-core 0.1.0 generation()."
  "rust-analyzer cargo libsignal-core 0.1.0 benches()." -> "rust-analyzer cargo libsignal-core 0.1.0 signatures()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]remove_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/convert/impl#[`&[u8]`][`ArgTypeInfo<'a>`]load_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`BorrowedSliceOf<T>`]as_slice()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/impl#[`ViewOnceMessage<R>`][`TryFromWith<proto::ViewOnceMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/impl#[MessageAttachment][`TryFromWith<proto::MessageAttachment, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/view_once_message/impl#[`ViewOnceMessage<R>`][`TryFromWith<proto::ViewOnceMessage, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/tests/test_ct_is_eq()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/utils/ct_is_eq()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#"
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]process()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/impl#[GcmGhash]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_ctr/impl#[Aes256Ctr32]new()."
  "rust-analyzer cargo signal-crypto 0.1.0 aes_gcm/setup_gcm()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidKeySize#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedConnectionError#Protocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Next#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/AttestedProtocolError#ProtobufDecode#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[AttestedConnection]receive()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/NextOrClose#Close#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceChangedOr<E>`]into_inner_or_else()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/impl#[`InterfaceChangedOr<E>`]into_inner_or_else()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#InterfaceChanged#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientMessageForSingleRecipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientMessageForSingleRecipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidArgument#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SealedSender_MultiRecipientMessageForSingleRecipient()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]validate()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]key_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/test/total_digest_size()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/calculate_chunk_size()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerPublicParams_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_types/ResourceType#A#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/parse_response()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorFailedToParseResourceRecord#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/Error#ProtocolErrorInvalidMessage#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/response_bytes()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/test/record_with_invalid_data_is_skipped()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/dns_message/get_id()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]log()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/convert_log_args_to_js()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]log()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]enabled()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Whisper#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Plaintext#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#PreKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 protocol/FfiCiphertextMessageType#Plaintext#" -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#Whisper#"
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]from_scalars()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/Domain#G_a()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_ordered()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/test/names()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_ordered()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain]sort()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/test/sort_ordered()." -> "rust-analyzer cargo attest 0.1.0 cert_chain/testutil/chain()."
  "rust-analyzer cargo libsignal-core 0.1.0 address/try_parse_hyphenated()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Pni#"
  "rust-analyzer cargo libsignal-core 0.1.0 address/try_parse_hyphenated()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/ServiceId#Aci#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PreKeySignalMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PlaintextContent]serialized()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#SenderKeyMessage#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/CiphertextMessageRef#PlaintextContent#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/impl#[`CiphertextMessageRef<'a>`]serialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[PreKeySignalMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Vec<u8>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]peek()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/Queue#new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][`Extend<(K, V)>`]extend()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]pop()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/test/min_kv_queue_extend_peek_empty()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]is_empty()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#IncomingMessageFromContactWithoutAciOrE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DirectionDiscriminants#Incoming#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/story_reply/test/impl#[`proto::DirectStoryReplyMessage`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/ChatItemAuthorKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::SendStatus`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#SendStatusMissing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NoDirection#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext]contact_recipient()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::ChatItem`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessageDiscriminants#RemoteDeleted#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#DirectionlessMessage#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessageDiscriminants#DirectStoryReply#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#InvalidRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidAuthor#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[FullRecipientData][Clone]clone()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#Outgoing#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessage#Standard#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/OutgoingSendError#UnknownRecipient#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/Direction#Incoming#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedMessageType#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#NonStandardMessageHasRevisions#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#AuthorNotFound#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UpdateMessageShouldBeDirectionless#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/impl#[`proto::chat_item::OutgoingMessageDetails`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionWithMismatchedDirection#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemMessageDiscriminants#Standard#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#RevisionContainsRevisions#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/standard_message/test/impl#[`StandardMessage<FullRecipientData>`]from_proto_test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[A][`TryIntoWith<B, C>`]try_into_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/test/valid_chat_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/DirectionDiscriminants#Directionless#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeys]derive_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Seed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[MessageKeyGenerator]generate_keys()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/MessageKeyGenerator#Keys#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore]do_get_sender_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSenderKeyStore][SenderKeyStore]load_sender_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 DnsSource#Test#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnector<R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[RouteResolver][Default]default()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/impl#[UnresolvedHost][`From<Arc<str>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]respond()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/connect_succeeds_if_some_routes_hang_indefinitely()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/test/impl#[`FakeConnectResponder<R>`]route()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][PreKeyStore]save_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemPreKeyStore][PreKeyStore]save_pre_key()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyKeyPair][`From<attributes::KeyPair<D>>`]from()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()."
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[PublicConfig][`From<KeyTransConfig>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 DeploymentMode#ThirdPartyAuditing#"
  "rust-analyzer cargo libsignal-net 0.1.0 env/impl#[PublicConfig][`From<KeyTransConfig>`]from()." -> "rust-analyzer cargo libsignal-keytrans 0.0.1 vrf/impl#[PublicKey][`TryFrom<[u8; 32]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]preconnect()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/provider/RouteProviderExt#map_routes()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]preconnect()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/make_route_provider()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[AuthenticatedChatConnection]preconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 connect_state/impl#[`ConnectionResources<'_, libsignal_net_infra::route::PreconnectingFactory<libsignal_net_infra::route::SimpleRoute<libsignal_net_infra::route::TlsRouteFragment, libsignal_net_infra::route::DirectOrProxyRoute<libsignal_net_infra::route::TcpRoute<std::net::IpAddr>, libsignal_net_infra::route::ConnectionProxyRoute<std::net::IpAddr>>>, TC>>`]preconnect_and_save()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<CreateSessionError>`][`From<ResponseError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 Alpn#Http2#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Ip#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/build_custom_resolver_cloudflare_doh()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/scramble_content_type()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::BackupLocator`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::AttachmentLocator`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::LocalLocator`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::FilePointer`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::file_pointer::InvalidAttachmentLocator`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::IAPSubscriberData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[u64][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::IAPSubscriberData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::account_data::IAPSubscriberData`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyMissingMember#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberPendingProfileKeyWasInvitedBySelf#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Default#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidAci#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberRoleUnknown#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/Role#Administrator#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberPendingProfileKey][`TryFromWith<proto::group::MemberPendingProfileKey, C>`]try_from_with()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/test/reader_returns_pending()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/block_stream/impl#[`BlockStream<N, R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Self_#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#DistributionList#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Group#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#ReleaseNotes#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/DestinationKind#Contact#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/impl#[`Destination<R>`][`AsRef<DestinationKind>`]as_ref()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/Destination#CallLink#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`ChatsData<M>`][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/impl#[Timestamp]from_millis()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[MetadataError][`From<TimestampError>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[`PartialBackup<M>`]new()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/MetadataError#InvalidMediaRootBackupKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/js_error_to_rust()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore][PreKeyStore]remove_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodePreKeyStore]do_remove_pre_key()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Option<&[u8]>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`&[u8]`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 impl#[`libsignal_protocol::kem::KeyType`][`From<KeyType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 kem/KeyType#Kyber1024#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 impl#[`libsignal_protocol::kem::KeyType`][`From<KeyType>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 KeyType#Kyber#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo attest 0.1.0 dcap/test/fill()." -> "rust-analyzer cargo attest 0.1.0 dcap/test/attribute_comp()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/error/impl#[ProtocolError][`From<tungstenite::error::ProtocolError>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#ConnectionClosed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/impl#[SendError][`From<TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/SendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#NullPointer#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`Box<dyn ChatListener>`][`ArgTypeInfo<'storage, 'param, 'context>`]borrow()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/chat/impl#[JniBridgeChatListener]new()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Timeout#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Other#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#RequestWasNotValid#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestError#Unknown#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/ReceiptCredential_GetReceiptLevel()." -> "rust-analyzer cargo zkgroup 0.9.0 api/receipts/receipt_credential/impl#[ReceiptCredential]get_receipt_level()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/error_type_status_mapping()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/test/impl#[T][CollectSortedStatuses]sorted_statuses()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponse][`TryFrom<ClientResponse>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponseEntry]try_parse_from()."
  "rust-analyzer cargo libsignal-net 0.1.0 cdsi/impl#[LookupResponse][`TryFrom<ClientResponse>`]try_from()." -> "rust-analyzer cargo libsignal-net 0.1.0 cdsi/LookupResponseParseError#InvalidNumberOfBytes#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#Running#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#TemporarilyEvicted#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/MaybeChatConnection#WaitingForListener#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[PendingChatConnection]connection_info()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]info()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]connection_info()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/connection_can_still_finish_normally()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/InterfaceChangedOr#Other#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/connection_can_still_finish_normally()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/interface_monitor/test/try_connection()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/mismatched_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/make_encrypted()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/mismatched_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/reader_factory/impl#[`LimitedReaderFactory<R, N>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/mismatched_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`]new()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/mismatched_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/impl#[`FramesReader<R>`][VerifyHmac]verify_hmac()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/test/mismatched_hmac()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 frame/VerifyHmacError#HmacMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Failed#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/GiftBadge#Valid#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/gift_badge/impl#[GiftBadge][`PartialEq<Self>`]eq()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]disconnect()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[Chat]disconnect()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v3()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/impl#[Tcb]components()."
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v3()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbStatus#SWHardeningNeeded#"
  "rust-analyzer cargo attest 0.1.0 dcap/endorsements/tests/parse_tcb_info_v3()." -> "rust-analyzer cargo attest 0.1.0 dcap/endorsements/TcbInfoVersion#V3#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/link_preview()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/impl#[LinkPreview][`TryFromWith<proto::LinkPreview, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/link_preview()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/link_preview()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/link/test/impl#[`proto::LinkPreview`]test_data()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]get_public_params()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CallLinkSecretParams_GetPublicParams()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[`Box<[libsignal_net::registration::RequestedInformation]>`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/make_array()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/SendRequest#InitialSend#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/State#SendRequest#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[HandshakeAuthKind][`From<&HandshakeAuth<'k>>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[HandshakeAuthKind]handshake_message_len()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#IK#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/impl#[`Handshaker<S>`]new()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/noise/handshake/HandshakeAuth#NK#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SenderCertificate_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key()."
  "rust-analyzer cargo attest 0.1.0 cert_chain/impl#[CertChain][Expireable]valid_at()." -> "rust-analyzer cargo attest 0.1.0 util/system_time_to_asn1_time()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_account_data()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'_>`][KtApi]search()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_kt()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/aci_identity_key()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/test_account/username_hash()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/test_distinguished_tree()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test_support/make_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/test/search_permutations_integration_test()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKey]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/AuthCredentialWithPniResponse_CheckValidContents()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 certs/RootCertificates#Native#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]new()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/tls/impl#[TlsProxyConnector]parse_host_for_tls_opt_out()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]connect_and_send()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]create_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#LearnedProfileIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#ProfileChangeMissingNames#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#InvalidE164#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/ChatItemError#UpdateIsEmpty#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/impl#[`proto::SimpleChatUpdate`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/test/chat_update_message_no_item()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/update_message/impl#[`UpdateMessage<R>`][`TryFromWith<proto::ChatUpdateMessage, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/reregister_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/service/impl#[`RegistrationConnection<'c>`]connect_and_send()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/reregister_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Response`]try_into_response()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/reregister_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/impl#[`RequestError<SessionRequestError>`][`From<ResponseError>`]from()."
  "rust-analyzer cargo libsignal-net 0.1.0 registration/reregister_account()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/request/impl#[`crate::chat::Request`]register_account()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[BytestringArray]into_boxed_parts()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`OwnedBufferOf<T>`]into_box()."
  "rust-analyzer cargo libsignal-net 0.1.0 keytrans/impl#[`KeyTransparencyClient<'a>`]send()." -> "rust-analyzer cargo libsignal-net 0.1.0 keytrans/Error#RequestFailed#"
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho][`AsMut<poksho::ShoHmacSha256>`]as_mut()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute_without_verified_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`IssuanceProofBuilder<'a>`]add_blinded_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/impl#[S][ShoApiExt]squeeze_and_ratchet_as_array()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder<'_>`]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]with_authenticated_message()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo poksho 0.7.0 shosha256/impl#[ShoSha256][ShoApi]new()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]derive_from()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]present()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder<'a>`]with_authenticated_message()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]with_authenticated_message()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute_without_verified_key()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]verify()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]archive_current_state_inner()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]clear_unacknowledged_pre_key_message()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidPreKeyId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/impl#[`MutPointer<T>`]null()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/storage/impl#[`&FfiPreKeyStoreStruct`][PreKeyStore]get_pre_key()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[CallbackError]check()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]was_woken()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]wake_count()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/impl#[GroupMemberBanned][`TryFromWith<proto::group::MemberBanned, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[`proto::group::MemberBanned`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]service_id_binary()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#MemberInvalidServiceId#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/GroupError#InvalidTimestamp#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/valid_member_banned()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberBanned]from_proto_test_data()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/impl#[Configuration][`TryFrom<SequenceOf<'a, SgxExtension<'a>, 0, _>>`]try_from()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_x509/parse_extensions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/throw_error()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert_to_exception()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 net/chat/UnauthenticatedChatConnection_send()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[C][BridgeChatConnection]send()."
  "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8; LEN]`][PublicAttribute]hash_into()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`[u8]`][PublicAttribute]hash_into()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Continue#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/Outcome#Finished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/NextEventError#UnexpectedConnectionClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/testutil/impl#[TestWaker]as_waker()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/impl#[`Connection<S, R>`]handle_next_event()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/test/handles_error_on_failed_send()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/MessageEvent#SendFailed#"
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_public_attribute()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]issue()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/uid_struct/impl#[UidStruct]from_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key()." -> "rust-analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder<'a>`]add_attribute()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberPendingProfileKey`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::group::MemberPendingProfileKey`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo attest 0.1.0 dcap/verify_expiration()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`uuid::Uuid`][`ResultTypeInfo<'a>`]convert_into()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/new_instance()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[DeviceTransferError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InternalError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[DeviceTransferError][FfiError]code()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/SignalErrorCode#InvalidKey#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[DeviceTransferError][FfiError]code()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#InternalError#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[DeviceTransferError][FfiError]code()." -> "rust-analyzer cargo device-transfer 0.1.0 Error#KeyDecodingFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/socks/impl#[`Socks4Stream<TcpStream>`][Connection]transport_info()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 tcp_ssl/proxy/impl#[TcpStream][Connection]transport_info()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]calculate_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]verify_signature()."
  "rust-analyzer cargo libsignal-core 0.1.0 curve/tests/test_large_signatures()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PrivateKey]public_key()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][`AsyncArgTypeInfo<'storage>`]save_async_arg()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#FinalizedByNeon#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/quote/test/impl#[`proto::quote::QuotedAttachment`]test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/file/test/impl#[`proto::MessageAttachment`]test_data()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[CiphertextWithSecretNonce]get_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]decrypt_blinded_receipt_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]get_public_key()."
  "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]new()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_async_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/generate_code_to_load_input()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_async_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 node/bridge_fn_async_body()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 BridgingKind#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/impl#[`CustomDnsResolver<R, T>`]send_dns_queries()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/custom_resolver/do_lookup_task_body()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[ServiceId][`SimpleArgTypeInfo<'a>`]convert_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/convert/impl#[`SpecificServiceId<_>`][`SimpleArgTypeInfo<'a>`]convert_from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/BridgeLayerError#BadArgument#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::ThreadMergeChatUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_e164()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeChatListener][ChatListener]received_queue_empty()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[CustomChatColor]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/CustomChatColor#Solid#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/chat/TESTING_FakeChatRemoteEnd_InjectConnectionInterrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/fake/impl#[FakeChatRemote]send_close()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]next_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]index()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/keys/impl#[ChainKey]message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]session_with_self()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_receiver_chain_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]set_message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#DuplicatedMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 session_cipher/get_or_create_message_key()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_message_keys()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 error/impl#[SignalProtocolError]for_application_callback()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#ApplicationCallbackError#"
  "rust-analyzer cargo libsignal-net 0.1.0 impl#[`LoggingNewHandshake<E>`][EnclaveKind]url_path()." -> "rust-analyzer cargo libsignal-net 0.1.0 enclave/EnclaveKind#url_path()."
  "rust-analyzer cargo usernames 0.1.0 username/test/generate_discriminators()." -> "rust-analyzer cargo usernames 0.1.0 username/random_discriminators()."
  "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/tests/test_one_based_iter()." -> "rust-analyzer cargo zkgroup 0.9.0 common/array_utils/impl#[`OneBased<Ts>`][`ArrayLike<T>`]iter()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/future/impl#[`SomeOrPending<F>`][`From<Option<F>>`]from()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]next()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#AllAttemptsFailed#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/pull_next_route_delay()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#ConnectionAttemptFinished#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#StartNextConnection#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#NextRouteAvailable#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/ConnectError#FatalConnect#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/Event#LogStatus#" -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]status()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 crypto/hmac_sha256()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 device_transfer/DeviceTransfer_GenerateCertificate()." -> "rust-analyzer cargo device-transfer 0.1.0 create_self_signed_cert()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]body()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]counter()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage]message_version()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/SignalMessage_Deserialize()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SignalMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#VerificationNotDeliverable#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#VerificationSendFailed#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/BridgedErrorVariant#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/registration/impl#[BridgedErrorVariant][`From<RequestVerificationCodeError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SendFailed#"
  "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 derive_has_unknown_fields_enum_impl()." -> "rust-analyzer cargo libsignal-message-backup-macros 0.1.0 impl#[VisitField][`From<Field>`]from()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 account_keys/BackupKey_DeriveLocalBackupMetadataKey()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 backup/impl#[`BackupKey<V1>`]derive_local_backup_metadata_key()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LinkPreview`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LinkPreview`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/serialized/impl#[`Serialized<T>`]into_inner()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_uid_struct()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]encrypt()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 incremental_mac/ValidatingMac_Update()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 incremental_mac/impl#[`Validating<M>`]update()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]describe()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[IoError][FfiError]describe()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]describe()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Parse#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[`SanitizerError<ParseError>`][FfiError]describe()." -> "rust-analyzer cargo signal-media 0.1.0 sanitize/error/SanitizerError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/TransportError#UnexpectedTextFrame#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/TransportError#UnexpectedClose#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/impl#[`WebSocketTransport<S>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/noise/into_io_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#Error#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/error/impl#[SignalFfiError][`From<T>`]from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 ffi/chat/impl#[ChatListenerStruct][ChatListener]connection_interrupted()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/server_requests/DisconnectCause#LocalDisconnect#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidSenderKeySession#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#SignatureValidationFailed#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#InvalidMessage#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]verify_signature()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]ciphertext()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]message_version()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/get_sender_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/aes_256_cbc_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]distribution_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]iteration()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadCiphertext#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#UnrecognizedMessageVersion#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 error/SignalProtocolError#NoSenderKeyState#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 aes_cbc/DecryptionError#BadKeyOrIv#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 support/impl#[IdChoice][`From<u32>`]from()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/IdChoice#Exactly#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/call_method_checked()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/with_local_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/error/impl#[`Result<T, jni::errors::Error>`][`HandleJniError<T>`]check_exceptions()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/get_object_with_serialization()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 jni/args/impl#[`JniArgs<'local, 'obj_ref, JObject<'output>, LEN>`]for_nested_frame()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidEntropyDataLength#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#BadCiphertext#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/no_extra_properties()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InvalidDecryptedDataStructure#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/new_js_error()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#HmacMismatch#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#InputDataTooLong#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/error/impl#[`usernames::UsernameLinkError`][SignalNodeError]into_throwable()." -> "rust-analyzer cargo usernames 0.1.0 error/UsernameLinkError#UsernameLinkDataTooShort#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/parse()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 impl#[AccountEntropyPool][FromStr]from_str()."
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/parse()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#InvalidCharacter#"
  "rust-analyzer cargo libsignal-account-keys 0.1.0 tests/account_entropy_pool_tests/parse()." -> "rust-analyzer cargo libsignal-account-keys 0.1.0 InvalidAccountEntropyPool#WrongLength#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`][`Sink<T>`]poll_flush()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/connect/throttle/impl#[`ThrottledConnection<S>`]as_pin_mut()."
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/regular_types()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 ResultKind#Regular#"
  "rust-analyzer cargo libsignal-bridge-macros 0.1.0 return_type_test/regular_types()." -> "rust-analyzer cargo libsignal-bridge-macros 0.1.0 impl#[ResultKind][`From<&syn_mid::Signature>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]tag_info()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]tag_info()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]tag_info()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]to_be_bytes()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GenericServerSecretParams_CheckValidContents()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 zkgroup/validate_serialization()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LearnedProfileChatUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_e164()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::LearnedProfileChatUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]next_username()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`Ciphertext<D>`][Attribute]as_points()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt()." -> "rust-analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair<D>`]decrypt_to_second_point()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/profile_key_struct/impl#[ProfileKeyStruct]calc_M3()."
  "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]replaced_stateless()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore]all_signed_pre_key_ids()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignedPreKeyStore]all_signed_pre_key_ids()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][Drop]drop()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#None#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][Drop]drop()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#AttachedToJVM#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/impl#[NeedsCleanup][Drop]drop()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 types/NeedsCleanup#FinalizedByNeon#"
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/chat/impl#[NodeConnectChat][ConnectChat]connect_chat()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/connect_registration_chat()."
  "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1()." -> "rust-analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/registration/impl#[RegistrationService]resume_session()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/impl#[`RegistrationService<'c>`]resume_session()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::GroupMemberRemovedUpdate`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]from_uid_and_secret()." -> "rust-analyzer cargo libsignal-net 0.1.0 auth/impl#[Auth]otp()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 timestamp/impl#[Timestamp]from_epoch_millis()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSessionStore]load_existing_sessions()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]sender()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_identity_key_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_e164()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/CiphertextMessageType#SenderKey#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSignalProtocolStore][IdentityKeyStore]get_local_registration_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 identity_key/impl#[IdentityKeyPair]public_key()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_decrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemIdentityKeyStore]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]group_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_uuid()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_multi_recipient_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]contents()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]content_hint()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage][`TryFrom<&[u8]>`]try_from()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/create_pre_key_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ProtocolAddress]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 protocol/impl#[SenderKeyDistributionMessage]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/create_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/group_encrypt()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate]sender_device_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/sealed_sender_decrypt_to_usmc()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 session/process_prekey_bundle()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]new()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 group_cipher/process_sender_key_distribution_message()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]parse()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[`SealedSenderV2SentMessage<'a>`]received_message_parts_for_recipient()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/ContentHint#Implicit#"
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[ServiceId]parse_from_service_id_string()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[UnidentifiedSenderMessageContent]serialized()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[SenderCertificate][Clone]clone()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 group_sealed_sender_multiple_devices_and_excluded_recipients()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 support/test_in_memory_protocol_store()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore][Default]default()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 storage/inmem/impl#[InMemSenderKeyStore]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 util/read_array()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[SgxQuoteBody][`TryFrom<[u8; _]>`]try_from()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 util/read_from_bytes()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuote<'a>`]read()." -> "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/impl#[`SgxQuoteSupport<'a>`]read()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore<'a, T>`]add_attribute()."
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/PublicKeyOrId#PublicKey#"
  "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier<'a>`]add_attribute()." -> "rust-analyzer cargo zkcredential 0.1.0 presentation/impl#[AnyPublicKey][`From<attributes::PublicKey<D>>`]from()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[NodeLogger][Log]enabled()." -> "rust-analyzer cargo libsignal-bridge 0.1.0 logging/log_enabled_in_apps()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`SingleRouteThrottlingConnectionManager<C>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/no_network_change_events()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/impl#[`MultiRouteConnectionManager<M>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/example_connection_params()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/multi_route_manager_picks_working_route()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 connection_manager/test/validate_expected_route()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberBanned]from_proto_test_data()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/members/tests/impl#[GroupMemberBanned]from_proto_test_data()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/time/test/impl#[Timestamp]test_value()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/BackupAuthCredential_GetBackupLevel()." -> "rust-analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]backup_level()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Remove()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Remove()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsement_Remove()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]remove()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]certificate()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]key_id()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]signature()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]public_key()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/prekey/impl#[PreKeyRecord]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]serialized()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 protocol/PreKeyRecord_New()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sealed_sender/impl#[ServerCertificate]deserialize()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]into_event_listener()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/chat/impl#[`dyn ChatListener`]received_server_request()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/async_tokio_runtime_reporting_does_not_block()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/impl#[TokioAsyncContext][`AsyncRuntime<F>`]run_future()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/async_tokio_runtime_reporting_does_not_block()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/tokio/test/sum_task()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`MessageField<E>`][VisitUnknownFields]visit_unknown_fields()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 unknown/visit_static/impl#[`Box<E>`][VisitUnknownFields]visit_unknown_fields()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#absorb_and_ratchet()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()." -> "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]from_raw()."
  "rust-analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate()." -> "rust-analyzer cargo poksho 0.7.0 shohmacsha256/impl#[ShoHmacSha256][ShoApi]new()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_Decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidNonceSize#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 crypto/Aes256GcmSiv_Decrypt()." -> "rust-analyzer cargo signal-crypto 0.1.0 error/Error#InvalidTag#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]peek()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]push()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]pop()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][Stream]poll_next()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`]project()."
  "rust-analyzer cargo attest 0.1.0 dcap/fakes/impl#[FakeAttestation]attest()." -> "rust-analyzer cargo attest 0.1.0 dcap/attest_impl()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`][`From<Uuid>`]from()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]sub_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_presentation/impl#[AnyAuthCredentialPresentation]get_pni_ciphertext()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify()."
  "rust-analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]add_seconds()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#WebSocketProtocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Disconnected#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#ConnectionAlreadyClosed#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Protocol#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/TungsteniteSendError#Io#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#MessageTooLarge#"
  "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/impl#[SendError][`From<&TungsteniteSendError>`]from()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/ws2/SendError#Io#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_handshake()." -> "rust-analyzer cargo attest 0.1.0 sgx_session/testutil/private_key()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws/testutil/fake_websocket()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/attested_connection_invalid_handshake()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 ws2/attested/test/run_attested_echo_server()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/impl#[Color][`TryFrom<u32>`]try_from()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/ColorError#NotOpaque#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_GetExpiration()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendFullToken_GetExpiration()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendFullToken]expiration()."
  "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/impl#[ChatConnection]start_connect_with_transport()."
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Debug#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Warn#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Info#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Trace#"
  "rust-analyzer cargo libsignal-node 0.70.0 logging/impl#[`log::Level`][`From<LogLevel>`]from()." -> "rust-analyzer cargo libsignal-node 0.70.0 logging/LogLevel#Error#"
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_snapshot()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/impl#[GroupSnapshot][`TryFromWith<proto::group::GroupSnapshot, C>`]try_from_with()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_snapshot()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/testutil/impl#[TestContext][Default]default()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/group_snapshot()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/recipient/group/test/impl#[`proto::Group`]test_data()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]create()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_profile_key()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]get_public_params()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]encrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 common/simple_types/impl#[Timestamp]from_epoch_seconds()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupMasterKey]new()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo libsignal-core 0.1.0 address/impl#[`SpecificServiceId<KIND>`]from_uuid_bytes()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential()."
  "rust-analyzer cargo zkgroup 0.9.0 benchmark_integration_profile()." -> "rust-analyzer cargo zkgroup 0.9.0 api/profiles/profile_key_credential_request_context/impl#[ProfileKeyCredentialRequestContext]get_request()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_id_zero()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/impl#[`CustomColorMap<M>`][`TryFrom<Vec<proto::chat_style::CustomChatColor>>`]try_from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_id_zero()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/impl#[`proto::chat_style::CustomChatColor`]test_data()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/test/custom_color_map_rejects_id_zero()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 backup/chat/chat_style/ChatStyleError#InvalidCustomColorId#"
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/allow_all_routes()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]static_ip_map()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 chat/error/ConnectError#Timeout#"
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/timed()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]connect_chat()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 dns/impl#[DnsResolver]new_custom()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/impl#[FakeDeps]new()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connect_websockets_on_incoming()."
  "rust-analyzer cargo libsignal-net 0.1.0 slow_dns()." -> "rust-analyzer cargo libsignal-net 0.1.0 fake_transport/connector/impl#[FakeTransportConnector]set_behaviors()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/TESTING_ConnectionManager_isUsingProxy()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 net/impl#[ConnectionManager]is_using_proxy()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ProxyTarget<Host<UnresolvedHost>>`]as_informational_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedRemotely#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ProxyTarget<Host<UnresolvedHost>>`]as_informational_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/impl#[`Host<S>`]map_domain()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ProxyTarget<Host<UnresolvedHost>>`]as_informational_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/proxy/ProxyTarget#ResolvedLocally#"
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/describe/impl#[`ProxyTarget<Host<UnresolvedHost>>`]as_informational_host()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 host/Host#Domain#"
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupPublicParams_GetGroupIdentifier()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupPublicParams]get_group_identifier()."
  "rust-analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]squeeze()." -> "rust-analyzer cargo poksho 0.7.0 shoapi/ShoApi#squeeze_and_ratchet()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/deserialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]combine()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 common/serialization/serialize()."
  "rust-analyzer cargo libsignal-bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts()." -> "rust-analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]compress()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]len()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 utils/binary_heap/impl#[`MinKeyValueQueue<K, V>`][Queue]peek()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`Schedule<S, R, SP>`]status()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 route/schedule/impl#[`MinKeyValueQueueStream<S, K, V>`][FusedStream]is_terminated()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_stream_pair()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/impl#[`NoiseStream<S>`]new()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_stream_pair()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 testutil/impl#[`TestStream<T, E>`]new_pair()."
  "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_stream_pair()." -> "rust-analyzer cargo libsignal-net-infra 0.1.0 noise/test/new_handshaken_pair()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionState]get_receiver_chain()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_save_session()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/convert/impl#[T][`ResultTypeInfo<'a>`]convert_into()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_save_session()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/impl#[`JsFuture<T>`]get_promise()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_save_session()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 future/builder/impl#[`JsFutureBuilder<'_, F, T>`]then()."
  "rust-analyzer cargo libsignal-bridge-types 0.1.0 node/storage/impl#[NodeSessionStore]do_save_session()." -> "rust-analyzer cargo signal-neon-futures 0.1.0 util/call_method()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SendFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#NotReadyForVerification#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/impl#[`TestingRequestError<TestE>`]map_into_error()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#CodeNotDeliverable#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#RetryLater#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#SendFailed#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-types 0.1.0 support/as_type/impl#[`AsType<T, P>`]into_inner()."
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/SubmitVerificationError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#SessionNotFound#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#InvalidSessionId#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TestingRequestVerificationCodeError#RetryAfter42Seconds#"
  "rust-analyzer cargo libsignal-bridge-testing 0.1.0 net/registration/TESTING_RegistrationService_RequestVerificationCodeErrorConvert()." -> "rust-analyzer cargo libsignal-net 0.1.0 registration/error/RequestVerificationCodeError#NotReadyForVerification#"
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/key()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo attest 0.1.0 dcap/sgx_quote/key()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`][`From<E>`]from()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`protobuf::MessageField<T>`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Option<T>`][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[KeyPair]generate()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[String][Randomize]randomize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_service_id()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]serialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]next_username()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact::Registered`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[Scrambler]replace_e164()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-core 0.1.0 curve/impl#[PublicKey]deserialize()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::contact::NotRegistered`][`Visit<Scrambler>`]accept()."
  "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/impl#[`proto::Contact`][`Visit<Scrambler>`]accept()." -> "rust-analyzer cargo libsignal-message-backup 0.1.0 scramble/randomize/impl#[`Vec<u8>`][Randomize]randomize()."
  "rust-analyzer cargo attest 0.1.0 error/tests/test_basic()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]new()."
  "rust-analyzer cargo attest 0.1.0 error/tests/test_basic()." -> "rust-analyzer cargo attest 0.1.0 error/impl#[`ContextError<D>`]context()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session()."
  "rust-analyzer cargo libsignal-protocol 0.1.0 ratchet/initialize_alice_session_record()." -> "rust-analyzer cargo libsignal-protocol 0.1.0 state/session/impl#[SessionRecord]new()."
}
