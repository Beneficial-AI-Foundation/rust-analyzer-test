<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: file_subgraph Pages: 1 -->
<svg width="2010pt" height="1635pt"
 viewBox="0.00 0.00 2010.00 1634.58" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1630.58)">
<title>file_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1630.58 2006,-1630.58 2006,4 -4,4"/>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().</title>
<polygon fill="lightblue" stroke="black" points="1638.5,-1029.58 1474.5,-1029.58 1474.5,-993.58 1638.5,-993.58 1638.5,-1029.58"/>
<text text-anchor="middle" x="1556.5" y="-1007.88" font-family="Helvetica,sans-Serif" font-size="14.00">sender_message_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative().</title>
<polygon fill="lightblue" stroke="black" points="1837,-1191.58 1722,-1191.58 1722,-1155.58 1837,-1155.58 1837,-1191.58"/>
<text text-anchor="middle" x="1779.5" y="-1169.88" font-family="Helvetica,sans-Serif" font-size="14.00">get_derivative</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative().</title>
<path fill="none" stroke="gray" d="M1638.74,-1020.5C1650.22,-1024.62 1661.12,-1030.43 1670,-1038.58 1707.29,-1072.78 1670.85,-1110.19 1706,-1146.58 1708.29,-1148.95 1710.8,-1151.11 1713.47,-1153.08"/>
<polygon fill="gray" stroke="gray" points="1711.6,-1156.04 1721.92,-1158.46 1715.36,-1150.13 1711.6,-1156.04"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new().</title>
<polygon fill="lightblue" stroke="black" points="1972.5,-1087.58 1918.5,-1087.58 1918.5,-1051.58 1972.5,-1051.58 1972.5,-1087.58"/>
<text text-anchor="middle" x="1945.5" y="-1065.88" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new().</title>
<path fill="none" stroke="gray" d="M1638.53,-1013.85C1698.35,-1016.76 1781.44,-1023.41 1853,-1038.58 1871.79,-1042.56 1892.08,-1049.19 1908.77,-1055.29"/>
<polygon fill="gray" stroke="gray" points="1907.55,-1058.57 1918.14,-1058.8 1910,-1052.02 1907.55,-1058.57"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<polygon fill="lightblue" stroke="black" points="1003.5,-400.58 783.5,-400.58 783.5,-364.58 1003.5,-364.58 1003.5,-400.58"/>
<text text-anchor="middle" x="893.5" y="-378.88" font-family="Helvetica,sans-Serif" font-size="14.00">add_sender_key_state_record</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().</title>
<polygon fill="lightblue" stroke="black" points="1331,-467.58 1161,-467.58 1161,-431.58 1331,-431.58 1331,-467.58"/>
<text text-anchor="middle" x="1246" y="-445.88" font-family="Helvetica,sans-Serif" font-size="14.00">add_sender_key_state</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().</title>
<path fill="none" stroke="gray" d="M1003.9,-399.26C1019.14,-402.29 1034.53,-405.73 1049,-409.58 1065.44,-413.95 1068.55,-418.26 1085,-422.58 1106.15,-428.14 1129.18,-432.8 1151.01,-436.61"/>
<polygon fill="gray" stroke="gray" points="1150.5,-440.08 1160.94,-438.3 1151.67,-433.17 1150.5,-440.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().</title>
<polygon fill="lightblue" stroke="black" points="550,-184.58 152,-184.58 152,-148.58 550,-148.58 550,-184.58"/>
<text text-anchor="middle" x="351" y="-162.88" font-family="Helvetica,sans-Serif" font-size="14.00">when_exceed_maximum_states_then_oldest_is_ejected</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<path fill="none" stroke="gray" d="M429.47,-148.54C507.82,-135.22 627.65,-129.08 702,-193.58 757.71,-241.91 684.67,-304.63 738,-355.58 748.14,-365.27 760.45,-372.15 773.65,-376.96"/>
<polygon fill="gray" stroke="gray" points="772.81,-380.37 783.4,-380.11 774.96,-373.71 772.81,-380.37"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<polygon fill="lightblue" stroke="black" points="936,-184.58 851,-184.58 851,-148.58 936,-148.58 936,-184.58"/>
<text text-anchor="middle" x="893.5" y="-162.88" font-family="Helvetica,sans-Serif" font-size="14.00">chain_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<path fill="none" stroke="gray" d="M550.19,-166.58C654.44,-166.58 774.11,-166.58 840.75,-166.58"/>
<polygon fill="gray" stroke="gray" points="840.98,-170.08 850.98,-166.58 840.98,-163.08 840.98,-170.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<polygon fill="lightblue" stroke="black" points="968.5,-130.58 818.5,-130.58 818.5,-94.58 968.5,-94.58 968.5,-130.58"/>
<text text-anchor="middle" x="893.5" y="-108.88" font-family="Helvetica,sans-Serif" font-size="14.00">random_public_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<path fill="none" stroke="gray" d="M550.26,-153.5C599.87,-149.62 652.93,-144.95 702,-139.58 736.91,-135.76 775.27,-130.53 808.36,-125.68"/>
<polygon fill="gray" stroke="gray" points="809.07,-129.12 818.45,-124.2 808.05,-122.19 809.07,-129.12"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().</title>
<polygon fill="lightblue" stroke="black" points="970,-62.58 817,-62.58 817,-26.58 970,-26.58 970,-62.58"/>
<text text-anchor="middle" x="893.5" y="-40.88" font-family="Helvetica,sans-Serif" font-size="14.00">assert_record_order</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().</title>
<path fill="none" stroke="gray" d="M550.21,-181.72C602.44,-177.81 656.78,-166.07 702,-139.58 726.89,-125 714.54,-102.37 738,-85.58 758.13,-71.17 783,-61.83 806.85,-55.77"/>
<polygon fill="gray" stroke="gray" points="807.71,-59.16 816.63,-53.45 806.1,-52.35 807.71,-59.16"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<polygon fill="lightblue" stroke="black" points="920.5,-238.58 866.5,-238.58 866.5,-202.58 920.5,-202.58 920.5,-238.58"/>
<text text-anchor="middle" x="893.5" y="-216.88" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_exceed_maximum_states_then_oldest_is_ejected().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<path fill="none" stroke="gray" d="M550.26,-179.66C599.87,-183.54 652.93,-188.22 702,-193.58 755.87,-199.47 817.98,-208.74 856.24,-214.74"/>
<polygon fill="gray" stroke="gray" points="855.95,-218.24 866.37,-216.34 857.04,-211.32 855.95,-218.24"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().</title>
<polygon fill="lightblue" stroke="black" points="1283,-1345.58 1209,-1345.58 1209,-1309.58 1283,-1309.58 1283,-1345.58"/>
<text text-anchor="middle" x="1246" y="-1323.88" font-family="Helvetica,sans-Serif" font-size="14.00">iteration</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().</title>
<polygon fill="lightblue" stroke="black" points="1583.5,-1245.58 1529.5,-1245.58 1529.5,-1209.58 1583.5,-1209.58 1583.5,-1245.58"/>
<text text-anchor="middle" x="1556.5" y="-1223.88" font-family="Helvetica,sans-Serif" font-size="14.00">next</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().</title>
<path fill="none" stroke="gray" d="M1283.03,-1312.66C1322.01,-1296.87 1386.21,-1271.9 1443,-1254.58 1468.21,-1246.89 1497.13,-1239.99 1519.34,-1235.09"/>
<polygon fill="gray" stroke="gray" points="1520.31,-1238.46 1529.34,-1232.92 1518.83,-1231.62 1520.31,-1238.46"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed().</title>
<polygon fill="lightblue" stroke="black" points="1583.5,-1299.58 1529.5,-1299.58 1529.5,-1263.58 1583.5,-1263.58 1583.5,-1299.58"/>
<text text-anchor="middle" x="1556.5" y="-1277.88" font-family="Helvetica,sans-Serif" font-size="14.00">seed</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed().</title>
<path fill="none" stroke="gray" d="M1283.3,-1322.17C1342.65,-1313.32 1459.79,-1295.85 1519.16,-1287"/>
<polygon fill="gray" stroke="gray" points="1519.83,-1290.44 1529.21,-1285.5 1518.8,-1283.51 1519.83,-1290.44"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new().</title>
<polygon fill="lightblue" stroke="black" points="1806.5,-1245.58 1752.5,-1245.58 1752.5,-1209.58 1806.5,-1209.58 1806.5,-1245.58"/>
<text text-anchor="middle" x="1779.5" y="-1223.88" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new().</title>
<path fill="none" stroke="gray" d="M1283.17,-1332.89C1357.99,-1342.4 1534.14,-1357.11 1670,-1308.58 1702.58,-1296.94 1733.57,-1271.91 1754.02,-1252.73"/>
<polygon fill="gray" stroke="gray" points="1756.54,-1255.16 1761.32,-1245.71 1751.69,-1250.12 1756.54,-1255.16"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration().</title>
<polygon fill="lightblue" stroke="black" points="1593.5,-1391.58 1519.5,-1391.58 1519.5,-1355.58 1593.5,-1355.58 1593.5,-1391.58"/>
<text text-anchor="middle" x="1556.5" y="-1369.88" font-family="Helvetica,sans-Serif" font-size="14.00">iteration</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/iteration().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration().</title>
<path fill="none" stroke="gray" d="M1283.3,-1332.99C1339.46,-1341.37 1447.36,-1357.46 1509.11,-1366.66"/>
<polygon fill="gray" stroke="gray" points="1508.94,-1370.18 1519.34,-1368.19 1509.97,-1363.25 1508.94,-1370.18"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id().</title>
<polygon fill="lightblue" stroke="black" points="1665,-467.58 1448,-467.58 1448,-431.58 1665,-431.58 1665,-467.58"/>
<text text-anchor="middle" x="1556.5" y="-445.88" font-family="Helvetica,sans-Serif" font-size="14.00">remove_states_with_chain_id</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<polygon fill="lightblue" stroke="black" points="1816.5,-440.58 1742.5,-440.58 1742.5,-404.58 1816.5,-404.58 1816.5,-440.58"/>
<text text-anchor="middle" x="1779.5" y="-418.88" font-family="Helvetica,sans-Serif" font-size="14.00">chain_id</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M1665.09,-436.44C1688.72,-433.55 1712.53,-430.64 1732.2,-428.24"/>
<polygon fill="gray" stroke="gray" points="1732.87,-431.68 1742.37,-427 1732.02,-424.73 1732.87,-431.68"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key().</title>
<polygon fill="lightblue" stroke="black" points="1668,-1137.58 1445,-1137.58 1445,-1101.58 1668,-1101.58 1668,-1137.58"/>
<text text-anchor="middle" x="1556.5" y="-1115.88" font-family="Helvetica,sans-Serif" font-size="14.00">remove_sender_message_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf().</title>
<polygon fill="lightblue" stroke="black" points="1837,-1137.58 1722,-1137.58 1722,-1101.58 1837,-1101.58 1837,-1137.58"/>
<text text-anchor="middle" x="1779.5" y="-1115.88" font-family="Helvetica,sans-Serif" font-size="14.00">from_protobuf</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf().</title>
<path fill="none" stroke="gray" d="M1668,-1119.58C1682.88,-1119.58 1697.75,-1119.58 1711.55,-1119.58"/>
<polygon fill="gray" stroke="gray" points="1711.87,-1123.08 1721.87,-1119.58 1711.87,-1116.08 1711.87,-1123.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize().</title>
<polygon fill="lightblue" stroke="black" points="930.5,-1599.58 856.5,-1599.58 856.5,-1563.58 930.5,-1563.58 930.5,-1599.58"/>
<text text-anchor="middle" x="893.5" y="-1577.88" font-family="Helvetica,sans-Serif" font-size="14.00">serialize</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf().</title>
<polygon fill="lightblue" stroke="black" points="1295,-1599.58 1197,-1599.58 1197,-1563.58 1295,-1563.58 1295,-1599.58"/>
<text text-anchor="middle" x="1246" y="-1577.88" font-family="Helvetica,sans-Serif" font-size="14.00">as_protobuf</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf().</title>
<path fill="none" stroke="gray" d="M930.69,-1581.58C991.2,-1581.58 1113.46,-1581.58 1186.38,-1581.58"/>
<polygon fill="gray" stroke="gray" points="1186.77,-1585.08 1196.77,-1581.58 1186.77,-1578.08 1186.77,-1585.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv().</title>
<polygon fill="lightblue" stroke="black" points="1583.5,-613.58 1529.5,-613.58 1529.5,-577.58 1583.5,-577.58 1583.5,-613.58"/>
<text text-anchor="middle" x="1556.5" y="-591.88" font-family="Helvetica,sans-Serif" font-size="14.00">iv</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf().</title>
<polygon fill="lightblue" stroke="black" points="1303.5,-1545.58 1188.5,-1545.58 1188.5,-1509.58 1303.5,-1509.58 1303.5,-1545.58"/>
<text text-anchor="middle" x="1246" y="-1523.88" font-family="Helvetica,sans-Serif" font-size="14.00">from_protobuf</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().</title>
<polygon fill="lightblue" stroke="black" points="1853,-183.58 1706,-183.58 1706,-147.58 1853,-147.58 1853,-183.58"/>
<text text-anchor="middle" x="1779.5" y="-161.88" font-family="Helvetica,sans-Serif" font-size="14.00">signing_key_public</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey][`TryFrom&lt;&amp;[u8]&gt;`]try_from(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey][`TryFrom&lt;&amp;[u8]&gt;`]try_from().</title>
<polygon fill="lightgray" stroke="black" points="1983,-183.58 1908,-183.58 1908,-147.58 1983,-147.58 1983,-183.58"/>
<text text-anchor="middle" x="1945.5" y="-161.88" font-family="Helvetica,sans-Serif" font-size="14.00">try_from</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey][`TryFrom&lt;&amp;[u8]&gt;`]try_from(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey][`TryFrom&lt;&amp;[u8]&gt;`]try_from().</title>
<path fill="none" stroke="gray" d="M1853.39,-165.58C1868.39,-165.58 1883.79,-165.58 1897.58,-165.58"/>
<polygon fill="gray" stroke="gray" points="1897.76,-169.08 1907.76,-165.58 1897.76,-162.08 1897.76,-169.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state().</title>
<polygon fill="lightblue" stroke="black" points="1314.5,-283.58 1177.5,-283.58 1177.5,-247.58 1314.5,-247.58 1314.5,-283.58"/>
<text text-anchor="middle" x="1246" y="-261.88" font-family="Helvetica,sans-Serif" font-size="14.00">sender_key_state</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private().</title>
<polygon fill="lightblue" stroke="black" points="1633.5,-921.58 1479.5,-921.58 1479.5,-885.58 1633.5,-885.58 1633.5,-921.58"/>
<text text-anchor="middle" x="1556.5" y="-899.88" font-family="Helvetica,sans-Serif" font-size="14.00">signing_key_private</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]deserialize(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]deserialize().</title>
<polygon fill="lightgray" stroke="black" points="1825,-921.58 1734,-921.58 1734,-885.58 1825,-885.58 1825,-921.58"/>
<text text-anchor="middle" x="1779.5" y="-899.88" font-family="Helvetica,sans-Serif" font-size="14.00">deserialize</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]deserialize(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]deserialize().</title>
<path fill="none" stroke="gray" d="M1633.56,-903.58C1663.23,-903.58 1696.58,-903.58 1723.8,-903.58"/>
<polygon fill="gray" stroke="gray" points="1723.92,-907.08 1733.92,-903.58 1723.92,-900.08 1723.92,-907.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().</title>
<polygon fill="lightblue" stroke="black" points="989.5,-508.58 797.5,-508.58 797.5,-472.58 989.5,-472.58 989.5,-508.58"/>
<text text-anchor="middle" x="893.5" y="-486.88" font-family="Helvetica,sans-Serif" font-size="14.00">assert_records_chain_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().</title>
<path fill="none" stroke="gray" d="M989.76,-489.44C1011.09,-485.2 1032.32,-477.37 1049,-463.58 1083.8,-434.81 1051.06,-398.36 1085,-368.58 1195.53,-271.6 1298.59,-391.92 1407,-292.58 1444.61,-258.11 1402.47,-214.57 1443,-183.58 1481.22,-154.36 1609.5,-155.32 1695.9,-159.71"/>
<polygon fill="gray" stroke="gray" points="1695.79,-163.2 1705.96,-160.24 1696.16,-156.21 1695.79,-163.2"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id().</title>
<polygon fill="lightblue" stroke="black" points="1670,-521.58 1443,-521.58 1443,-485.58 1670,-485.58 1670,-521.58"/>
<text text-anchor="middle" x="1556.5" y="-499.88" font-family="Helvetica,sans-Serif" font-size="14.00">sender_key_state_for_chain_id</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id().</title>
<path fill="none" stroke="gray" d="M989.56,-492.45C1106.25,-494.75 1304.41,-498.64 1432.58,-501.16"/>
<polygon fill="gray" stroke="gray" points="1432.77,-504.67 1442.84,-501.37 1432.91,-497.67 1432.77,-504.67"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M989.74,-505.57C1169.06,-532.16 1549.59,-580.29 1670,-530.58 1709.73,-514.18 1742.56,-475.4 1761.36,-449.06"/>
<polygon fill="gray" stroke="gray" points="1764.36,-450.87 1767.18,-440.66 1758.61,-446.88 1764.36,-450.87"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().</title>
<polygon fill="lightblue" stroke="black" points="1626.5,-1191.58 1486.5,-1191.58 1486.5,-1155.58 1626.5,-1155.58 1626.5,-1191.58"/>
<text text-anchor="middle" x="1556.5" y="-1169.88" font-family="Helvetica,sans-Serif" font-size="14.00">sender_chain_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().</title>
<path fill="none" stroke="gray" d="M896.93,-508.83C910.32,-606.4 978.36,-1065.07 1085,-1149.58 1143.55,-1195.98 1358.11,-1188.38 1476.22,-1180.22"/>
<polygon fill="gray" stroke="gray" points="1476.57,-1183.71 1486.3,-1179.51 1476.08,-1176.72 1476.57,-1183.71"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty().</title>
<polygon fill="lightblue" stroke="black" points="1294,-153.58 1198,-153.58 1198,-117.58 1294,-117.58 1294,-153.58"/>
<text text-anchor="middle" x="1246" y="-131.88" font-family="Helvetica,sans-Serif" font-size="14.00">new_empty</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]from_protobuf().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]new().</title>
<path fill="none" stroke="gray" d="M1837.4,-1102.23C1861.09,-1095.01 1887.88,-1086.84 1908.74,-1080.48"/>
<polygon fill="gray" stroke="gray" points="1909.91,-1083.78 1918.46,-1077.52 1907.87,-1077.09 1909.91,-1083.78"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version().</title>
<polygon fill="lightblue" stroke="black" points="1625,-305.58 1488,-305.58 1488,-269.58 1625,-269.58 1625,-305.58"/>
<text text-anchor="middle" x="1556.5" y="-283.88" font-family="Helvetica,sans-Serif" font-size="14.00">message_version</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state().</title>
<polygon fill="lightblue" stroke="black" points="1611.5,-413.58 1501.5,-413.58 1501.5,-377.58 1611.5,-377.58 1611.5,-413.58"/>
<text text-anchor="middle" x="1556.5" y="-391.88" font-family="Helvetica,sans-Serif" font-size="14.00">remove_state</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().</title>
<path fill="none" stroke="gray" d="M1611.61,-391.89C1631.59,-388.27 1653.39,-381.41 1670,-368.58 1728.41,-323.46 1759.01,-237.78 1771.53,-193.55"/>
<polygon fill="gray" stroke="gray" points="1774.95,-194.33 1774.2,-183.76 1768.19,-192.49 1774.95,-194.33"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M1611.56,-402.19C1648.55,-406.7 1697.06,-412.63 1732.26,-416.93"/>
<polygon fill="gray" stroke="gray" points="1731.91,-420.42 1742.26,-418.15 1732.76,-413.47 1731.91,-420.42"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 crypto/hmac_sha256(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 crypto/hmac_sha256().</title>
<polygon fill="lightgray" stroke="black" points="2002,-1191.58 1889,-1191.58 1889,-1155.58 2002,-1155.58 2002,-1191.58"/>
<text text-anchor="middle" x="1945.5" y="-1169.88" font-family="Helvetica,sans-Serif" font-size="14.00">hmac_sha256</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 crypto/hmac_sha256(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 crypto/hmac_sha256().</title>
<path fill="none" stroke="gray" d="M1837.4,-1173.58C1850.67,-1173.58 1864.91,-1173.58 1878.54,-1173.58"/>
<polygon fill="gray" stroke="gray" points="1878.81,-1177.08 1888.81,-1173.58 1878.81,-1170.08 1878.81,-1177.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[InvalidSessionError][Display]fmt(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[InvalidSessionError][Display]fmt().</title>
<polygon fill="lightblue" stroke="black" points="378,-1626.58 324,-1626.58 324,-1590.58 378,-1590.58 378,-1626.58"/>
<text text-anchor="middle" x="351" y="-1604.88" font-family="Helvetica,sans-Serif" font-size="14.00">fmt</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().</title>
<polygon fill="lightblue" stroke="black" points="1583.5,-759.58 1529.5,-759.58 1529.5,-723.58 1583.5,-723.58 1583.5,-759.58"/>
<text text-anchor="middle" x="1556.5" y="-737.88" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf().</title>
<polygon fill="lightblue" stroke="black" points="1828.5,-975.58 1730.5,-975.58 1730.5,-939.58 1828.5,-939.58 1828.5,-975.58"/>
<text text-anchor="middle" x="1779.5" y="-953.88" font-family="Helvetica,sans-Serif" font-size="14.00">as_protobuf</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf().</title>
<path fill="none" stroke="gray" d="M1583.59,-740.46C1609.16,-740.85 1647.47,-745.67 1670,-768.58 1721.71,-821.17 1657.56,-874.96 1706,-930.58 1710.23,-935.43 1715.41,-939.42 1721.04,-942.68"/>
<polygon fill="gray" stroke="gray" points="1719.68,-945.92 1730.19,-947.25 1722.81,-939.65 1719.68,-945.92"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new().</title>
<path fill="none" stroke="gray" d="M1583.78,-739.84C1609.87,-739.69 1648.94,-744.04 1670,-768.58 1732.73,-841.69 1647.8,-1123.82 1706,-1200.58 1714.67,-1212.01 1728.72,-1218.6 1742.15,-1222.4"/>
<polygon fill="gray" stroke="gray" points="1741.67,-1225.89 1752.21,-1224.8 1743.29,-1219.08 1741.67,-1225.89"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]serialize(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]serialize().</title>
<polygon fill="lightgray" stroke="black" points="1816.5,-732.58 1742.5,-732.58 1742.5,-696.58 1816.5,-696.58 1816.5,-732.58"/>
<text text-anchor="middle" x="1779.5" y="-710.88" font-family="Helvetica,sans-Serif" font-size="14.00">serialize</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]serialize(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]serialize().</title>
<path fill="none" stroke="gray" d="M1583.72,-738.38C1620.32,-733.91 1687.28,-725.73 1732.33,-720.22"/>
<polygon fill="gray" stroke="gray" points="1732.94,-723.67 1742.44,-718.99 1732.09,-716.72 1732.94,-723.67"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]serialize(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]serialize().</title>
<polygon fill="lightgray" stroke="black" points="1816.5,-786.58 1742.5,-786.58 1742.5,-750.58 1816.5,-750.58 1816.5,-786.58"/>
<text text-anchor="middle" x="1779.5" y="-764.88" font-family="Helvetica,sans-Serif" font-size="14.00">serialize</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]serialize(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]serialize().</title>
<path fill="none" stroke="gray" d="M1583.72,-744.78C1620.32,-749.26 1687.28,-757.44 1732.33,-762.94"/>
<polygon fill="gray" stroke="gray" points="1732.09,-766.44 1742.44,-764.18 1732.94,-759.49 1732.09,-766.44"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut().</title>
<polygon fill="lightblue" stroke="black" points="1642,-867.58 1471,-867.58 1471,-831.58 1642,-831.58 1642,-867.58"/>
<text text-anchor="middle" x="1556.5" y="-845.88" font-family="Helvetica,sans-Serif" font-size="14.00">sender_key_state_mut</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]get_derivative().</title>
<path fill="none" stroke="gray" d="M1583.88,-1221.31C1606.69,-1215.88 1640.54,-1207.78 1670,-1200.58 1683.58,-1197.26 1698.11,-1193.67 1711.97,-1190.23"/>
<polygon fill="gray" stroke="gray" points="1713.07,-1193.56 1721.93,-1187.75 1711.38,-1186.77 1713.07,-1193.56"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new().</title>
<path fill="none" stroke="gray" d="M1583.72,-1227.58C1623.1,-1227.58 1697.63,-1227.58 1742.2,-1227.58"/>
<polygon fill="gray" stroke="gray" points="1742.31,-1231.08 1752.31,-1227.58 1742.31,-1224.08 1742.31,-1231.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidState# -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidState#</title>
<polygon fill="lightgray" stroke="black" points="1829,-1387.58 1730,-1387.58 1730,-1351.58 1829,-1351.58 1829,-1387.58"/>
<text text-anchor="middle" x="1779.5" y="-1365.88" font-family="Helvetica,sans-Serif" font-size="14.00">InvalidState</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidState# -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidState#</title>
<path fill="none" stroke="gray" d="M1583.64,-1229.59C1607.5,-1232.37 1643.06,-1238.98 1670,-1254.58 1708.2,-1276.71 1741.22,-1316.42 1760.5,-1342.89"/>
<polygon fill="gray" stroke="gray" points="1757.85,-1345.2 1766.5,-1351.31 1763.55,-1341.14 1757.85,-1345.2"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf().</title>
<polygon fill="lightblue" stroke="black" points="1605.5,-1599.58 1507.5,-1599.58 1507.5,-1563.58 1605.5,-1563.58 1605.5,-1599.58"/>
<text text-anchor="middle" x="1556.5" y="-1577.88" font-family="Helvetica,sans-Serif" font-size="14.00">as_protobuf</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().</title>
<polygon fill="lightblue" stroke="black" points="689.5,-292.58 12.5,-292.58 12.5,-256.58 689.5,-256.58 689.5,-292.58"/>
<text text-anchor="middle" x="351" y="-270.88" font-family="Helvetica,sans-Serif" font-size="14.00">when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<path fill="none" stroke="gray" d="M685.46,-292.73C691.09,-295.48 696.61,-298.42 702,-301.58 726.89,-316.16 713.84,-339.82 738,-355.58 748.81,-362.63 760.92,-368 773.47,-372.06"/>
<polygon fill="gray" stroke="gray" points="772.56,-375.44 783.14,-374.92 774.55,-368.73 772.56,-375.44"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().</title>
<path fill="none" stroke="gray" d="M429.47,-256.54C507.82,-243.22 627.65,-237.08 702,-301.58 757.71,-349.91 684.67,-412.63 738,-463.58 751.6,-476.58 769.11,-484.52 787.43,-489.2"/>
<polygon fill="gray" stroke="gray" points="786.85,-492.66 797.37,-491.42 788.37,-485.82 786.85,-492.66"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<path fill="none" stroke="gray" d="M685.46,-256.44C691.09,-253.69 696.61,-250.74 702,-247.58 726.89,-233 713.84,-209.34 738,-193.58 768.36,-173.78 808.91,-167.27 840.85,-165.59"/>
<polygon fill="gray" stroke="gray" points="841.04,-169.08 850.9,-165.2 840.77,-162.09 841.04,-169.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<path fill="none" stroke="gray" d="M438.81,-292.6C516.04,-303.38 627.91,-305.44 702,-247.58 741.88,-216.44 699.66,-172.6 738,-139.58 757.4,-122.87 783.39,-114.8 808.51,-111.26"/>
<polygon fill="gray" stroke="gray" points="808.93,-114.74 818.45,-110.09 808.11,-107.79 808.93,-114.74"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<path fill="none" stroke="gray" d="M609.74,-256.58C640.85,-253.85 672.16,-250.84 702,-247.58 755.87,-241.69 817.98,-232.42 856.24,-226.42"/>
<polygon fill="gray" stroke="gray" points="857.04,-229.84 866.37,-224.82 855.95,-222.93 857.04,-229.84"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states().</title>
<polygon fill="lightblue" stroke="black" points="988.5,-454.58 798.5,-454.58 798.5,-418.58 988.5,-418.58 988.5,-454.58"/>
<text text-anchor="middle" x="893.5" y="-432.88" font-family="Helvetica,sans-Serif" font-size="14.00">assert_number_of_states</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_different_public_key_but_same_chain_id_added_then_it_gets_replaced().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states().</title>
<path fill="none" stroke="gray" d="M438.81,-256.56C516.04,-245.78 627.91,-243.72 702,-301.58 741.88,-332.72 699.66,-376.56 738,-409.58 752.25,-421.86 770.06,-429.47 788.48,-434.05"/>
<polygon fill="gray" stroke="gray" points="787.93,-437.51 798.44,-436.24 789.43,-430.68 787.93,-437.51"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().</title>
<polygon fill="lightblue" stroke="black" points="421,-238.58 281,-238.58 281,-202.58 421,-202.58 421,-238.58"/>
<text text-anchor="middle" x="351" y="-216.88" font-family="Helvetica,sans-Serif" font-size="14.00">add_second_state</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<path fill="none" stroke="gray" d="M421.1,-205.27C498.03,-192.49 622.03,-185.12 702,-247.58 741.88,-278.72 699.66,-322.56 738,-355.58 748.38,-364.52 760.64,-370.99 773.65,-375.61"/>
<polygon fill="gray" stroke="gray" points="772.64,-378.96 783.23,-378.66 774.76,-372.29 772.64,-378.96"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().</title>
<path fill="none" stroke="gray" d="M421.2,-216.25C511.42,-212.19 662.39,-211.31 702,-247.58 773.78,-313.3 669.45,-394.49 738,-463.58 751.33,-477.02 768.81,-485.15 787.21,-489.86"/>
<polygon fill="gray" stroke="gray" points="786.67,-493.33 797.2,-492.08 788.19,-486.5 786.67,-493.33"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<path fill="none" stroke="gray" d="M421.19,-216.55C491.88,-212.13 604.76,-204.21 702,-193.58 749.05,-188.44 802.37,-180.72 840.61,-174.85"/>
<polygon fill="gray" stroke="gray" points="841.63,-178.23 850.97,-173.25 840.56,-171.31 841.63,-178.23"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<path fill="none" stroke="gray" d="M421.02,-232.12C495.65,-240.95 615.5,-244.25 702,-193.58 726.89,-179 713.84,-155.34 738,-139.58 758.75,-126.05 784.26,-118.73 808.53,-114.91"/>
<polygon fill="gray" stroke="gray" points="809.05,-118.37 818.47,-113.52 808.08,-111.43 809.05,-118.37"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<path fill="none" stroke="gray" d="M421,-220.58C537.09,-220.58 767.49,-220.58 856.36,-220.58"/>
<polygon fill="gray" stroke="gray" points="856.48,-224.08 866.48,-220.58 856.48,-217.08 856.48,-224.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_second_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states().</title>
<path fill="none" stroke="gray" d="M421.27,-203.98C499.22,-189.75 625,-180.79 702,-247.58 757.71,-295.91 684.67,-358.63 738,-409.58 751.83,-422.8 769.71,-430.79 788.37,-435.44"/>
<polygon fill="gray" stroke="gray" points="787.66,-438.86 798.18,-437.57 789.15,-432.02 787.66,-438.86"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[KeyPair]generate(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[KeyPair]generate().</title>
<polygon fill="lightgray" stroke="black" points="1285.5,-99.58 1206.5,-99.58 1206.5,-63.58 1285.5,-63.58 1285.5,-99.58"/>
<text text-anchor="middle" x="1246" y="-77.88" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[KeyPair]generate(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[KeyPair]generate().</title>
<path fill="none" stroke="gray" d="M968.83,-106.01C1037.27,-99.95 1136.84,-91.15 1195.86,-85.93"/>
<polygon fill="gray" stroke="gray" points="1196.38,-89.39 1206.04,-85.03 1195.77,-82.42 1196.38,-89.39"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().</title>
<polygon fill="lightblue" stroke="black" points="417,-400.58 285,-400.58 285,-364.58 417,-364.58 417,-400.58"/>
<text text-anchor="middle" x="351" y="-378.88" font-family="Helvetica,sans-Serif" font-size="14.00">add_single_state</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<path fill="none" stroke="gray" d="M417.2,-382.58C505.21,-382.58 663.61,-382.58 773.22,-382.58"/>
<polygon fill="gray" stroke="gray" points="773.34,-386.08 783.34,-382.58 773.34,-379.08 773.34,-386.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().</title>
<path fill="none" stroke="gray" d="M417.09,-396.94C493.71,-413.68 624.87,-441.83 738,-463.58 753.83,-466.62 770.61,-469.7 787.04,-472.64"/>
<polygon fill="gray" stroke="gray" points="786.76,-476.15 797.22,-474.45 787.98,-469.25 786.76,-476.15"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<path fill="none" stroke="gray" d="M417.12,-398.41C494.7,-413.07 623.62,-423.57 702,-355.58 757.71,-307.25 684.67,-244.53 738,-193.58 764.94,-167.84 807.23,-161.9 840.75,-161.95"/>
<polygon fill="gray" stroke="gray" points="840.79,-165.46 850.85,-162.15 840.92,-158.46 840.79,-165.46"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<path fill="none" stroke="gray" d="M417.05,-398.97C495.17,-414.39 625.25,-425.85 702,-355.58 773.78,-289.86 669.45,-208.67 738,-139.58 756.37,-121.07 782.62,-112.63 808.29,-109.31"/>
<polygon fill="gray" stroke="gray" points="808.87,-112.77 818.46,-108.25 808.15,-105.81 808.87,-112.77"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<path fill="none" stroke="gray" d="M417.33,-397.25C493.92,-410.41 620.7,-419.07 702,-355.58 741.88,-324.44 699.66,-280.6 738,-247.58 770.63,-219.48 821.9,-215.79 856.33,-217.08"/>
<polygon fill="gray" stroke="gray" points="856.27,-220.58 866.44,-217.62 856.64,-213.59 856.27,-220.58"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/add_single_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states().</title>
<path fill="none" stroke="gray" d="M417.2,-389.09C509.36,-398.3 678.71,-415.22 788.4,-426.18"/>
<polygon fill="gray" stroke="gray" points="788.19,-429.68 798.49,-427.19 788.89,-422.71 788.19,-429.68"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().</title>
<path fill="none" stroke="gray" d="M970.32,-33.31C1005.17,-28.67 1047.09,-23.86 1085,-21.58 1345.63,-5.9 1434.6,37.4 1670,-75.58 1703.01,-91.43 1734.5,-119.49 1754.97,-140.08"/>
<polygon fill="gray" stroke="gray" points="1752.51,-142.57 1761.99,-147.29 1757.52,-137.69 1752.51,-142.57"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M970.37,-33.32C1072.24,-21.04 1257.7,-8.72 1407,-54.58 1540.28,-95.52 1575.08,-123.46 1670,-225.58 1718.03,-277.26 1752.31,-354.13 1768.32,-394.88"/>
<polygon fill="gray" stroke="gray" points="1765.14,-396.35 1772,-404.43 1771.67,-393.84 1765.14,-396.35"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize().</title>
<polygon fill="lightblue" stroke="black" points="939,-1545.58 848,-1545.58 848,-1509.58 939,-1509.58 939,-1545.58"/>
<text text-anchor="middle" x="893.5" y="-1523.88" font-family="Helvetica,sans-Serif" font-size="14.00">deserialize</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]from_protobuf().</title>
<path fill="none" stroke="gray" d="M939.25,-1527.58C999.76,-1527.58 1108.15,-1527.58 1178.29,-1527.58"/>
<polygon fill="gray" stroke="gray" points="1178.35,-1531.08 1188.35,-1527.58 1178.35,-1524.08 1178.35,-1531.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding# -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#</title>
<polygon fill="lightgray" stroke="black" points="1339,-1491.58 1153,-1491.58 1153,-1455.58 1339,-1455.58 1339,-1491.58"/>
<text text-anchor="middle" x="1246" y="-1469.88" font-family="Helvetica,sans-Serif" font-size="14.00">InvalidProtobufEncoding</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding# -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidProtobufEncoding#</title>
<path fill="none" stroke="gray" d="M939.25,-1520.69C990.24,-1512.83 1075.25,-1499.73 1142.7,-1489.34"/>
<polygon fill="gray" stroke="gray" points="1143.59,-1492.75 1152.94,-1487.76 1142.53,-1485.83 1143.59,-1492.75"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf().</title>
<polygon fill="lightblue" stroke="black" points="1828.5,-1083.58 1730.5,-1083.58 1730.5,-1047.58 1828.5,-1047.58 1828.5,-1083.58"/>
<text text-anchor="middle" x="1779.5" y="-1061.88" font-family="Helvetica,sans-Serif" font-size="14.00">as_protobuf</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().</title>
<polygon fill="lightblue" stroke="black" points="1407,-1437.58 1085,-1437.58 1085,-1401.58 1407,-1401.58 1407,-1437.58"/>
<text text-anchor="middle" x="1246" y="-1415.88" font-family="Helvetica,sans-Serif" font-size="14.00">when_sender_chain_key_iteration_overflows</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().</title>
<path fill="none" stroke="gray" d="M1327.22,-1401.55C1355.53,-1391.73 1385.61,-1376.85 1407,-1354.58 1439.72,-1320.51 1407.81,-1286.1 1443,-1254.58 1463.59,-1236.14 1494.56,-1229.72 1518.8,-1227.73"/>
<polygon fill="gray" stroke="gray" points="1519.28,-1231.21 1529.06,-1227.11 1518.86,-1224.22 1519.28,-1231.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new().</title>
<path fill="none" stroke="gray" d="M1407.24,-1427.57C1507.82,-1429.71 1626.44,-1426.11 1670,-1400.58 1696.18,-1385.24 1689.91,-1368.3 1706,-1342.58 1724.9,-1312.37 1746.72,-1277.8 1761.44,-1254.52"/>
<polygon fill="gray" stroke="gray" points="1764.52,-1256.2 1766.91,-1245.88 1758.6,-1252.46 1764.52,-1256.2"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidState# -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_chain_key_iteration_tests/when_sender_chain_key_iteration_overflows().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 error/SignalProtocolError#InvalidState#</title>
<path fill="none" stroke="gray" d="M1407.2,-1434.62C1505.64,-1441.97 1621.84,-1446.73 1670,-1433.58 1698.43,-1425.82 1726.99,-1408.5 1747.67,-1393.83"/>
<polygon fill="gray" stroke="gray" points="1750,-1396.46 1756.03,-1387.74 1745.88,-1390.8 1750,-1396.46"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M1641.97,-485.51C1651.52,-482.82 1661.03,-479.84 1670,-476.58 1693.32,-468.1 1718.18,-455.98 1738.22,-445.36"/>
<polygon fill="gray" stroke="gray" points="1739.91,-448.43 1747.06,-440.61 1736.59,-442.26 1739.91,-448.43"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration().</title>
<polygon fill="lightblue" stroke="black" points="1593.5,-813.58 1519.5,-813.58 1519.5,-777.58 1593.5,-777.58 1593.5,-813.58"/>
<text text-anchor="middle" x="1556.5" y="-791.88" font-family="Helvetica,sans-Serif" font-size="14.00">iteration</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key().</title>
<polygon fill="lightblue" stroke="black" points="1640,-975.58 1473,-975.58 1473,-939.58 1640,-939.58 1640,-975.58"/>
<text text-anchor="middle" x="1556.5" y="-953.88" font-family="Helvetica,sans-Serif" font-size="14.00">set_sender_chain_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]as_protobuf().</title>
<path fill="none" stroke="gray" d="M1640.11,-957.58C1666.71,-957.58 1695.62,-957.58 1720.11,-957.58"/>
<polygon fill="gray" stroke="gray" points="1720.31,-961.08 1730.31,-957.58 1720.31,-954.08 1720.31,-961.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging().</title>
<polygon fill="lightblue" stroke="black" points="1639.5,-359.58 1473.5,-359.58 1473.5,-323.58 1639.5,-323.58 1639.5,-359.58"/>
<text text-anchor="middle" x="1556.5" y="-337.88" font-family="Helvetica,sans-Serif" font-size="14.00">chain_ids_for_logging</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M1639.56,-358.98C1649.92,-361.84 1660.28,-365.05 1670,-368.58 1693.32,-377.06 1718.18,-389.19 1738.22,-399.8"/>
<polygon fill="gray" stroke="gray" points="1736.59,-402.9 1747.06,-404.55 1739.91,-396.74 1736.59,-402.9"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key().</title>
<polygon fill="lightblue" stroke="black" points="1655,-1083.58 1458,-1083.58 1458,-1047.58 1655,-1047.58 1655,-1083.58"/>
<text text-anchor="middle" x="1556.5" y="-1061.88" font-family="Helvetica,sans-Serif" font-size="14.00">add_sender_message_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]as_protobuf().</title>
<path fill="none" stroke="gray" d="M1655.08,-1065.58C1677.33,-1065.58 1700.29,-1065.58 1720.29,-1065.58"/>
<polygon fill="gray" stroke="gray" points="1720.45,-1069.08 1730.45,-1065.58 1720.45,-1062.08 1720.45,-1069.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty().</title>
<path fill="none" stroke="gray" d="M920.65,-219.58C952.21,-217.58 1006.35,-211.58 1049,-193.58 1067.18,-185.91 1066.91,-175.47 1085,-167.58 1117.42,-153.43 1156.29,-145.47 1187.6,-141.03"/>
<polygon fill="gray" stroke="gray" points="1188.45,-144.45 1197.9,-139.66 1187.53,-137.51 1188.45,-144.45"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]as_protobuf().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]as_protobuf().</title>
<path fill="none" stroke="gray" d="M1295.2,-1581.58C1349.8,-1581.58 1438.74,-1581.58 1497.2,-1581.58"/>
<polygon fill="gray" stroke="gray" points="1497.38,-1585.08 1507.38,-1581.58 1497.38,-1578.08 1497.38,-1585.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_states_with_chain_id().</title>
<path fill="none" stroke="gray" d="M1331.3,-449.58C1364.02,-449.58 1402.06,-449.58 1437.42,-449.58"/>
<polygon fill="gray" stroke="gray" points="1437.8,-453.08 1447.8,-449.58 1437.8,-446.08 1437.8,-453.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]remove_state().</title>
<path fill="none" stroke="gray" d="M1331.32,-435.56C1355.74,-431.44 1382.44,-426.89 1407,-422.58 1434.57,-417.75 1464.99,-412.25 1491.08,-407.48"/>
<polygon fill="gray" stroke="gray" points="1492.01,-410.86 1501.22,-405.62 1490.75,-403.98 1492.01,-410.86"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]new().</title>
<path fill="none" stroke="gray" d="M1259.52,-467.89C1288.27,-508.99 1362.77,-610.2 1443,-676.58 1466.68,-696.17 1497.01,-713.32 1520.21,-725.07"/>
<polygon fill="gray" stroke="gray" points="1518.85,-728.3 1529.36,-729.62 1521.96,-722.04 1518.85,-728.3"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().</title>
<polygon fill="lightblue" stroke="black" points="702,-130.58 0,-130.58 0,-94.58 702,-94.58 702,-130.58"/>
<text text-anchor="middle" x="351" y="-108.88" font-family="Helvetica,sans-Serif" font-size="14.00">when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<path fill="none" stroke="gray" d="M425.84,-94.52C504.62,-80.04 628.06,-71.88 702,-139.58 773.78,-205.3 669.45,-286.49 738,-355.58 747.95,-365.61 760.22,-372.69 773.46,-377.59"/>
<polygon fill="gray" stroke="gray" points="772.65,-381.01 783.25,-380.79 774.83,-374.36 772.65,-381.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<path fill="none" stroke="gray" d="M609.74,-130.58C640.85,-133.31 672.16,-136.32 702,-139.58 749.05,-144.72 802.37,-152.44 840.61,-158.31"/>
<polygon fill="gray" stroke="gray" points="840.56,-161.85 850.97,-159.92 841.63,-154.93 840.56,-161.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<path fill="none" stroke="gray" d="M702.32,-112.58C741.28,-112.58 777.79,-112.58 808.21,-112.58"/>
<polygon fill="gray" stroke="gray" points="808.29,-116.08 818.29,-112.58 808.29,-109.08 808.29,-116.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_record_order().</title>
<path fill="none" stroke="gray" d="M495.43,-94.54C594.6,-82.06 723.24,-65.87 806.81,-55.36"/>
<polygon fill="gray" stroke="gray" points="807.29,-58.83 816.77,-54.11 806.41,-51.88 807.29,-58.83"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_becomes_the_most_recent().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<path fill="none" stroke="gray" d="M685.46,-130.73C691.09,-133.48 696.61,-136.42 702,-139.58 726.89,-154.16 713.84,-177.82 738,-193.58 773.5,-216.73 822.95,-221.71 856.26,-222.06"/>
<polygon fill="gray" stroke="gray" points="856.48,-225.56 866.47,-222.03 856.46,-218.56 856.48,-225.56"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key().</title>
<polygon fill="lightblue" stroke="black" points="1602,-667.58 1511,-667.58 1511,-631.58 1602,-631.58 1602,-667.58"/>
<text text-anchor="middle" x="1556.5" y="-645.88" font-family="Helvetica,sans-Serif" font-size="14.00">cipher_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().</title>
<polygon fill="lightblue" stroke="black" points="667,-346.58 35,-346.58 35,-310.58 667,-310.58 667,-346.58"/>
<text text-anchor="middle" x="351" y="-324.88" font-family="Helvetica,sans-Serif" font-size="14.00">when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]add_sender_key_state_record().</title>
<path fill="none" stroke="gray" d="M609.74,-346.58C640.85,-349.31 672.16,-352.32 702,-355.58 725.1,-358.11 749.71,-361.25 773.31,-364.5"/>
<polygon fill="gray" stroke="gray" points="772.96,-367.98 783.35,-365.89 773.93,-361.05 772.96,-367.98"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_records_chain_key().</title>
<path fill="none" stroke="gray" d="M438.81,-310.56C516.04,-299.78 627.91,-297.72 702,-355.58 741.88,-386.72 699.66,-430.56 738,-463.58 751.93,-475.58 769.25,-483.12 787.21,-487.73"/>
<polygon fill="gray" stroke="gray" points="786.71,-491.21 797.24,-490 788.26,-484.38 786.71,-491.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/chain_key().</title>
<path fill="none" stroke="gray" d="M438.81,-346.6C516.04,-357.38 627.91,-359.44 702,-301.58 741.88,-270.44 699.66,-226.6 738,-193.58 765.93,-169.53 807.51,-163.36 840.5,-162.89"/>
<polygon fill="gray" stroke="gray" points="840.88,-166.39 850.89,-162.92 840.9,-159.39 840.88,-166.39"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/random_public_key().</title>
<path fill="none" stroke="gray" d="M429.47,-346.63C507.82,-359.94 627.65,-366.08 702,-301.58 757.71,-253.25 684.67,-190.53 738,-139.58 756.68,-121.73 782.75,-113.4 808.15,-109.99"/>
<polygon fill="gray" stroke="gray" points="808.66,-113.46 818.22,-108.88 807.89,-106.5 808.66,-113.46"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]new().</title>
<path fill="none" stroke="gray" d="M667.4,-318.45C679.37,-313.64 690.96,-308.05 702,-301.58 726.89,-287 713.84,-263.34 738,-247.58 773.5,-224.43 822.95,-219.45 856.26,-219.1"/>
<polygon fill="gray" stroke="gray" points="856.46,-222.6 866.47,-219.14 856.48,-215.6 856.46,-222.6"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/when_second_state_with_same_public_key_and_chain_id_added_then_it_keeps_first_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/sender_key_record_add_sender_key_state_tests/impl#[TestContext]assert_number_of_states().</title>
<path fill="none" stroke="gray" d="M667.4,-338.71C679.37,-343.52 690.96,-349.11 702,-355.58 726.89,-370.16 713.84,-393.82 738,-409.58 753.11,-419.43 770.74,-425.99 788.58,-430.31"/>
<polygon fill="gray" stroke="gray" points="787.98,-433.76 798.49,-432.48 789.48,-426.92 787.98,-433.76"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]new().</title>
<path fill="none" stroke="gray" d="M1626.54,-1190.05C1640.91,-1193.51 1655.95,-1197.15 1670,-1200.58 1694.14,-1206.48 1721.28,-1213.24 1742.38,-1218.51"/>
<polygon fill="gray" stroke="gray" points="1741.65,-1221.94 1752.21,-1220.97 1743.36,-1215.15 1741.65,-1221.94"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().</title>
<polygon fill="lightgray" stroke="black" points="1043.5,-346.58 743.5,-346.58 743.5,-310.58 1043.5,-310.58 1043.5,-346.58"/>
<text text-anchor="middle" x="893.5" y="-324.88" font-family="Helvetica,sans-Serif" font-size="14.00">create_sender_key_distribution_message</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().</title>
<path fill="none" stroke="gray" d="M1036.79,-310.42C1041.08,-307.78 1045.16,-304.85 1049,-301.58 1086.24,-269.87 1046.75,-228.07 1085,-197.58 1141.29,-152.72 1336.49,-177.05 1407,-162.58 1423.39,-159.22 1426.45,-154.05 1443,-151.58 1528.42,-138.82 1627.33,-145.52 1695.51,-153.43"/>
<polygon fill="gray" stroke="gray" points="1695.42,-156.94 1705.76,-154.65 1696.25,-149.99 1695.42,-156.94"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state().</title>
<path fill="none" stroke="gray" d="M998.41,-310.55C1015.32,-307.58 1032.65,-304.51 1049,-301.58 1088.07,-294.58 1131.48,-286.62 1167.49,-279.98"/>
<polygon fill="gray" stroke="gray" points="1168.25,-283.4 1177.45,-278.14 1166.98,-276.51 1168.25,-283.4"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty().</title>
<path fill="none" stroke="gray" d="M1037.44,-310.54C1041.51,-307.86 1045.38,-304.89 1049,-301.58 1094.51,-259.97 1040,-209.74 1085,-167.58 1112.16,-142.13 1153.6,-134.38 1187.5,-132.86"/>
<polygon fill="gray" stroke="gray" points="1187.85,-136.35 1197.75,-132.57 1187.66,-129.35 1187.85,-136.35"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version().</title>
<path fill="none" stroke="gray" d="M1034.22,-310.4C1039.37,-307.8 1044.32,-304.87 1049,-301.58 1075.39,-283.04 1057.11,-254.77 1085,-238.58 1208.78,-166.75 1265.7,-215.87 1407,-238.58 1439.85,-243.86 1475.28,-255.31 1503.29,-265.82"/>
<polygon fill="gray" stroke="gray" points="1502.28,-269.18 1512.87,-269.49 1504.78,-262.64 1502.28,-269.18"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]seed().</title>
<path fill="none" stroke="gray" d="M1039.68,-346.65C1043,-349.34 1046.12,-352.31 1049,-355.58 1107.12,-421.63 1030.94,-1077.17 1085,-1146.58 1191.85,-1283.79 1428.54,-1287.9 1519.2,-1284.03"/>
<polygon fill="gray" stroke="gray" points="1519.44,-1287.52 1529.26,-1283.54 1519.1,-1280.53 1519.44,-1287.52"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration().</title>
<path fill="none" stroke="gray" d="M1039.72,-346.62C1043.03,-349.32 1046.14,-352.3 1049,-355.58 1121.98,-439.31 1006.63,-1275.87 1085,-1354.58 1114.47,-1384.18 1396.74,-1378.63 1509.4,-1375.19"/>
<polygon fill="gray" stroke="gray" points="1509.56,-1378.68 1519.45,-1374.87 1509.34,-1371.69 1509.56,-1378.68"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M1043.64,-342.93C1149.17,-347.26 1291.8,-341.07 1407,-292.58 1426.73,-284.28 1422.99,-268.19 1443,-260.58 1537.3,-224.73 1581,-213.07 1670,-260.58 1723.32,-289.04 1755.04,-356.6 1769.36,-394.88"/>
<polygon fill="gray" stroke="gray" points="1766.1,-396.17 1772.78,-404.39 1772.69,-393.8 1766.1,-396.17"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().</title>
<path fill="none" stroke="gray" d="M1034.33,-346.6C1039.45,-349.25 1044.36,-352.23 1049,-355.58 1076.41,-375.37 1057.54,-402.87 1085,-422.58 1104.12,-436.31 1127.81,-443.95 1151.05,-448.01"/>
<polygon fill="gray" stroke="gray" points="1150.54,-451.48 1160.96,-449.55 1151.61,-444.56 1150.54,-451.48"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/create_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().</title>
<path fill="none" stroke="gray" d="M1039.67,-346.66C1042.99,-349.35 1046.12,-352.31 1049,-355.58 1104.98,-419.08 1026.81,-1055.11 1085,-1116.58 1134.45,-1168.82 1335.69,-1140.17 1407,-1149.58 1429.56,-1152.56 1453.98,-1156.29 1476.36,-1159.92"/>
<polygon fill="gray" stroke="gray" points="1476.06,-1163.41 1486.49,-1161.57 1477.19,-1156.51 1476.06,-1163.41"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().</title>
<polygon fill="lightgray" stroke="black" points="1304.5,-867.58 1187.5,-867.58 1187.5,-831.58 1304.5,-831.58 1304.5,-867.58"/>
<text text-anchor="middle" x="1246" y="-845.88" font-family="Helvetica,sans-Serif" font-size="14.00">group_encrypt</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().</title>
<path fill="none" stroke="gray" d="M1267.76,-867.79C1301.92,-896.82 1373.18,-953.46 1443,-984.58 1449.97,-987.69 1457.34,-990.46 1464.85,-992.94"/>
<polygon fill="gray" stroke="gray" points="1463.82,-996.29 1474.41,-995.93 1465.91,-989.61 1463.82,-996.29"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv().</title>
<path fill="none" stroke="gray" d="M1257.12,-831.49C1282.38,-788.08 1352.73,-677.56 1443,-622.58 1466.06,-608.54 1495.92,-601.8 1519.08,-598.56"/>
<polygon fill="gray" stroke="gray" points="1519.71,-602.01 1529.2,-597.31 1518.85,-595.07 1519.71,-602.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_private().</title>
<path fill="none" stroke="gray" d="M1304.66,-859.67C1351.03,-867.79 1416.88,-879.32 1469.47,-888.52"/>
<polygon fill="gray" stroke="gray" points="1469.02,-892 1479.47,-890.27 1470.22,-885.1 1469.02,-892"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version().</title>
<path fill="none" stroke="gray" d="M1256.24,-831.42C1283.01,-778.19 1361.59,-617.41 1407,-476.58 1429.64,-406.38 1391.29,-367.17 1443,-314.58 1452.63,-304.78 1465.15,-298.3 1478.32,-294.05"/>
<polygon fill="gray" stroke="gray" points="1479.31,-297.4 1487.99,-291.33 1477.42,-290.66 1479.31,-297.4"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_mut().</title>
<path fill="none" stroke="gray" d="M1304.66,-849.58C1348.48,-849.58 1409.7,-849.58 1460.69,-849.58"/>
<polygon fill="gray" stroke="gray" points="1460.74,-853.08 1470.74,-849.58 1460.74,-846.08 1460.74,-853.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().</title>
<path fill="none" stroke="gray" d="M1264.51,-867.6C1297.33,-902.37 1368.3,-982.4 1407,-1062.58 1434.55,-1119.66 1397.74,-1156.2 1443,-1200.58 1462.95,-1220.15 1494.44,-1226.42 1519.04,-1228.07"/>
<polygon fill="gray" stroke="gray" points="1518.96,-1231.57 1529.11,-1228.52 1519.27,-1224.58 1518.96,-1231.57"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iteration().</title>
<path fill="none" stroke="gray" d="M1304.66,-839.49C1363.81,-829.13 1454.66,-813.23 1509.26,-803.68"/>
<polygon fill="gray" stroke="gray" points="1510.1,-807.08 1519.34,-801.91 1508.89,-800.19 1510.1,-807.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key().</title>
<path fill="none" stroke="gray" d="M1285.74,-867.71C1324.8,-885.47 1387.14,-912.46 1443,-930.58 1449.76,-932.78 1456.81,-934.88 1463.93,-936.88"/>
<polygon fill="gray" stroke="gray" points="1463.09,-940.28 1473.66,-939.53 1464.94,-933.52 1463.09,-940.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]chain_id().</title>
<path fill="none" stroke="gray" d="M1266.7,-831.52C1300.19,-801.92 1371.57,-743.49 1443,-714.58 1537.82,-676.21 1589.6,-739.82 1670,-676.58 1742.64,-619.45 1767.4,-504.38 1775.2,-450.99"/>
<polygon fill="gray" stroke="gray" points="1778.7,-451.26 1776.59,-440.88 1771.76,-450.31 1778.7,-451.26"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key().</title>
<path fill="none" stroke="gray" d="M1262.92,-831.5C1294.09,-797.21 1366.8,-722.51 1443,-681.58 1460.9,-671.97 1481.99,-664.98 1501.05,-660.04"/>
<polygon fill="gray" stroke="gray" points="1501.93,-663.42 1510.8,-657.63 1500.25,-656.63 1501.93,-663.42"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_encrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().</title>
<path fill="none" stroke="gray" d="M1262.94,-867.62C1293.7,-903.07 1362.18,-985.12 1407,-1062.58 1427.34,-1097.74 1411.95,-1120.39 1443,-1146.58 1452.63,-1154.71 1464.3,-1160.47 1476.42,-1164.54"/>
<polygon fill="gray" stroke="gray" points="1475.63,-1167.96 1486.22,-1167.46 1477.63,-1161.25 1475.63,-1167.96"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().</title>
<polygon fill="lightgray" stroke="black" points="1308.5,-1107.58 1183.5,-1107.58 1183.5,-1071.58 1308.5,-1071.58 1308.5,-1107.58"/>
<text text-anchor="middle" x="1246" y="-1085.88" font-family="Helvetica,sans-Serif" font-size="14.00">get_sender_key</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]sender_message_key().</title>
<path fill="none" stroke="gray" d="M1308.72,-1073.2C1347.27,-1063.05 1397.97,-1049.84 1443,-1038.58 1451.66,-1036.42 1460.7,-1034.19 1469.73,-1031.99"/>
<polygon fill="gray" stroke="gray" points="1470.61,-1035.37 1479.51,-1029.61 1468.96,-1028.57 1470.61,-1035.37"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]remove_sender_message_key().</title>
<path fill="none" stroke="gray" d="M1308.69,-1095.58C1344.82,-1099.09 1391.71,-1103.65 1434.9,-1107.85"/>
<polygon fill="gray" stroke="gray" points="1434.62,-1111.34 1444.91,-1108.83 1435.3,-1104.38 1434.62,-1111.34"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]next().</title>
<path fill="none" stroke="gray" d="M1273.39,-1107.72C1309.95,-1132.1 1378.79,-1175.27 1443,-1200.58 1467.68,-1210.31 1496.84,-1217.19 1519.29,-1221.56"/>
<polygon fill="gray" stroke="gray" points="1518.93,-1225.06 1529.4,-1223.46 1520.22,-1218.18 1518.93,-1225.06"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderChainKey]iteration().</title>
<path fill="none" stroke="gray" d="M1260.1,-1107.79C1289.47,-1147.73 1364.2,-1244.55 1443,-1308.58 1463.6,-1325.32 1489.04,-1340.41 1510.51,-1351.82"/>
<polygon fill="gray" stroke="gray" points="1508.96,-1354.96 1519.44,-1356.48 1512.2,-1348.75 1508.96,-1354.96"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]set_sender_chain_key().</title>
<path fill="none" stroke="gray" d="M1275.12,-1071.52C1312.24,-1048.39 1380.22,-1008.47 1443,-984.58 1449.37,-982.16 1456.03,-979.9 1462.78,-977.81"/>
<polygon fill="gray" stroke="gray" points="1464.14,-981.06 1472.73,-974.87 1462.15,-974.35 1464.14,-981.06"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]add_sender_message_key().</title>
<path fill="none" stroke="gray" d="M1308.69,-1084.78C1348.41,-1081.69 1401.14,-1077.59 1447.65,-1073.97"/>
<polygon fill="gray" stroke="gray" points="1448.09,-1077.45 1457.78,-1073.18 1447.54,-1070.47 1448.09,-1077.45"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/get_sender_key().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]sender_chain_key().</title>
<path fill="none" stroke="gray" d="M1308.77,-1095.93C1339.23,-1100.54 1375.98,-1108.39 1407,-1121.58 1424.93,-1129.21 1425.22,-1138.62 1443,-1146.58 1453.6,-1151.33 1465.15,-1155.31 1476.67,-1158.63"/>
<polygon fill="gray" stroke="gray" points="1475.76,-1162.01 1486.33,-1161.26 1477.61,-1155.25 1475.76,-1162.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 protocol/PreKeyRecord_New(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 protocol/PreKeyRecord_New().</title>
<polygon fill="lightgray" stroke="black" points="424.5,-1572.58 277.5,-1572.58 277.5,-1536.58 424.5,-1536.58 424.5,-1572.58"/>
<text text-anchor="middle" x="351" y="-1550.88" font-family="Helvetica,sans-Serif" font-size="14.00">PreKeyRecord_New</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 protocol/PreKeyRecord_New().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 protocol/PreKeyRecord_New().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]serialize().</title>
<path fill="none" stroke="gray" d="M424.61,-1558.21C537.56,-1563.85 752.1,-1574.57 846.25,-1579.27"/>
<polygon fill="gray" stroke="gray" points="846.16,-1582.77 856.32,-1579.77 846.51,-1575.78 846.16,-1582.77"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 protocol/PreKeyRecord_New().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 protocol/PreKeyRecord_New().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]deserialize().</title>
<path fill="none" stroke="gray" d="M424.61,-1550.95C534.31,-1545.47 739.85,-1535.21 837.84,-1530.31"/>
<polygon fill="gray" stroke="gray" points="838.02,-1533.81 847.83,-1529.81 837.67,-1526.82 838.02,-1533.81"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().</title>
<polygon fill="lightgray" stroke="black" points="1304.5,-413.58 1187.5,-413.58 1187.5,-377.58 1304.5,-377.58 1304.5,-413.58"/>
<text text-anchor="middle" x="1246" y="-391.88" font-family="Helvetica,sans-Serif" font-size="14.00">group_decrypt</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]iv().</title>
<path fill="none" stroke="gray" d="M1304.52,-391.45C1338.04,-392.12 1379.08,-398.67 1407,-422.58 1445.43,-455.49 1411.02,-491.38 1443,-530.58 1463.02,-555.11 1494.9,-572.29 1519.63,-582.79"/>
<polygon fill="gray" stroke="gray" points="1518.47,-586.1 1529.05,-586.63 1521.11,-579.62 1518.47,-586.1"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]signing_key_public().</title>
<path fill="none" stroke="gray" d="M1304.71,-380.44C1337.68,-369.49 1378.08,-351.92 1407,-325.58 1431.42,-303.34 1417.12,-281.1 1443,-260.58 1482.07,-229.6 1609.77,-199.15 1695.87,-181.38"/>
<polygon fill="gray" stroke="gray" points="1696.79,-184.77 1705.89,-179.33 1695.39,-177.91 1696.79,-184.77"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyState]message_version().</title>
<path fill="none" stroke="gray" d="M1304.82,-394.12C1337.04,-390.94 1376.66,-382.91 1407,-363.58 1429.79,-349.06 1420.49,-329.53 1443,-314.58 1453.5,-307.61 1465.6,-302.43 1477.9,-298.59"/>
<polygon fill="gray" stroke="gray" points="1479.11,-301.88 1487.78,-295.79 1477.2,-295.15 1479.11,-301.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]sender_key_state_for_chain_id().</title>
<path fill="none" stroke="gray" d="M1304.69,-394.4C1337.05,-396.27 1376.86,-403.05 1407,-422.58 1431.21,-438.27 1419.34,-460.08 1443,-476.58 1445.13,-478.06 1447.32,-479.47 1449.58,-480.79"/>
<polygon fill="gray" stroke="gray" points="1448.07,-483.95 1458.55,-485.54 1451.35,-477.77 1448.07,-483.95"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]chain_ids_for_logging().</title>
<path fill="none" stroke="gray" d="M1304.66,-385.49C1349.22,-377.69 1411.76,-366.74 1463.25,-357.73"/>
<polygon fill="gray" stroke="gray" points="1464.14,-361.13 1473.39,-355.95 1462.93,-354.23 1464.14,-361.13"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/group_decrypt().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderMessageKey]cipher_key().</title>
<path fill="none" stroke="gray" d="M1304.64,-390.04C1338.85,-390.07 1380.56,-396.43 1407,-422.58 1471.21,-486.1 1381,-556.91 1443,-622.58 1457.81,-638.27 1480,-645.55 1500.77,-648.71"/>
<polygon fill="gray" stroke="gray" points="1500.46,-652.2 1510.81,-649.95 1501.32,-645.25 1500.46,-652.2"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/process_sender_key_distribution_message(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/process_sender_key_distribution_message().</title>
<polygon fill="lightgray" stroke="black" points="1049,-292.58 738,-292.58 738,-256.58 1049,-256.58 1049,-292.58"/>
<text text-anchor="middle" x="893.5" y="-270.88" font-family="Helvetica,sans-Serif" font-size="14.00">process_sender_key_distribution_message</text>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/process_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/process_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]new_empty().</title>
<path fill="none" stroke="gray" d="M1035.35,-256.57C1040.13,-253.91 1044.7,-250.92 1049,-247.58 1079.79,-223.66 1054.5,-191.87 1085,-167.58 1113.81,-144.63 1154.64,-136.74 1187.84,-134.53"/>
<polygon fill="gray" stroke="gray" points="1188.07,-138.02 1197.88,-134.01 1187.72,-131.03 1188.07,-138.02"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/process_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 group_cipher/process_sender_key_distribution_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 sender_keys/impl#[SenderKeyRecord]add_sender_key_state().</title>
<path fill="none" stroke="gray" d="M1037.32,-292.75C1041.43,-295.39 1045.34,-298.32 1049,-301.58 1090.91,-338.88 1042.98,-385.4 1085,-422.58 1103,-438.51 1126.77,-446.82 1150.47,-450.82"/>
<polygon fill="gray" stroke="gray" points="1150.21,-454.32 1160.6,-452.28 1151.2,-447.39 1150.21,-454.32"/>
</g>
</g>
</svg>
